From 1e45ccd13642894933b635967b1dfe205ddecfc2 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sun, 17 Mar 2013 11:59:23 -0400
Subject: [PATCH] work on cust ent type

---
 .../com/empireminecraft/entitytype/EntityType.java | 243 +++++++++++++++++++++
 src/main/java/org/bukkit/entity/EntityType.java    |  45 ++--
 2 files changed, 270 insertions(+), 18 deletions(-)
 create mode 100644 src/main/java/com/empireminecraft/entitytype/EntityType.java

diff --git a/src/main/java/com/empireminecraft/entitytype/EntityType.java b/src/main/java/com/empireminecraft/entitytype/EntityType.java
new file mode 100644
index 0000000..f09d35e
--- /dev/null
+++ b/src/main/java/com/empireminecraft/entitytype/EntityType.java
@@ -0,0 +1,243 @@
+package com.empireminecraft.entitytype;
+
+import org.bukkit.entity.*;
+
+import java.util.HashMap;
+import java.util.Map;
+
+public class EntityType  {
+    // These strings MUST match the strings in nms.org.bukkit.entity.EntityTypes and are case sensitive.
+    /**
+     * An item resting on the ground.
+     *
+     * Spawn with {@link org.bukkit.World#dropItem(org.bukkit.Location, org.bukkit.inventory.ItemStack)}
+     * or {@link org.bukkit.World#dropItemNaturally(org.bukkit.Location, org.bukkit.inventory.ItemStack)}
+     */
+    public final static org.bukkit.entity.EntityType
+        DROPPED_ITEM = new org.bukkit.entity.EntityType("Item", Item.class, 1, false);
+    /**
+     * An experience orb.
+     */
+    public final static org.bukkit.entity.EntityType
+        EXPERIENCE_ORB = new org.bukkit.entity.EntityType("XPOrb", ExperienceOrb.class, 2);
+    /**
+     * A painting on a wall.
+     */
+    public final static org.bukkit.entity.EntityType
+        PAINTING = new org.bukkit.entity.EntityType("Painting", Painting.class, 9);
+    /**
+     * An arrow projectile; may get stuck in the ground.
+     */
+    public final static org.bukkit.entity.EntityType ARROW = new org.bukkit.entity.EntityType("Arrow", Arrow.class, 10);
+    /**
+     * A flyinf snowball.
+     */
+    public final static org.bukkit.entity.EntityType
+        SNOWBALL = new org.bukkit.entity.EntityType("Snowball", Snowball.class, 11);
+    /**
+     * A flying large fireball, as thrown by a Ghast for example.
+     */
+    public final static org.bukkit.entity.EntityType
+        FIREBALL = new org.bukkit.entity.EntityType("Fireball", LargeFireball.class, 12);
+    /**
+     * A flying small fireball, such as thrown by a Blaze or player.
+     */
+    public final static org.bukkit.entity.EntityType
+        SMALL_FIREBALL = new org.bukkit.entity.EntityType("SmallFireball", SmallFireball.class, 13);
+    /**
+     * A flying ender pearl.
+     */
+    public final static org.bukkit.entity.EntityType
+        ENDER_PEARL = new org.bukkit.entity.EntityType("ThrownEnderpearl", EnderPearl.class, 14);
+    /**
+     * An ender eye signal.
+     */
+    public final static org.bukkit.entity.EntityType
+        ENDER_SIGNAL = new org.bukkit.entity.EntityType("EyeOfEnderSignal", EnderSignal.class, 15);
+    /**
+     * A flying experience bottle.
+     */
+    public final static org.bukkit.entity.EntityType
+        THROWN_EXP_BOTTLE = new org.bukkit.entity.EntityType("ThrownExpBottle", ThrownExpBottle.class, 17);
+    /**
+     * An item frame on a wall.
+     */
+    public final static org.bukkit.entity.EntityType
+        ITEM_FRAME = new org.bukkit.entity.EntityType("ItemFrame", ItemFrame.class, 18);
+    /**
+     * A flying wither skull projectile.
+     */
+    public final static org.bukkit.entity.EntityType
+        WITHER_SKULL = new org.bukkit.entity.EntityType("WitherSkull", WitherSkull.class, 19);
+    /**
+     * Primed TNT that is about to explode.
+     */
+    public final static org.bukkit.entity.EntityType
+        PRIMED_TNT = new org.bukkit.entity.EntityType("PrimedTnt", TNTPrimed.class, 20);
+    /**
+     * A block that is going to or is about to fall.
+     */
+    public final static org.bukkit.entity.EntityType
+        FALLING_BLOCK = new org.bukkit.entity.EntityType("FallingSand", FallingBlock.class, 21, false);
+    public final static org.bukkit.entity.EntityType
+        FIREWORK = new org.bukkit.entity.EntityType("FireworksRocketEntity", Firework.class, 22, false);
+    /**
+     * A placed minecart of any type.
+     */
+    public final static org.bukkit.entity.EntityType
+        MINECART = new org.bukkit.entity.EntityType("Minecart", Minecart.class, 40);
+    /**
+     * A placed boat.
+     */
+    public final static org.bukkit.entity.EntityType BOAT = new org.bukkit.entity.EntityType("Boat", Boat.class, 41);
+    public final static org.bukkit.entity.EntityType
+        CREEPER = new org.bukkit.entity.EntityType("Creeper", Creeper.class, 50);
+    public final static org.bukkit.entity.EntityType
+        SKELETON = new org.bukkit.entity.EntityType("Skeleton", Skeleton.class, 51);
+    public final static org.bukkit.entity.EntityType
+        SPIDER = new org.bukkit.entity.EntityType("Spider", Spider.class, 52);
+    public final static org.bukkit.entity.EntityType GIANT = new org.bukkit.entity.EntityType("Giant", Giant.class, 53);
+    public final static org.bukkit.entity.EntityType
+        ZOMBIE = new org.bukkit.entity.EntityType("Zombie", Zombie.class, 54);
+    public final static org.bukkit.entity.EntityType SLIME = new org.bukkit.entity.EntityType("Slime", Slime.class, 55);
+    public final static org.bukkit.entity.EntityType GHAST = new org.bukkit.entity.EntityType("Ghast", Ghast.class, 56);
+    public final static org.bukkit.entity.EntityType
+        PIG_ZOMBIE = new org.bukkit.entity.EntityType("PigZombie", PigZombie.class, 57);
+    public final static org.bukkit.entity.EntityType
+        ENDERMAN = new org.bukkit.entity.EntityType("Enderman", Enderman.class, 58);
+    public final static org.bukkit.entity.EntityType
+        CAVE_SPIDER = new org.bukkit.entity.EntityType("CaveSpider", CaveSpider.class, 59);
+    public final static org.bukkit.entity.EntityType
+        SILVERFISH = new org.bukkit.entity.EntityType("Silverfish", Silverfish.class, 60);
+    public final static org.bukkit.entity.EntityType BLAZE = new org.bukkit.entity.EntityType("Blaze", Blaze.class, 61);
+    public final static org.bukkit.entity.EntityType
+        MAGMA_CUBE = new org.bukkit.entity.EntityType("LavaSlime", MagmaCube.class, 62);
+    public final static org.bukkit.entity.EntityType
+        ENDER_DRAGON = new org.bukkit.entity.EntityType("EnderDragon", EnderDragon.class, 63);
+    public final static org.bukkit.entity.EntityType
+        WITHER = new org.bukkit.entity.EntityType("WitherBoss", Wither.class, 64);
+    public final static org.bukkit.entity.EntityType BAT = new org.bukkit.entity.EntityType("Bat", Bat.class, 65);
+    public final static org.bukkit.entity.EntityType WITCH = new org.bukkit.entity.EntityType("Witch", Witch.class, 66);
+    public final static org.bukkit.entity.EntityType PIG = new org.bukkit.entity.EntityType("Pig", Pig.class, 90);
+    public final static org.bukkit.entity.EntityType SHEEP = new org.bukkit.entity.EntityType("Sheep", Sheep.class, 91);
+    public final static org.bukkit.entity.EntityType COW = new org.bukkit.entity.EntityType("Cow", Cow.class, 92);
+    public final static org.bukkit.entity.EntityType
+        CHICKEN = new org.bukkit.entity.EntityType("Chicken", Chicken.class, 93);
+    public final static org.bukkit.entity.EntityType SQUID = new org.bukkit.entity.EntityType("Squid", Squid.class, 94);
+    public final static org.bukkit.entity.EntityType WOLF = new org.bukkit.entity.EntityType("Wolf", Wolf.class, 95);
+    public final static org.bukkit.entity.EntityType
+        MUSHROOM_COW = new org.bukkit.entity.EntityType("MushroomCow", MushroomCow.class, 96);
+    public final static org.bukkit.entity.EntityType
+        SNOWMAN = new org.bukkit.entity.EntityType("SnowMan", Snowman.class, 97);
+    public final static org.bukkit.entity.EntityType
+        OCELOT = new org.bukkit.entity.EntityType("Ozelot", Ocelot.class, 98);
+    public final static org.bukkit.entity.EntityType
+        IRON_GOLEM = new org.bukkit.entity.EntityType("VillagerGolem", IronGolem.class, 99);
+    public final static org.bukkit.entity.EntityType
+        VILLAGER = new org.bukkit.entity.EntityType("Villager", Villager.class, 120);
+    public final static org.bukkit.entity.EntityType
+        ENDER_CRYSTAL = new org.bukkit.entity.EntityType("EnderCrystal", EnderCrystal.class, 200);
+    // These don't have an entity ID in nms.org.bukkit.entity.EntityTypes.
+    /**
+     * A flying splash potion.
+     */
+    public final static org.bukkit.entity.EntityType
+        SPLASH_POTION = new org.bukkit.entity.EntityType(null, ThrownPotion.class, -1, false);
+    /**
+     * A flying chicken egg.
+     */
+    public final static org.bukkit.entity.EntityType EGG = new org.bukkit.entity.EntityType(null, Egg.class, -1, false);
+    /**
+     * A fishing line and bobber.
+     */
+    public final static org.bukkit.entity.EntityType
+        FISHING_HOOK = new org.bukkit.entity.EntityType(null, Fish.class, -1, false);
+    /**
+     * A bolt of lightning.
+     *
+     * Spawn with {@link org.bukkit.World#strikeLightning(org.bukkit.Location)}.
+     */
+    public final static org.bukkit.entity.EntityType
+        LIGHTNING = new org.bukkit.entity.EntityType(null, LightningStrike.class, -1, false);
+    public final static org.bukkit.entity.EntityType
+        WEATHER = new org.bukkit.entity.EntityType(null, Weather.class, -1, false);
+    public final static org.bukkit.entity.EntityType
+        PLAYER = new org.bukkit.entity.EntityType(null, Player.class, -1, false);
+    public final static org.bukkit.entity.EntityType
+        COMPLEX_PART = new org.bukkit.entity.EntityType(null, ComplexEntityPart.class, -1, false);
+    /**
+     * An unknown entity without an Entity Class
+     */
+    public final static org.bukkit.entity.EntityType UNKNOWN = new org.bukkit.entity.EntityType(null, null, -1, false);
+
+
+    private String name;
+    private Class<? extends Entity> clazz;
+    private short typeId;
+    private boolean independent, living;
+
+    private static final Map<String, EntityType> NAME_MAP = new HashMap<String, EntityType>();
+    private static final Map<Short, EntityType> ID_MAP = new HashMap<Short, EntityType>();
+
+
+    public EntityType(String name, Class<? extends Entity> clazz, int typeId) {
+        this(name, clazz, typeId, true);
+    }
+
+    public EntityType(String name, Class<? extends Entity> clazz, int typeId, boolean independent) {
+        if (name != null) {
+            NAME_MAP.put(name.toLowerCase(), this);
+        }
+        if (typeId > 0) {
+            ID_MAP.put((short)typeId, this);
+        }
+        this.name = name;
+        this.clazz = clazz;
+        this.typeId = (short) typeId;
+        this.independent = independent;
+        if (clazz != null) {
+            this.living = LivingEntity.class.isAssignableFrom(clazz);
+        }
+    }
+
+    public String name() { return getName(); };
+    public String getName() {
+        return name;
+    }
+
+    public Class<? extends Entity> getEntityClass() {
+        return clazz;
+    }
+
+    public short getTypeId() {
+        return typeId;
+    }
+
+    public static org.bukkit.entity.EntityType fromName(String name) {
+        if (name == null) {
+            return null;
+        }
+        return (org.bukkit.entity.EntityType) NAME_MAP.get(name.toLowerCase());
+    }
+
+    public static org.bukkit.entity.EntityType fromId(int id) {
+        if (id > Short.MAX_VALUE) {
+            return null;
+        }
+        return (org.bukkit.entity.EntityType) ID_MAP.get((short) id);
+    }
+
+    /**
+     * Some entities cannot be spawned using
+     * or {@link org.bukkit.World#spawn(org.bukkit.Location, Class)}, usually
+     * because they require additional information in order to spawn.
+     * @return False if the entity type cannot be spawned
+     */
+    public boolean isSpawnable() {
+        return independent;
+    }
+
+    public boolean isAlive() {
+        return living;
+    }
+}
diff --git a/src/main/java/org/bukkit/entity/EntityType.java b/src/main/java/org/bukkit/entity/EntityType.java
index b83a070..7beea30 100644
--- a/src/main/java/org/bukkit/entity/EntityType.java
+++ b/src/main/java/org/bukkit/entity/EntityType.java
@@ -6,8 +6,17 @@ import java.util.Map;
 import org.bukkit.inventory.ItemStack;
 import org.bukkit.Location;
 import org.bukkit.World;
-
-public enum EntityType {
+// EMC start
+public class EntityType extends com.empireminecraft.entitytype.EntityType {
+    public EntityType(String name, Class<? extends Entity> clazz, int typeId) {
+        super(name, clazz, typeId);
+    }
+    public EntityType(String name, Class<? extends Entity> clazz, int typeId, boolean independent) {
+        super(name, clazz, typeId, independent);
+    }
+}
+enum OldEntityType {
+// EMC end
     // These strings MUST match the strings in nms.EntityTypes and are case sensitive.
     /**
      * An item resting on the ground.
@@ -137,26 +146,26 @@ public enum EntityType {
     private Class<? extends Entity> clazz;
     private short typeId;
     private boolean independent, living;
+    /* EMC
+        private static final Map<String, EntityType> NAME_MAP = new HashMap<String, EntityType>();
+        private static final Map<Short, EntityType> ID_MAP = new HashMap<Short, EntityType>();
 
-    private static final Map<String, EntityType> NAME_MAP = new HashMap<String, EntityType>();
-    private static final Map<Short, EntityType> ID_MAP = new HashMap<Short, EntityType>();
-
-    static {
-        for (EntityType type : values()) {
-            if (type.name != null) {
-                NAME_MAP.put(type.name.toLowerCase(), type);
-            }
-            if (type.typeId > 0) {
-                ID_MAP.put(type.typeId, type);
+        static {
+            for (OldEntityType type : values()) {
+                if (type.name != null) {
+                    NAME_MAP.put(type.name.toLowerCase(), type);
+                }
+                if (type.typeId > 0) {
+                    ID_MAP.put(type.typeId, type);
+                }
             }
         }
-    }
-
-    private EntityType(String name, Class<? extends Entity> clazz, int typeId) {
+    */ // EMC
+    private OldEntityType(String name, Class<? extends Entity> clazz, int typeId) {
         this(name, clazz, typeId, true);
     }
 
-    private EntityType(String name, Class<? extends Entity> clazz, int typeId, boolean independent) {
+    private OldEntityType(String name, Class<? extends Entity> clazz, int typeId, boolean independent) {
         this.name = name;
         this.clazz = clazz;
         this.typeId = (short) typeId;
@@ -165,7 +174,7 @@ public enum EntityType {
             this.living = LivingEntity.class.isAssignableFrom(clazz);
         }
     }
-
+/* EMC
     public String getName() {
         return name;
     }
@@ -191,7 +200,7 @@ public enum EntityType {
         }
         return ID_MAP.get((short) id);
     }
-
+*/ // EMC
     /**
      * Some entities cannot be spawned using {@link World#spawnEntity(Location, EntityType)}
      * or {@link World#spawn(Location, Class)}, usually
-- 
1.8.2

