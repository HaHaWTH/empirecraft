From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sun, 4 Dec 2016 15:02:53 -0500
Subject: [PATCH] FlowerPot Events

---
 .../customevents/FlowerPotPlantEvent.java     | 34 ++++++++++
 .../customevents/FlowerPotRemoveEvent.java    | 67 +++++++++++++++++++
 2 files changed, 101 insertions(+)
 create mode 100644 src/main/java/com/empireminecraft/customevents/FlowerPotPlantEvent.java
 create mode 100644 src/main/java/com/empireminecraft/customevents/FlowerPotRemoveEvent.java

diff --git a/src/main/java/com/empireminecraft/customevents/FlowerPotPlantEvent.java b/src/main/java/com/empireminecraft/customevents/FlowerPotPlantEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..67d0ea7876cc163ac9d3fe47e4eea7fcbb7b5550
--- /dev/null
+++ b/src/main/java/com/empireminecraft/customevents/FlowerPotPlantEvent.java
@@ -0,0 +1,34 @@
+package com.empireminecraft.customevents;
+
+import org.bukkit.Location;
+import org.bukkit.block.Block;
+import org.bukkit.event.Event;
+import org.bukkit.event.HandlerList;
+import org.bukkit.inventory.ItemStack;
+
+public class FlowerPotPlantEvent extends Event {
+    private final Block block;
+    private final ItemStack item;
+    public FlowerPotPlantEvent(Location loc, ItemStack itemstack) {
+        this.block = loc.getBlock();
+        this.item = itemstack;
+    }
+
+    public Block getBlock() {
+        return block;
+    }
+
+    public ItemStack getItem() {
+        return item;
+    }
+
+    private static final HandlerList handlers = new HandlerList();
+
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+}
diff --git a/src/main/java/com/empireminecraft/customevents/FlowerPotRemoveEvent.java b/src/main/java/com/empireminecraft/customevents/FlowerPotRemoveEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..067d9670be32ac2f98192e4c0bf872c37f48af5a
--- /dev/null
+++ b/src/main/java/com/empireminecraft/customevents/FlowerPotRemoveEvent.java
@@ -0,0 +1,67 @@
+/*
+ * Copyright (c) 2019 Daniel Ennis (Aikar) MIT License
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining
+ *  a copy of this software and associated documentation files (the
+ *  "Software"), to deal in the Software without restriction, including
+ *  without limitation the rights to use, copy, modify, merge, publish,
+ *  distribute, sublicense, and/or sell copies of the Software, and to
+ *  permit persons to whom the Software is furnished to do so, subject to
+ *  the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be
+ *  included in all copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+ *  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+ *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+ *  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+ *  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+ *  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+ *  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.empireminecraft.customevents;
+
+import org.bukkit.Location;
+import org.bukkit.block.Block;
+import org.bukkit.entity.Player;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.player.PlayerEvent;
+import org.bukkit.inventory.ItemStack;
+import org.jetbrains.annotations.NotNull;
+
+public class FlowerPotRemoveEvent extends PlayerEvent {
+    private final Block block;
+    private ItemStack item;
+
+    public FlowerPotRemoveEvent(Player player, Location loc, ItemStack itemstack) {
+        super(player);
+        this.block = loc.getBlock();
+        this.item = itemstack;
+    }
+
+    public Block getBlock() {
+        return block;
+    }
+
+    public ItemStack getItem() {
+        return item;
+    }
+
+    public void setItem(ItemStack itemStack) {
+        item = itemStack;
+    }
+
+    private static final HandlerList handlers = new HandlerList();
+
+    @NotNull
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+
+}
