From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Tue, 6 Dec 2016 22:31:40 -0500
Subject: [PATCH] Entity AI API


diff --git a/src/main/java/com/empireminecraft/api/EAPI_Entity.java b/src/main/java/com/empireminecraft/api/EAPI_Entity.java
index 57f980fec4b95853dca653444c297e904c4f3597..2642ac015d9f3f5256a27852a7d39dec6114324c 100644
--- a/src/main/java/com/empireminecraft/api/EAPI_Entity.java
+++ b/src/main/java/com/empireminecraft/api/EAPI_Entity.java
@@ -23,9 +23,18 @@
 
 package com.empireminecraft.api;
 
+import com.destroystokyo.paper.entity.RangedEntity;
+import org.bukkit.entity.Mob;
 import com.empireminecraft.api.EntityTask.TaskHandler;
+import org.bukkit.Location;
 import org.bukkit.World;
+import org.bukkit.entity.Animals;
+import org.bukkit.entity.Creature;
+import org.bukkit.entity.EnderSignal;
 import org.bukkit.entity.Entity;
+import org.bukkit.entity.Item;
+import org.bukkit.entity.Spider;
+import org.bukkit.entity.Wolf;
 import org.jetbrains.annotations.NotNull;
 import org.jetbrains.annotations.Nullable;
 
@@ -99,4 +108,56 @@ public interface EAPI_Entity {
 
     @NotNull
     <T extends Entity> EntityTask<T> scheduleTask(@NotNull T entity, int interval, @NotNull EntityTask<T> task);
+
+    boolean isEntityDisabled(@NotNull org.bukkit.entity.Entity entity);
+
+    void setItemCanDespawn(@NotNull Item item, boolean canDespawn);
+
+    /**
+     * Disables Ticking on an Entity
+     *
+     * @param entity
+     * @param disabled
+     */
+    void setDisabledEntity(@NotNull org.bukkit.entity.Entity entity, boolean disabled);
+
+    int getLove(@NotNull Animals animal);
+
+    void setLove(@NotNull Animals animal, int love);
+
+    void setFireProof(@NotNull Mob entity, boolean flag);
+
+    void setFirePanicProof(@NotNull Mob entity, boolean flag);
+
+    void makeAggressive(@NotNull Creature creature, float range);
+
+    void makeAggressiveDuringDay(@NotNull Spider spider, boolean attack);
+
+    boolean isAggressive(@NotNull Creature creature);
+
+    void makePeaceful(@NotNull Mob entity);
+
+    void addGoalByName(@NotNull Mob entity, @NotNull String goalName, boolean isTargetGoal, int tickRate, @NotNull Class<?>[] argClasses, @NotNull Object... args);
+
+    void removeGoalByName(@NotNull Mob entity, @NotNull String goalName);
+
+    void setEntitySize(@NotNull org.bukkit.entity.Entity entity, float width, float height);
+
+    void setTargetRange(@NotNull Mob entity, @Nullable Double range);
+
+    void setRangedAttackDistance(@NotNull RangedEntity monster, float range);
+
+    void setRangedAttackSpeed(@NotNull RangedEntity monster, @Nullable Integer min, @Nullable Integer max);
+
+    void setAlwaysAngry(@NotNull Wolf wolf, boolean alwaysAngry);
+
+    void respawnEntity(@NotNull org.bukkit.entity.Entity entity);
+
+    void setEnderSignalLife(@NotNull EnderSignal enderSignal, int lifeTime);
+
+    int getEnderSignalLife(@NotNull EnderSignal enderSignal);
+
+    void setEnderSignalSpeed(@NotNull EnderSignal enderSignal, double speed);
+
+    void setEnderSignalDestination(@NotNull EnderSignal enderSignal, @NotNull Location target);
 }
diff --git a/src/main/java/org/bukkit/entity/Blaze.java b/src/main/java/org/bukkit/entity/Blaze.java
index 7a5505b7fa84629f81c152fb6da90bdb2392f9df..5f4161c89ad30f38ba9af338795a95e1e4499f27 100644
--- a/src/main/java/org/bukkit/entity/Blaze.java
+++ b/src/main/java/org/bukkit/entity/Blaze.java
@@ -4,5 +4,10 @@ package org.bukkit.entity;
  * Represents a Blaze monster
  */
 public interface Blaze extends Monster {
-
+    // EMC start
+    void setFireballs(int num);
+    int getNumFireballs();
+    int getTimeBetweenFireballs();
+    void setTimeBetweenFireballs(int timeBetweenFireballs);
+    // EMC end
 }
diff --git a/src/main/java/org/bukkit/entity/EnderSignal.java b/src/main/java/org/bukkit/entity/EnderSignal.java
index 1bba155d80621852acd187e181423afc577899ea..fea11b6a263c5fa165bf94e3be8c1458f960f4a4 100644
--- a/src/main/java/org/bukkit/entity/EnderSignal.java
+++ b/src/main/java/org/bukkit/entity/EnderSignal.java
@@ -26,7 +26,12 @@ public interface EnderSignal extends Entity {
      *
      * @param location the new target location
      */
-    public void setTargetLocation(@NotNull Location location);
+    // EMC start
+    default void setTargetLocation(@NotNull Location location) {
+        setTargetLocation(location, false);
+    }
+    void setTargetLocation(@NotNull Location location, boolean useExactTarget);
+    // EMC end
 
     /**
      * Gets if the EnderSignal should drop an item on death.<br>
diff --git a/src/main/java/org/bukkit/entity/Ghast.java b/src/main/java/org/bukkit/entity/Ghast.java
index 3f5edf76ce303502cf4eeeb76f22f21f568dad5a..324ac12e1ca825dbdc107f452da440b32443203a 100644
--- a/src/main/java/org/bukkit/entity/Ghast.java
+++ b/src/main/java/org/bukkit/entity/Ghast.java
@@ -3,4 +3,8 @@ package org.bukkit.entity;
 /**
  * Represents a Ghast.
  */
-public interface Ghast extends Flying {}
+public interface Ghast extends Flying {
+
+    int getFireballCooldown(); // EMC
+    void setFireballCooldown(int cooldown); // EMC
+}
