From d454367e922bc14bd35387600bd2f8364eeae693 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Tue, 13 Dec 2016 00:40:35 -0500
Subject: [PATCH] Villager Treasure Map Events

---
 .../java/com/empireminecraft/api/EAPI_Misc.java    |  9 +++
 .../CreatePendingTreasureMapEvent.java             | 65 +++++++++++++++++++
 .../customevents/CreateTreasureMapEvent.java       | 75 ++++++++++++++++++++++
 3 files changed, 149 insertions(+)
 create mode 100644 src/main/java/com/empireminecraft/customevents/CreatePendingTreasureMapEvent.java
 create mode 100644 src/main/java/com/empireminecraft/customevents/CreateTreasureMapEvent.java

diff --git a/src/main/java/com/empireminecraft/api/EAPI_Misc.java b/src/main/java/com/empireminecraft/api/EAPI_Misc.java
index 22dfe478..1e6ba70e 100644
--- a/src/main/java/com/empireminecraft/api/EAPI_Misc.java
+++ b/src/main/java/com/empireminecraft/api/EAPI_Misc.java
@@ -25,6 +25,7 @@ package com.empireminecraft.api;
 
 import com.destroystokyo.paper.MinecraftKey;
 import org.bukkit.entity.EntityType;
+import org.bukkit.entity.Player;
 import org.bukkit.inventory.ItemStack;
 
 import javax.annotation.Nonnull;
@@ -45,4 +46,12 @@ public abstract class EAPI_Misc {
      * @return
      */
     public abstract ItemStack spawnEggAsType(@Nonnull ItemStack bukkitItem, @Nonnull MinecraftKey key);
+
+    /**
+     * Creates A treasure map out of a pending treasure map
+     * @param player
+     * @param item
+     * @return
+     */
+    public abstract ItemStack createTreasureMap(Player player, ItemStack item);
 }
diff --git a/src/main/java/com/empireminecraft/customevents/CreatePendingTreasureMapEvent.java b/src/main/java/com/empireminecraft/customevents/CreatePendingTreasureMapEvent.java
new file mode 100644
index 00000000..00c6eff9
--- /dev/null
+++ b/src/main/java/com/empireminecraft/customevents/CreatePendingTreasureMapEvent.java
@@ -0,0 +1,65 @@
+/*
+ * Copyright (c) 2016 Starlis LLC / Daniel Ennis (Aikar) - MIT License
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining
+ *  a copy of this software and associated documentation files (the
+ *  "Software"), to deal in the Software without restriction, including
+ *  without limitation the rights to use, copy, modify, merge, publish,
+ *  distribute, sublicense, and/or sell copies of the Software, and to
+ *  permit persons to whom the Software is furnished to do so, subject to
+ *  the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be
+ *  included in all copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+ *  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+ *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+ *  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+ *  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+ *  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+ *  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.empireminecraft.customevents;
+
+import org.bukkit.event.Event;
+import org.bukkit.event.HandlerList;
+import org.bukkit.inventory.ItemStack;
+
+public class CreatePendingTreasureMapEvent extends Event {
+    private final String mapType;
+    private final int iconTypeId;
+    private ItemStack item;
+
+    public CreatePendingTreasureMapEvent(String mapType, int iconTypeId) {
+        this.mapType = mapType;
+        this.iconTypeId = iconTypeId;
+    }
+
+    public String getMapType() {
+        return mapType;
+    }
+
+    public int getIconTypeId() {
+        return iconTypeId;
+    }
+
+    public ItemStack getItem() {
+        return item;
+    }
+
+    public void setItem(ItemStack item) {
+        this.item = item;
+    }
+
+    private static final HandlerList handlers = new HandlerList();
+
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+}
diff --git a/src/main/java/com/empireminecraft/customevents/CreateTreasureMapEvent.java b/src/main/java/com/empireminecraft/customevents/CreateTreasureMapEvent.java
new file mode 100644
index 00000000..461ae873
--- /dev/null
+++ b/src/main/java/com/empireminecraft/customevents/CreateTreasureMapEvent.java
@@ -0,0 +1,75 @@
+/*
+ * Copyright (c) 2016 Starlis LLC / Daniel Ennis (Aikar) - MIT License
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining
+ *  a copy of this software and associated documentation files (the
+ *  "Software"), to deal in the Software without restriction, including
+ *  without limitation the rights to use, copy, modify, merge, publish,
+ *  distribute, sublicense, and/or sell copies of the Software, and to
+ *  permit persons to whom the Software is furnished to do so, subject to
+ *  the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be
+ *  included in all copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+ *  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+ *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+ *  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+ *  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+ *  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+ *  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.empireminecraft.customevents;
+
+import org.bukkit.entity.Player;
+import org.bukkit.event.Event;
+import org.bukkit.event.HandlerList;
+import org.bukkit.inventory.ItemStack;
+
+public class CreateTreasureMapEvent extends Event {
+    private final Player player;
+    private final ItemStack item;
+    private String mapType;
+    private Integer iconType;
+
+    public CreateTreasureMapEvent(Player player, ItemStack item) {
+        this.player = player;
+        this.item = item;
+    }
+
+    public void setMapType(String mapType) {
+        this.mapType = mapType;
+    }
+
+    public void setIconType(int iconType) {
+        this.iconType = iconType;
+    }
+
+    public Player getPlayer() {
+        return player;
+    }
+
+    public ItemStack getItem() {
+        return item;
+    }
+
+    public String getMapType() {
+        return mapType;
+    }
+
+    public Integer getIconType() {
+        return iconType;
+    }
+
+    private static final HandlerList handlers = new HandlerList();
+
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+}
-- 
2.11.0

