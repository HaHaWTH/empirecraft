From 392204701e90a628611c98f4917ac3756ac5f6b4 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sun, 10 Jun 2018 12:43:51 -0400
Subject: [PATCH] Refactor LootPool Luck Impact

Rewrites the Vanilla luck application formula so that luck can be
applied to items that do not have any quality defined.

-----------

The rough summary is:
My goal was that in a pool, when luck was applied, the pool
rebalances so the percentages for bigger items is
lowered and smaller items is boosted.

Do this by boosting and then reducing the weight value,
so that larger numbers are penalized more than smaller numbers.
resulting in a larger reduction of entries for more common
items than the reduction on small weights,
giving smaller weights more of a chance

-----------

This work kind of obsoletes quality, but quality would be useful
for 2 items with same weight that you want luck to impact
in varying directions.

Fishing still falls into that as the weights are closer, so luck
will invalidate junk more.

This change will result in some major changes to fishing formulas.

-----------

I would love to see this change in Vanilla, so Mojang please pull :)
---
 .../minecraft/server/LotoSelectorEntry.java   | 42 +++++++++++++++++--
 1 file changed, 39 insertions(+), 3 deletions(-)

diff --git a/src/main/java/net/minecraft/server/LotoSelectorEntry.java b/src/main/java/net/minecraft/server/LotoSelectorEntry.java
index a42c7755e5..24ba1a393f 100644
--- a/src/main/java/net/minecraft/server/LotoSelectorEntry.java
+++ b/src/main/java/net/minecraft/server/LotoSelectorEntry.java
@@ -14,8 +14,8 @@ import java.util.Random;
 
 public abstract class LotoSelectorEntry {
 
-    protected final int c;
-    protected final int d;
+    protected final int c; public int getWeight() { return c; } // EMC - OBF HELPER
+    protected final int d; public int getQuality() { return d; } // EMC - OBF HELPER
     protected final LootItemCondition[] e;
 
     protected LotoSelectorEntry(int i, int j, LootItemCondition[] alootitemcondition) {
@@ -25,7 +25,43 @@ public abstract class LotoSelectorEntry {
     }
 
     public int a(float f) {
-        return Math.max(MathHelper.d((float) this.c + (float) this.d * f), 0);
+        // EMC - Refactor how Loot bonus applies
+        /* base does not include vanilla quality modifer in this table, but does in code
+                BASE    IMPACTED    REDUCED V PCT   M PCT   PCT CHANGE
+        ITEM 1  400     12          388     26.67   27.75   1.087
+        ITEM 2  100     0           100     6.67    7.15    0.486
+        ITEM 3  1000    90          910     66.67   65.09   -1.574
+        TOTAL   1500                1398
+
+        LUCK (*10)  100
+
+                BASE    IMPACTED    REDUCED V PCT   M PCT   PCT CHANGE
+        ITEM 1  4000    1560        3220    31.74   39.03   7.284
+        ITEM 2  100     0           100     0.79    1.21    0.418
+        ITEM 3  8500    7140        4930    67.46   59.76   -7.703
+        TOTAL   12600               8250
+
+        LUCK (*10)  50
+        */
+        // This is vanilla
+        float qualityModifer = (float) this.getQuality() * f;
+        double baseWeight = (this.getWeight() + qualityModifer);
+        if (!Boolean.getBoolean("use-new-luck")) {
+            return (int) Math.max(0, Math.floor(baseWeight));
+        }
+        // Random boost to avoid losing precision in the final int cast on return
+        final int weightBoost = 100;
+        baseWeight *= weightBoost;
+        // If we have vanilla 1, bump that down to 0 so nothing is is impacted
+        // vanilla 3 = 300, 200 basis = impact 2%
+        // =($B2*(($B2-100)/100/100))
+        double impacted = baseWeight * ((baseWeight - weightBoost) / weightBoost / 100);
+        // =($B$7/100)
+        float luckModifier = Math.min(100, f * 10) / 100;
+        // =B2 - (C2 *($B$7/100))
+        double reduced = Math.ceil(baseWeight - (impacted * luckModifier));
+        return (int) Math.max(0, reduced);
+        // EMC
     }
 
     public abstract void a(Collection<ItemStack> collection, Random random, LootTableInfo loottableinfo);
-- 
2.17.1

