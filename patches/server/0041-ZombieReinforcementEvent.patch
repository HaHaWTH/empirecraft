From a8ab7d62a442d4101288369ec16e66bc4d7dc25d Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sat, 22 Mar 2014 23:52:54 -0400
Subject: [PATCH] ZombieReinforcementEvent

Control when a zombie reinforcement event should occur (modify chance)
also makes it run on all difficulty levels
---
 .../customevents/ZombieReinforcementEvent.java     | 53 ++++++++++++++++++++++
 .../java/net/minecraft/server/EntityZombie.java    | 12 ++++-
 2 files changed, 64 insertions(+), 1 deletion(-)
 create mode 100644 src/main/java/com/empireminecraft/customevents/ZombieReinforcementEvent.java

diff --git a/src/main/java/com/empireminecraft/customevents/ZombieReinforcementEvent.java b/src/main/java/com/empireminecraft/customevents/ZombieReinforcementEvent.java
new file mode 100644
index 0000000..af0dc16
--- /dev/null
+++ b/src/main/java/com/empireminecraft/customevents/ZombieReinforcementEvent.java
@@ -0,0 +1,53 @@
+package com.empireminecraft.customevents;
+
+import org.bukkit.craftbukkit.entity.CraftEntity;
+import org.bukkit.entity.LivingEntity;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.entity.EntityEvent;
+
+public class ZombieReinforcementEvent extends EntityEvent implements Cancellable {
+    private static final HandlerList handlers = new HandlerList();
+    private final LivingEntity attacker;
+    private double chance;
+
+    public ZombieReinforcementEvent(
+        CraftEntity entity, CraftEntity livingEntity, double chance) {
+        super(entity);
+        attacker = (LivingEntity) livingEntity;
+        this.chance = chance;
+    }
+
+
+    public LivingEntity getAttacker() {
+        return attacker;
+    }
+
+    public double getChance() {
+        return chance;
+    }
+
+    public void setChance(double chance) {
+        this.chance = chance;
+    }
+
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+
+    private boolean cancelled = false;
+
+    @Override
+    public boolean isCancelled() {
+        return cancelled;
+    }
+
+    @Override
+    public void setCancelled(boolean cancel) {
+        cancelled = cancel;
+    }
+}
diff --git a/src/main/java/net/minecraft/server/EntityZombie.java b/src/main/java/net/minecraft/server/EntityZombie.java
index 0b0eef3..ee48b76 100644
--- a/src/main/java/net/minecraft/server/EntityZombie.java
+++ b/src/main/java/net/minecraft/server/EntityZombie.java
@@ -183,7 +183,17 @@ public class EntityZombie extends EntityMonster {
                 entityliving = (EntityLiving) damagesource.getEntity();
             }
 
-            if (entityliving != null && this.world.getDifficulty() == EnumDifficulty.HARD && (double) this.random.nextFloat() < this.getAttributeInstance(EntityZombie.a).getValue() && this.world.getGameRules().getBoolean("doMobSpawning")) {
+            // EMC start
+            boolean spawnReinforcements = false;
+            if (entityliving != null && this.world.getGameRules().getBoolean("doMobSpawning")) {
+                final double chance = this.getAttributeInstance(EntityZombie.a).getValue();
+                com.empireminecraft.customevents.ZombieReinforcementEvent event = new com.empireminecraft.customevents.ZombieReinforcementEvent(this.getBukkitEntity(),entityliving.getBukkitEntity(), chance);
+                if (event.callEvent()) {
+                    spawnReinforcements = this.random.nextFloat() < event.getChance();
+                }
+            }
+            if (spawnReinforcements) {
+            // EMC end
                 int i = MathHelper.floor(this.locX);
                 int j = MathHelper.floor(this.locY);
                 int k = MathHelper.floor(this.locZ);
-- 
2.8.0

