From 2e4ce70f545ce8a915803b5668bce624c6b07e45 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Mon, 9 Sep 2013 19:41:07 -0400
Subject: [PATCH] Better hopper events

---
 .../empireminecraft/customevents/HopperEvents.java | 105 +++++++++++++++++++++
 src/main/java/net/minecraft/server/IHopper.java    |   6 +-
 .../net/minecraft/server/TileEntityHopper.java     |   5 +-
 3 files changed, 112 insertions(+), 4 deletions(-)
 create mode 100644 src/main/java/com/empireminecraft/customevents/HopperEvents.java

diff --git a/src/main/java/com/empireminecraft/customevents/HopperEvents.java b/src/main/java/com/empireminecraft/customevents/HopperEvents.java
new file mode 100644
index 0000000..2697602
--- /dev/null
+++ b/src/main/java/com/empireminecraft/customevents/HopperEvents.java
@@ -0,0 +1,105 @@
+package com.empireminecraft.customevents;
+
+import net.minecraft.server.BlockPosition;
+import net.minecraft.server.EnumDirection;
+import org.bukkit.Bukkit;
+import org.bukkit.Location;
+import org.bukkit.World;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.Event;
+import org.bukkit.event.HandlerList;
+import org.bukkit.inventory.Inventory;
+
+public class HopperEvents {
+    public static boolean drain(CraftWorld world, Inventory inventory, double x, double y, double z) {
+        Drain event = new Drain(world, inventory, x, y, z);
+        Bukkit.getPluginManager().callEvent(event);
+        return event.isCancelled();
+    }
+    public static boolean fill(CraftWorld world, Inventory inventory, BlockPosition position, EnumDirection enumdirection)  {
+        Fill event = new Fill(world, inventory,
+            position.getX(),
+            position.getY(),
+            position.getZ(),
+            enumdirection.getAdjacentX(),
+            enumdirection.getAdjacentY(),
+            enumdirection.getAdjacentZ()
+        );
+        Bukkit.getPluginManager().callEvent(event);
+        return event.isCancelled();
+    }
+
+    public static class Drain extends Event implements Cancellable {
+        private static final HandlerList handlers = new HandlerList();
+        private final Inventory inventory;
+        private boolean canceled;
+        Location loc;
+        public Drain(World world, Inventory inventory, double x, double y, double z) {
+            this.inventory = inventory;
+            loc = new Location(world, x, y, z);
+        }
+        public Location getHopperLocation() {
+            return this.loc;
+        }
+
+        public boolean isCancelled() {
+            return canceled;
+        }
+
+        public void setCancelled(boolean cancel) {
+            canceled = cancel;
+        }
+
+        public HandlerList getHandlers() {
+            return handlers;
+        }
+
+        public static HandlerList getHandlerList() {
+            return handlers;
+        }
+
+        public Inventory getInventory() {
+            return inventory;
+        }
+    }
+
+    public static class Fill extends Event implements Cancellable {
+        private static final HandlerList handlers = new HandlerList();
+        private final Inventory inventory;
+        private boolean canceled;
+        Location loc;
+        Location target;
+        public Fill(World world, Inventory inventory, double x, double y, double z, double tx, double ty, double tz) {
+            this.inventory = inventory;
+            loc = new Location(world, x, y, z);
+            target = new Location(world, x, y, z);
+        }
+        public Location getHopperLocation() {
+            return this.loc;
+        }
+        public Location getTarget() {
+            return this.target;
+        }
+
+        public boolean isCancelled() {
+            return canceled;
+        }
+
+        public void setCancelled(boolean cancel) {
+            canceled = cancel;
+        }
+
+        public HandlerList getHandlers() {
+            return handlers;
+        }
+
+        public static HandlerList getHandlerList() {
+            return handlers;
+        }
+
+        public Inventory getInventory() {
+            return inventory;
+        }
+    }
+}
diff --git a/src/main/java/net/minecraft/server/IHopper.java b/src/main/java/net/minecraft/server/IHopper.java
index 804215a..2004b19 100644
--- a/src/main/java/net/minecraft/server/IHopper.java
+++ b/src/main/java/net/minecraft/server/IHopper.java
@@ -4,9 +4,9 @@ public interface IHopper extends IInventory {
 
     World getWorld();
 
-    double E();
+    double E();default double getX() { return E(); } // EMC // OBF HELPER
 
-    double F();
+    double F();default double getY() { return F(); } // EMC // OBF HELPER
 
-    double G();
+    double G();default double getZ() { return G(); } // EMC // OBF HELPER
 }
diff --git a/src/main/java/net/minecraft/server/TileEntityHopper.java b/src/main/java/net/minecraft/server/TileEntityHopper.java
index a695207..151c548 100644
--- a/src/main/java/net/minecraft/server/TileEntityHopper.java
+++ b/src/main/java/net/minecraft/server/TileEntityHopper.java
@@ -5,7 +5,9 @@ import java.util.List;
 import javax.annotation.Nullable;
 
 // CraftBukkit start
+import com.empireminecraft.customevents.HopperEvents; // EMC
 import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.craftbukkit.inventory.CraftInventory; // EMC
 import org.bukkit.craftbukkit.inventory.CraftItemStack;
 import org.bukkit.entity.HumanEntity;
 import org.bukkit.event.inventory.InventoryMoveItemEvent;
@@ -235,6 +237,7 @@ public class TileEntityHopper extends TileEntityLootable implements IHopper, ITi
         } else {
             EnumDirection enumdirection = BlockHopper.e(this.u()).opposite();
 
+            if (HopperEvents.fill(((WorldServer)world).getWorld(), this.getOwner().getInventory(), this.position, enumdirection)) { return false; } // EMC
             if (this.a(iinventory, enumdirection)) {
                 return false;
             } else {
@@ -342,7 +345,7 @@ public class TileEntityHopper extends TileEntityLootable implements IHopper, ITi
             if (b(iinventory, enumdirection)) {
                 return false;
             }
-
+            if (HopperEvents.drain(((WorldServer)ihopper.getWorld()).getWorld(), new CraftInventory(ihopper), ihopper.getX(), ihopper.getY(), ihopper.getZ())) { return false; } // EMC
             if (iinventory instanceof IWorldInventory) {
                 IWorldInventory iworldinventory = (IWorldInventory) iinventory;
                 int[] aint = iworldinventory.getSlotsForFace(enumdirection);
-- 
2.8.3

