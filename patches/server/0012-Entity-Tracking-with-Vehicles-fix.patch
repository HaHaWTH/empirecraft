From f481569b23de73d0716c9444abb77c91fb1e7536 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Mon, 17 Jun 2013 01:24:00 -0400
Subject: [PATCH] Entity Tracking with Vehicles fix

If an entity untracks from a player while a vehicle/passenger, the rider can become frozen
and stop receiving updates correctly.

This patch makes it so passengers track the same way as their vehicle.
---
 src/main/java/net/minecraft/server/Entity.java     |  2 +-
 .../net/minecraft/server/EntityTrackerEntry.java   | 27 +++++++++++++++++++++-
 2 files changed, 27 insertions(+), 2 deletions(-)

diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index c7a75da..d33ec78 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -52,7 +52,7 @@ public abstract class Entity implements ICommandListener {
     }
 
     protected CraftEntity bukkitEntity;
-
+    EntityTrackerEntry tracker; // EMC
     public CraftEntity getBukkitEntity() {
         if (bukkitEntity == null) {
             bukkitEntity = CraftEntity.getEntity(world.getServer(), this);
diff --git a/src/main/java/net/minecraft/server/EntityTrackerEntry.java b/src/main/java/net/minecraft/server/EntityTrackerEntry.java
index 1602dff..8e89b4f 100644
--- a/src/main/java/net/minecraft/server/EntityTrackerEntry.java
+++ b/src/main/java/net/minecraft/server/EntityTrackerEntry.java
@@ -49,6 +49,7 @@ public class EntityTrackerEntry {
     // Paper end
 
     public EntityTrackerEntry(Entity entity, int i, int j, int k, boolean flag) {
+        entity.tracker = this; // EMC
         this.tracker = entity;
         this.e = i;
         this.f = j;
@@ -352,7 +353,23 @@ public class EntityTrackerEntry {
     public void updatePlayer(EntityPlayer entityplayer) {
         org.spigotmc.AsyncCatcher.catchOp( "player tracker update"); // Spigot
         if (entityplayer != this.tracker) {
-            if (this.c(entityplayer)) {
+            // EMC start
+            boolean parent = true;
+            boolean force = false;
+            if (tracker.isPassenger()) {
+                parent = tracker.getVehicle().tracker.trackedPlayers.contains(entityplayer);
+                if (!parent) {
+                    for (Entity passenger : this.tracker.passengers) {
+                        if (passenger instanceof EntityPlayer) {
+                            parent = true;
+                            break;
+                        }
+                    }
+                }
+                force = true;
+            }
+            // EMC end
+            if (parent && (force || this.c(entityplayer))) { // EMC - parent && (force || XXXX )
                 if (!this.trackedPlayers.contains(entityplayer) && (this.e(entityplayer) || this.tracker.attachedToPlayer)) {
                     // CraftBukkit start - respect vanish API
                     if (this.tracker instanceof EntityPlayer) {
@@ -371,6 +388,7 @@ public class EntityTrackerEntry {
                     if (!this.tracker.getDataWatcher().d()) {
                         entityplayer.playerConnection.sendPacket(new PacketPlayOutEntityMetadata(this.tracker.getId(), this.tracker.getDataWatcher(), true));
                     }
+                    tracker.passengers.forEach((e) -> e.tracker.updatePlayer(entityplayer)); // EMC
 
                     boolean flag = this.u;
 
@@ -413,6 +431,12 @@ public class EntityTrackerEntry {
                             }
                         }
                     }
+                    // EMC start
+                    final Entity playerVehicle = entityplayer.getVehicle();
+                    if (this.tracker == playerVehicle & playerVehicle != entityplayer) {
+                        entityplayer.playerConnection.sendPacket(new PacketPlayOutAttachEntity(entityplayer, this.tracker));
+                    }
+                    // EMC end
 
                     if (this.tracker instanceof EntityHuman) {
                         EntityHuman entityhuman = (EntityHuman) this.tracker;
@@ -444,6 +468,7 @@ public class EntityTrackerEntry {
             } else if (this.trackedPlayers.contains(entityplayer)) {
                 this.trackedPlayers.remove(entityplayer);
                 this.tracker.c(entityplayer);
+                tracker.passengers.forEach((e) -> e.tracker.updatePlayer(entityplayer)); // EMC
                 entityplayer.c(this.tracker);
             }
 
-- 
2.8.0

