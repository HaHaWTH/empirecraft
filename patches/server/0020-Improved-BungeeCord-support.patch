From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Mon, 9 Dec 2013 23:21:21 -0500
Subject: [PATCH] Improved BungeeCord support

Secure BungeeCord with IP Whitelist for IP/UUID forwarding
Allow online-mode to be set to true, and skip online-mode for bungee IP's
---
 src/main/java/net/minecraft/server/HandshakeListener.java | 8 +++++---
 src/main/java/net/minecraft/server/LoginListener.java     | 2 +-
 src/main/java/net/minecraft/server/NetworkManager.java    | 1 +
 src/main/java/org/spigotmc/SpigotConfig.java              | 2 ++
 4 files changed, 9 insertions(+), 4 deletions(-)

diff --git a/src/main/java/net/minecraft/server/HandshakeListener.java b/src/main/java/net/minecraft/server/HandshakeListener.java
index 5dde738b7499fbf432dc3dbae295eb96d5b90347..95205c3d60c8d587e9354c7a92aa16c17bed3cc6 100644
--- a/src/main/java/net/minecraft/server/HandshakeListener.java
+++ b/src/main/java/net/minecraft/server/HandshakeListener.java
@@ -74,7 +74,8 @@ public class HandshakeListener implements PacketHandshakingInListener {
                 } else {
                     this.c.setPacketListener(new LoginListener(this.b, this.c));
                 // Paper start - handshake event
-                boolean proxyLogicEnabled = org.spigotmc.SpigotConfig.bungee;
+                String ip = ((java.net.InetSocketAddress) this.c.getSocketAddress()).getAddress().getHostAddress(); // EMC
+                boolean proxyLogicEnabled = org.spigotmc.SpigotConfig.bungee && org.spigotmc.SpigotConfig.bungeeAddresses.contains(ip); // EMC
                 boolean handledByEvent = false;
                 // Try and handle the handshake through the event
                 if (com.destroystokyo.paper.event.player.PlayerHandshakeEvent.getHandlerList().getRegisteredListeners().length != 0) { // Hello? Can you hear me?
@@ -100,12 +101,13 @@ public class HandshakeListener implements PacketHandshakingInListener {
                 // Paper end
                     // Spigot Start
                 //if (org.spigotmc.SpigotConfig.bungee) { // Paper - comment out, we check above!
-                        String[] split = packethandshakinginsetprotocol.hostname.split("\00");
+                    c.isProxied = true; // EMC
+                    String[] split = packethandshakinginsetprotocol.hostname.split("\00");
                         if ( split.length == 3 || split.length == 4 ) {
                             packethandshakinginsetprotocol.hostname = split[0];
                             c.socketAddress = new java.net.InetSocketAddress(split[1], ((java.net.InetSocketAddress) c.getSocketAddress()).getPort());
                             c.spoofedUUID = com.mojang.util.UUIDTypeAdapter.fromString( split[2] );
-                        } else
+                        } else if (false) // EMC
                         {
                             chatmessage = new ChatMessage("If you wish to use IP forwarding, please enable it in your BungeeCord config as well!");
                             this.c.sendPacket(new PacketLoginOutDisconnect(chatmessage));
diff --git a/src/main/java/net/minecraft/server/LoginListener.java b/src/main/java/net/minecraft/server/LoginListener.java
index 57a3a8d09427012e5c8aba5085d187c6be047652..f2030ef1ec92669d106b746cfdfadf2625e89ff8 100644
--- a/src/main/java/net/minecraft/server/LoginListener.java
+++ b/src/main/java/net/minecraft/server/LoginListener.java
@@ -183,7 +183,7 @@ public class LoginListener implements PacketLoginInListener {
     public void a(PacketLoginInStart packetlogininstart) {
         Validate.validState(this.g == LoginListener.EnumProtocolState.HELLO, "Unexpected hello packet", new Object[0]);
         this.i = packetlogininstart.b();
-        if (this.server.getOnlineMode() && !this.networkManager.isLocal()) {
+        if (!this.networkManager.isProxied && this.server.getOnlineMode() && !this.networkManager.isLocal()) { // EMC - add !isProxied
             this.g = LoginListener.EnumProtocolState.KEY;
             this.networkManager.sendPacket(new PacketLoginOutEncryptionBegin("", this.server.getKeyPair().getPublic(), this.e));
         } else {
diff --git a/src/main/java/net/minecraft/server/NetworkManager.java b/src/main/java/net/minecraft/server/NetworkManager.java
index c9b36e6040f03e6cee46989bab8415d829f8eef4..985b5a3284dd2513c32e13b2c9d5c36cb49af1e7 100644
--- a/src/main/java/net/minecraft/server/NetworkManager.java
+++ b/src/main/java/net/minecraft/server/NetworkManager.java
@@ -50,6 +50,7 @@ public class NetworkManager extends SimpleChannelInboundHandler<Packet<?>> {
     public java.util.UUID spoofedUUID;
     public com.mojang.authlib.properties.Property[] spoofedProfile;
     public boolean preparing = true;
+    public boolean isProxied = false; // EMC
     // Spigot End
     private PacketListener packetListener;
     private IChatBaseComponent m;
diff --git a/src/main/java/org/spigotmc/SpigotConfig.java b/src/main/java/org/spigotmc/SpigotConfig.java
index e66050b87ace6544636e10123ad0963176e5fdf7..071d46b2af69212a10aa58ff96663a24440aff07 100644
--- a/src/main/java/org/spigotmc/SpigotConfig.java
+++ b/src/main/java/org/spigotmc/SpigotConfig.java
@@ -229,6 +229,7 @@ public class SpigotConfig
     }
 
     public static boolean bungee;
+    public static List<String> bungeeAddresses = java.util.Collections.singletonList("127.0.0.1"); // EMC
     private static void bungee() {
         if ( version < 4 )
         {
@@ -236,6 +237,7 @@ public class SpigotConfig
             System.out.println( "Oudated config, disabling BungeeCord support!" );
         }
         bungee = getBoolean( "settings.bungeecord", false );
+        bungeeAddresses = getList("settings.bungeecord-addresses", bungeeAddresses); // EMC
     }
 
     private static void nettyThreads()
