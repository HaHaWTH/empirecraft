From ff744853235bc0550e94419820b4ad9b728282ad Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sat, 6 Jul 2013 23:05:19 -0400
Subject: [PATCH] Anti Dupe

Remove CraftBukkit "Feature" of ItemStack's having infinite use if less than 0 stack size.
Blocks most cases of < 0 itemstack dupe bugs
---
 src/main/java/net/minecraft/server/DispenseBehaviorItem.java  | 1 +
 src/main/java/net/minecraft/server/EntityAgeable.java         | 2 +-
 src/main/java/net/minecraft/server/EntityHorse.java           | 2 +-
 src/main/java/net/minecraft/server/EntityHuman.java           | 2 +-
 src/main/java/net/minecraft/server/ItemStack.java             | 1 +
 src/main/java/net/minecraft/server/PlayerConnection.java      | 2 +-
 src/main/java/net/minecraft/server/PlayerInteractManager.java | 2 +-
 src/main/java/net/minecraft/server/PlayerInventory.java       | 2 +-
 src/main/java/net/minecraft/server/Slot.java                  | 1 +
 src/main/java/net/minecraft/server/TileEntityDispenser.java   | 1 +
 10 files changed, 10 insertions(+), 6 deletions(-)

diff --git a/src/main/java/net/minecraft/server/DispenseBehaviorItem.java b/src/main/java/net/minecraft/server/DispenseBehaviorItem.java
index 9fbd16e..f9f39ef 100644
--- a/src/main/java/net/minecraft/server/DispenseBehaviorItem.java
+++ b/src/main/java/net/minecraft/server/DispenseBehaviorItem.java
@@ -10,6 +10,7 @@ public class DispenseBehaviorItem implements IDispenseBehavior {
     public DispenseBehaviorItem() {}
 
     public final ItemStack a(ISourceBlock isourceblock, ItemStack itemstack) {
+        if (itemstack != null && itemstack.count < 0) itemstack.count = 0; // EMC
         ItemStack itemstack1 = this.b(isourceblock, itemstack);
 
         this.a(isourceblock);
diff --git a/src/main/java/net/minecraft/server/EntityAgeable.java b/src/main/java/net/minecraft/server/EntityAgeable.java
index b33dddd..40f9f71 100644
--- a/src/main/java/net/minecraft/server/EntityAgeable.java
+++ b/src/main/java/net/minecraft/server/EntityAgeable.java
@@ -61,7 +61,7 @@ public abstract class EntityAgeable extends EntityCreature {
 
                         if (!entityhuman.abilities.canInstantlyBuild) {
                             --itemstack.count;
-                            if (itemstack.count == 0) { // CraftBukkit - allow less than 0 stacks as "infinite"
+                            if (itemstack.count <= 0) { // EMC
                                 entityhuman.inventory.setItem(entityhuman.inventory.itemInHandIndex, (ItemStack) null);
                             }
                         }
diff --git a/src/main/java/net/minecraft/server/EntityHorse.java b/src/main/java/net/minecraft/server/EntityHorse.java
index dfe1fa5..6ef2b01 100644
--- a/src/main/java/net/minecraft/server/EntityHorse.java
+++ b/src/main/java/net/minecraft/server/EntityHorse.java
@@ -614,7 +614,7 @@ public class EntityHorse extends EntityAnimal implements IInventoryListener, IJu
                 }
 
                 if (flag) {
-                    if (!entityhuman.abilities.canInstantlyBuild) {
+                    if (!entityhuman.abilities.canInstantlyBuild && itemstack.count > 0) { // EMC
                         --itemstack.count;
                     }
 
diff --git a/src/main/java/net/minecraft/server/EntityHuman.java b/src/main/java/net/minecraft/server/EntityHuman.java
index 696f21f..96f3151 100644
--- a/src/main/java/net/minecraft/server/EntityHuman.java
+++ b/src/main/java/net/minecraft/server/EntityHuman.java
@@ -534,7 +534,7 @@ public abstract class EntityHuman extends EntityLiving {
     public EntityItem a(@Nullable ItemStack itemstack, boolean flag, boolean flag1) {
         if (itemstack == null) {
             return null;
-        } else if (itemstack.count == 0) {
+        } else if (itemstack.count <= 0) { // EMC
             return null;
         } else {
             double d0 = this.locY - 0.30000001192092896D + (double) this.getHeadHeight();
diff --git a/src/main/java/net/minecraft/server/ItemStack.java b/src/main/java/net/minecraft/server/ItemStack.java
index 8400182..bb9c766 100644
--- a/src/main/java/net/minecraft/server/ItemStack.java
+++ b/src/main/java/net/minecraft/server/ItemStack.java
@@ -81,6 +81,7 @@ public final class ItemStack {
         ItemStack itemstack = new ItemStack();
 
         itemstack.c(nbttagcompound);
+        if (itemstack.count < 0) itemstack.count = 0; // EMC
         return itemstack.getItem() != null ? itemstack : null;
     }
 
diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index cf27086..0009f9b 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -891,7 +891,7 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
         this.player.playerConnection.sendPacket(new PacketPlayOutBlockChange(worldserver, blockposition));
         this.player.playerConnection.sendPacket(new PacketPlayOutBlockChange(worldserver, blockposition.shift(enumdirection)));
         itemstack = this.player.b(enumhand);
-        if (itemstack != null && itemstack.count == 0) {
+        if (itemstack != null && itemstack.count <= 0) { // EMC
             this.player.a(enumhand, (ItemStack) null);
             itemstack = null;
         }
diff --git a/src/main/java/net/minecraft/server/PlayerInteractManager.java b/src/main/java/net/minecraft/server/PlayerInteractManager.java
index 6b65829..8000efa 100644
--- a/src/main/java/net/minecraft/server/PlayerInteractManager.java
+++ b/src/main/java/net/minecraft/server/PlayerInteractManager.java
@@ -397,7 +397,7 @@ public class PlayerInteractManager {
                     }
                 }
 
-                if (itemstack1.count == 0) {
+                if (itemstack1.count <= 0) { // EMC
                     entityhuman.a(enumhand, (ItemStack) null);
                 }
 
diff --git a/src/main/java/net/minecraft/server/PlayerInventory.java b/src/main/java/net/minecraft/server/PlayerInventory.java
index e7da4a2..d6f0009 100644
--- a/src/main/java/net/minecraft/server/PlayerInventory.java
+++ b/src/main/java/net/minecraft/server/PlayerInventory.java
@@ -583,7 +583,7 @@ public class PlayerInventory implements IInventory {
     @Nullable
     public ItemStack getCarried() {
         // CraftBukkit start
-        if (this.carried != null && this.carried.count == 0) {
+        if (this.carried != null && this.carried.count <= 0) { // EMC
             this.setCarried(null);
         }
         // CraftBukkit end
diff --git a/src/main/java/net/minecraft/server/Slot.java b/src/main/java/net/minecraft/server/Slot.java
index 8d5bc83..ae682cb 100644
--- a/src/main/java/net/minecraft/server/Slot.java
+++ b/src/main/java/net/minecraft/server/Slot.java
@@ -55,6 +55,7 @@ public class Slot {
     }
 
     public void set(@Nullable ItemStack itemstack) {
+        if (itemstack != null && itemstack.count < 0) itemstack.count = 0; // EMC
         this.inventory.setItem(this.index, itemstack);
         this.f();
     }
diff --git a/src/main/java/net/minecraft/server/TileEntityDispenser.java b/src/main/java/net/minecraft/server/TileEntityDispenser.java
index 4c96bf3..5af9b3d 100644
--- a/src/main/java/net/minecraft/server/TileEntityDispenser.java
+++ b/src/main/java/net/minecraft/server/TileEntityDispenser.java
@@ -89,6 +89,7 @@ public class TileEntityDispenser extends TileEntityLootable implements IInventor
     public void setItem(int i, @Nullable ItemStack itemstack) {
         this.d((EntityHuman) null);
         this.items[i] = itemstack;
+        if (itemstack != null && itemstack.count < 0) itemstack.count = 0; // EMC
         if (itemstack != null && itemstack.count > this.getMaxStackSize()) {
             itemstack.count = this.getMaxStackSize();
         }
-- 
2.8.2

