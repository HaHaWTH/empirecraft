From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Wed, 20 Jun 2018 22:35:39 -0400
Subject: [PATCH] Tweak Explosions


diff --git a/src/main/java/net/minecraft/world/level/Explosion.java b/src/main/java/net/minecraft/world/level/Explosion.java
index 45243249a561440512ef2a620c60b02e159c80e2..fdfb33673bf7fd19641a524196ca64e64e2c6909 100644
--- a/src/main/java/net/minecraft/world/level/Explosion.java
+++ b/src/main/java/net/minecraft/world/level/Explosion.java
@@ -434,6 +434,7 @@ public class Explosion {
 
             initialCache = this.getOrCacheExplosionBlock(blockX, blockY, blockZ, key, true);
         }
+        if (this.fire || this.blockInteraction != BlockInteraction.KEEP) { // EMC - don't run block processing if keep flag is set
         // only ~1/3rd of the loop iterations in vanilla will result in a ray, as it is iterating the perimeter of
         // a 16x16x16 cube
         // we can cache the rays and their normals as well, so that we eliminate the excess iterations / checks and
@@ -519,6 +520,7 @@ public class Explosion {
                 }
             }
         }
+        } // EMC
 
         this.toBlow.addAll(set);
         float f2 = this.radius * 2.0F;
@@ -529,7 +531,7 @@ public class Explosion {
         int i1 = Mth.floor(this.y + (double) f2 + 1.0D);
         int j1 = Mth.floor(this.z - (double) f2 - 1.0D);
         int k1 = Mth.floor(this.z + (double) f2 + 1.0D);
-        List<Entity> list = this.level.getEntities(this.source, new AABB((double) i, (double) l, (double) j1, (double) j, (double) i1, (double) k1), (com.google.common.base.Predicate<Entity>) entity -> entity.isAlive() && !entity.isSpectator()); // Paper - Fix lag from explosions processing dead entities
+        List<Entity> list = this.level.getEntities(this.source, new AABB((double) i, (double) l, (double) j1, (double) j, (double) i1, (double) k1), (com.google.common.base.Predicate<Entity>) entity -> entity.isAlive() && !entity.isSpectator() && !(entity instanceof ItemEntity)); // Paper - Fix lag from explosions processing dead entitiess // EMC - exclude item entities
         Vec3 vec3d = new Vec3(this.x, this.y, this.z);
         Iterator iterator = list.iterator();
 
@@ -629,7 +631,7 @@ public class Explosion {
         boolean flag1 = this.interactsWithBlocks();
 
         if (particles) {
-            if (this.radius >= 2.0F && flag1) {
+            if (this.radius >= 2.0F /*&& flag1*/) { // EMC - don't care about block breaks flag for animation
                 this.level.addParticle(ParticleTypes.EXPLOSION_EMITTER, this.x, this.y, this.z, 1.0D, 0.0D, 0.0D);
             } else {
                 this.level.addParticle(ParticleTypes.EXPLOSION, this.x, this.y, this.z, 1.0D, 0.0D, 0.0D);
