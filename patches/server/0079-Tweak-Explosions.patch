From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Wed, 20 Jun 2018 22:35:39 -0400
Subject: [PATCH] Tweak Explosions

---
 src/main/java/net/minecraft/server/Explosion.java | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/src/main/java/net/minecraft/server/Explosion.java b/src/main/java/net/minecraft/server/Explosion.java
index 766ec660fa8c59f02a5299c4770cc658fdf4b075..5a01079f91a35059101a70088b972b7805d717f2 100644
--- a/src/main/java/net/minecraft/server/Explosion.java
+++ b/src/main/java/net/minecraft/server/Explosion.java
@@ -105,6 +105,7 @@ public class Explosion {
         int i;
         int j;
 
+        if (this.a || this.b != Effect.NONE) { // EMC - don't run block processing if neither flag is set
         for (int k = 0; k < 16; ++k) {
             for (i = 0; i < 16; ++i) {
                 for (j = 0; j < 16; ++j) {
@@ -145,6 +146,7 @@ public class Explosion {
                 }
             }
         }
+        } // EMC - don't run block processing if neither flag is set
 
         this.blocks.addAll(set);
         float f2 = this.size * 2.0F;
@@ -155,7 +157,7 @@ public class Explosion {
         int i1 = MathHelper.floor(this.posY + (double) f2 + 1.0D);
         int j1 = MathHelper.floor(this.posZ - (double) f2 - 1.0D);
         int k1 = MathHelper.floor(this.posZ + (double) f2 + 1.0D);
-        List<Entity> list = this.world.getEntities(this.source, new AxisAlignedBB((double) i, (double) l, (double) j1, (double) j, (double) i1, (double) k1), (com.google.common.base.Predicate<Entity>) entity -> IEntitySelector.canAITarget().test(entity) && !entity.dead); // Paper - Fix lag from explosions processing dead entities
+        List<Entity> list = this.world.getEntities(this.source, new AxisAlignedBB((double) i, (double) l, (double) j1, (double) j, (double) i1, (double) k1), (com.google.common.base.Predicate<Entity>) entity -> IEntitySelector.canAITarget().test(entity) && !entity.dead && !(entity instanceof EntityItem)); // Paper - Fix lag from explosions processing dead entities
         Vec3D vec3d = new Vec3D(this.posX, this.posY, this.posZ);
 
         for (int l1 = 0; l1 < list.size(); ++l1) {
@@ -216,7 +218,7 @@ public class Explosion {
         boolean flag1 = this.c != Explosion.Effect.NONE;
 
         if (flag) {
-            if (this.size >= 2.0F && flag1) {
+            if (this.size >= 2.0F/* && flag1*/) { // EMC - don't care about block breaks flag for animation
                 this.world.addParticle(Particles.EXPLOSION_EMITTER, this.posX, this.posY, this.posZ, 1.0D, 0.0D, 0.0D);
             } else {
                 this.world.addParticle(Particles.EXPLOSION, this.posX, this.posY, this.posZ, 1.0D, 0.0D, 0.0D);
