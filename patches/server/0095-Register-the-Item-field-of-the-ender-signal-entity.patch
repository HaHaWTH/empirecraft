From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: chickeneer <emcchickeneer@gmail.com>
Date: Sat, 25 Jan 2020 00:37:51 -0600
Subject: [PATCH] Register the Item field of the ender signal entity

This patches MC-169769. Without the fix, errors can
be thrown while converting these entities
---
 .../java/net/minecraft/server/DataConverterSchemaV1460.java   | 2 +-
 .../java/net/minecraft/server/DataConverterSchemaV705.java    | 4 ++--
 .../java/net/minecraft/server/DataConverterSchemaV99.java     | 4 ++--
 3 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/src/main/java/net/minecraft/server/DataConverterSchemaV1460.java b/src/main/java/net/minecraft/server/DataConverterSchemaV1460.java
index f9a42ecec23e2ba2d4a2bd471242e046aa7c32bc..306eb6c3d7db890e298db9f3c21f423e4e86fe01 100644
--- a/src/main/java/net/minecraft/server/DataConverterSchemaV1460.java
+++ b/src/main/java/net/minecraft/server/DataConverterSchemaV1460.java
@@ -62,7 +62,7 @@ public class DataConverterSchemaV1460 extends DataConverterSchemaNamed {
         schema.registerSimple(map, "minecraft:ender_pearl");
         schema.registerSimple(map, "minecraft:evocation_fangs");
         a(schema, map, "minecraft:evocation_illager");
-        schema.registerSimple(map, "minecraft:eye_of_ender_signal");
+        schema.register(map, "minecraft:eye_of_ender_signal", (s) -> DSL.optionalFields("Item", DataConverterTypes.ITEM_STACK.in(schema))); // EMC
         schema.register(map, "minecraft:falling_block", (s) -> {
             return DSL.optionalFields("BlockState", DataConverterTypes.BLOCK_STATE.in(schema), "TileEntityData", DataConverterTypes.BLOCK_ENTITY.in(schema));
         });
diff --git a/src/main/java/net/minecraft/server/DataConverterSchemaV705.java b/src/main/java/net/minecraft/server/DataConverterSchemaV705.java
index 369f09c4ad75414665faeea85df44c88aa7a7725..093b629a72400e070aa8bad92ac5bcfe2757b348 100644
--- a/src/main/java/net/minecraft/server/DataConverterSchemaV705.java
+++ b/src/main/java/net/minecraft/server/DataConverterSchemaV705.java
@@ -14,7 +14,7 @@ public class DataConverterSchemaV705 extends DataConverterSchemaNamed {
 
     protected static final HookFunction a = new HookFunction() {
         public <T> T apply(DynamicOps<T> dynamicops, T t0) {
-            return DataConverterSchemaV99.a(new Dynamic(dynamicops, t0), DataConverterSchemaV704.a, "minecraft:armor_stand");
+            return (T) DataConverterSchemaV99.a(new Dynamic(dynamicops, t0), DataConverterSchemaV704.a, "minecraft:armor_stand"); // EMC - decompile error
         }
     };
 
@@ -68,7 +68,7 @@ public class DataConverterSchemaV705 extends DataConverterSchemaNamed {
         });
         a(schema, map, "minecraft:endermite");
         b(schema, map, "minecraft:ender_pearl");
-        schema.registerSimple(map, "minecraft:eye_of_ender_signal");
+        schema.register(map, "minecraft:eye_of_ender_signal", (s) -> DSL.optionalFields("Item", DataConverterTypes.ITEM_STACK.in(schema))); // EMC
         schema.register(map, "minecraft:falling_block", (s) -> {
             return DSL.optionalFields("Block", DataConverterTypes.BLOCK_NAME.in(schema), "TileEntityData", DataConverterTypes.BLOCK_ENTITY.in(schema));
         });
diff --git a/src/main/java/net/minecraft/server/DataConverterSchemaV99.java b/src/main/java/net/minecraft/server/DataConverterSchemaV99.java
index 699d7da96128253865bda2e8f207c13fe0976743..a953b4db9c8bd184845d3ebaa044b8666729165a 100644
--- a/src/main/java/net/minecraft/server/DataConverterSchemaV99.java
+++ b/src/main/java/net/minecraft/server/DataConverterSchemaV99.java
@@ -56,7 +56,7 @@ public class DataConverterSchemaV99 extends Schema {
     });
     protected static final HookFunction a = new HookFunction() {
         public <T> T apply(DynamicOps<T> dynamicops, T t0) {
-            return DataConverterSchemaV99.a(new Dynamic(dynamicops, t0), DataConverterSchemaV99.c, "ArmorStand");
+            return (T) DataConverterSchemaV99.a(new Dynamic(dynamicops, t0), DataConverterSchemaV99.c, "ArmorStand"); // EMC - decompile error
         }
     };
 
@@ -115,7 +115,7 @@ public class DataConverterSchemaV99 extends Schema {
         b(schema, map, "Fireball");
         b(schema, map, "SmallFireball");
         b(schema, map, "ThrownEnderpearl");
-        schema.registerSimple(map, "EyeOfEnderSignal");
+        schema.register(map, "EyeOfEnderSignal", (s) -> DSL.optionalFields("Item", DataConverterTypes.ITEM_STACK.in(schema))); // EMC
         schema.register(map, "ThrownPotion", (s) -> {
             return DSL.optionalFields("inTile", DataConverterTypes.BLOCK_NAME.in(schema), "Potion", DataConverterTypes.ITEM_STACK.in(schema));
         });
