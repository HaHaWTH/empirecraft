From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Wed, 7 Aug 2013 19:52:14 -0400
Subject: [PATCH] VehicleExitEvent Dismount Reason API


diff --git a/src/main/java/net/minecraft/server/commands/TeleportCommand.java b/src/main/java/net/minecraft/server/commands/TeleportCommand.java
index d0109df7fad51fc0444459f5d367254c8f4c355e..facd51ade8d16fafd1991f9970b7f57571fedec4 100644
--- a/src/main/java/net/minecraft/server/commands/TeleportCommand.java
+++ b/src/main/java/net/minecraft/server/commands/TeleportCommand.java
@@ -39,6 +39,7 @@ import net.minecraft.world.phys.Vec3;
 import org.bukkit.Location;
 import org.bukkit.craftbukkit.CraftWorld;
 import org.bukkit.event.entity.EntityTeleportEvent;
+import org.bukkit.event.vehicle.VehicleExitEvent;
 // CraftBukkit end
 
 public class TeleportCommand {
@@ -165,6 +166,7 @@ public class TeleportCommand {
                 ChunkPos chunkcoordintpair = new ChunkPos(new BlockPos(x, y, z));
 
                 world.getChunkSource().addRegionTicket(TicketType.POST_TELEPORT, chunkcoordintpair, 1, target.getId());
+                target.dismountReason = VehicleExitEvent.DismountReason.TELEPORT; // EMC
                 target.stopRiding();
                 if (((ServerPlayer) target).isSleeping()) {
                     ((ServerPlayer) target).stopSleepInBed(true, true);
diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index 16922e0fb4db70494c7c94ec19fc7a2087161e33..2850262d8a16d6b40427c6aac2efdef98c928c4d 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -163,6 +163,7 @@ import org.bukkit.craftbukkit.event.CraftEventFactory;
 import org.bukkit.craftbukkit.util.WorldUUID;
 import org.bukkit.event.entity.CreatureSpawnEvent;
 import org.bukkit.event.server.MapInitializeEvent;
+import org.bukkit.event.vehicle.VehicleExitEvent;
 import org.bukkit.event.weather.LightningStrikeEvent;
 import org.bukkit.event.world.TimeSkipEvent;
 // CraftBukkit end
@@ -633,6 +634,7 @@ public class ServerLevel extends net.minecraft.world.level.Level implements Worl
                                 return;
                             }
 
+                            if (entity1.isRemoved()) { entity.dismountReason =  VehicleExitEvent.DismountReason.DEAD_VEHICLE; } // EMC
                             entity.stopRiding();
                         }
 
@@ -998,6 +1000,7 @@ public class ServerLevel extends net.minecraft.world.level.Level implements Worl
             } finally { timer.stopTiming(); }// Paper - EAR2 timings
             }
         } else {
+            if (passenger.isRemoved()) { passenger.dismountReason = VehicleExitEvent.DismountReason.DEAD; } // EMC
             passenger.stopRiding();
         }
     }
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 8e2bccc3a9ddb17a4978596056189eb776976338..598f95a639ff438a3b1ea20938a3301f2fb6d41d 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -167,6 +167,7 @@ import org.bukkit.event.player.PlayerLocaleChangeEvent;
 import org.bukkit.event.player.PlayerPortalEvent;
 import org.bukkit.event.player.PlayerTeleportEvent;
 import org.bukkit.event.player.PlayerTeleportEvent.TeleportCause;
+import org.bukkit.event.vehicle.VehicleExitEvent;
 import org.bukkit.inventory.MainHand;
 // CraftBukkit end
 
@@ -1630,10 +1631,11 @@ public class ServerPlayer extends Player {
 
     public void disconnect() {
         this.disconnected = true;
-        this.ejectPassengers();
+        this.ejectPassengers(VehicleExitEvent.DismountReason.DISCONNECT);
 
         // Paper start - Workaround an issue where the vehicle doesn't track the passenger disconnection dismount.
         if (this.isPassenger() && this.getVehicle() instanceof ServerPlayer) {
+            this.dismountReason = VehicleExitEvent.DismountReason.DISCONNECT; // EMC
             this.stopRiding();
         }
         // Paper end
@@ -1799,6 +1801,7 @@ public class ServerPlayer extends Player {
             this.connection.send(new ClientboundGameEventPacket(ClientboundGameEventPacket.CHANGE_GAME_MODE, (float) gameMode.getId()));
             if (gameMode == GameType.SPECTATOR) {
                 this.removeEntitiesOnShoulder();
+                this.dismountReason = org.bukkit.event.vehicle.VehicleExitEvent.DismountReason.SPECTATE; // EMC
                 this.stopRiding();
             } else {
                 this.setCamera(this);
@@ -1972,7 +1975,7 @@ public class ServerPlayer extends Player {
 
         if (entity != this) {
             // Make sure we're in the right place
-            this.ejectPassengers(); // teleport can fail if we have passengers...
+            this.ejectPassengers(VehicleExitEvent.DismountReason.SPECTATE); // teleport can fail if we have passengers...
             this.getBukkitEntity().teleport(new Location(entity.getCommandSenderWorld().getWorld(), entity.getX(), entity.getY(), entity.getZ(), this.getYRot(), this.getXRot()), TeleportCause.SPECTATE); // Correctly handle cross-world entities from api calls by using CB teleport
 
             // Make sure we're tracking the entity before sending
@@ -2040,6 +2043,7 @@ public class ServerPlayer extends Player {
     public void a(ServerLevel worldserver, double d0, double d1, double d2, float f, float f1, org.bukkit.event.player.PlayerTeleportEvent.TeleportCause cause) {
         // CraftBukkit end
         this.setCamera(this);
+        this.dismountReason = VehicleExitEvent.DismountReason.TELEPORT; // EMC
         this.stopRiding();
         /* CraftBukkit start - replace with bukkit handling for multi-world
         if (worldserver == this.level) {
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index 65657c009f6d5a5d5740e80f912a5893333c7085..8c6e61b736551d4338d55dc0bd7ca24a42a129d3 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -119,6 +119,7 @@ import org.bukkit.event.player.PlayerJoinEvent;
 import org.bukkit.event.player.PlayerLoginEvent;
 import org.bukkit.event.player.PlayerQuitEvent;
 import org.bukkit.event.player.PlayerRespawnEvent;
+import org.bukkit.event.vehicle.VehicleExitEvent;
 // CraftBukkit end
 
 public abstract class PlayerList {
@@ -628,6 +629,7 @@ public abstract class PlayerList {
 
             if (entity.hasExactlyOnePlayerPassenger()) {
                 PlayerList.LOGGER.debug("Removing player mount");
+                entityplayer.dismountReason = VehicleExitEvent.DismountReason.DISCONNECT; // EMC
                 entityplayer.stopRiding();
                 entity.getPassengersAndSelf().forEach((entity1) -> {
                     // Paper start
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index a3a5adb13ed4671bbf0a1c6b9b100f31ae0c62ea..8dbf726dce7f1831cd626d90d81eb6f603a9db07 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -648,6 +648,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, n
         if (isDisabled) { return; } // EMC
         this.level.getProfiler().push("entityBaseTick");
         if (this.isPassenger() && this.getVehicle().isRemoved()) {
+            this.dismountReason = VehicleExitEvent.DismountReason.DEAD_VEHICLE; // EMC
             this.stopRiding();
         }
 
@@ -2335,6 +2336,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, n
                 return false;
             } else {
                 if (this.isPassenger()) {
+                    this.dismountReason = VehicleExitEvent.DismountReason.TRANSFER; // EMC
                     this.stopRiding();
                 }
 
@@ -2360,7 +2362,11 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, n
     }
 
     public void ejectPassengers() {
+        ejectPassengers(VehicleExitEvent.DismountReason.UNKNOWN);
+    }
+    public void ejectPassengers(VehicleExitEvent.DismountReason reason) {
         for (int i = this.passengers.size() - 1; i >= 0; --i) {
+            this.passengers.get(i).dismountReason = reason; // EMC
             ((Entity) this.passengers.get(i)).stopRiding();
         }
 
@@ -2440,6 +2446,8 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, n
     // Paper start
     protected boolean removePassenger(Entity entity) { return removePassenger(entity, false);}
     protected boolean removePassenger(Entity entity, boolean suppressCancellation) { // CraftBukkit
+        VehicleExitEvent.DismountReason reason = entity.dismountReason; // EMC
+        entity.dismountReason = VehicleExitEvent.DismountReason.UNKNOWN; // EMC
         // Paper end
         if (entity.getVehicle() == this) {
             throw new IllegalStateException("Use x.stopRiding(y), not y.removePassenger(x)");
@@ -2452,6 +2460,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, n
                         (Vehicle) this.getBukkitEntity(),
                         (LivingEntity) entity.getBukkitEntity(), !suppressCancellation // Paper
                 );
+                event.reason = reason; // EMC
                 // Suppress during worldgen
                 if (this.valid) {
                     Bukkit.getPluginManager().callEvent(event);
@@ -2947,7 +2956,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, n
     public String toString() {
         return String.format(Locale.ROOT, "%s['%s'/%d, uuid='%s', l='%s', x=%.2f, y=%.2f, z=%.2f, cpos=%s, tl=%d, v=%b, rR=%s]", new Object[] { this.getClass().getSimpleName(), this.getName().getString(), Integer.valueOf(this.id), this.uuid.toString(), this.level == null ? "~NULL~" : this.level.toString(), Double.valueOf(this.getX()), Double.valueOf(this.getY()), Double.valueOf(this.getZ()), this.chunkPosition(), this.tickCount, this.valid, this.removalReason}); // Paper - add more information
     }
-
+    public VehicleExitEvent.DismountReason dismountReason = VehicleExitEvent.DismountReason.UNKNOWN; // EMC
     public boolean isInvulnerableTo(DamageSource damageSource) {
         return this.isRemoved() || this.invulnerable && damageSource != DamageSource.OUT_OF_WORLD && !damageSource.isCreativePlayer() && !isDisabled; // EMC - add !isDisabled
     }
@@ -3922,10 +3931,14 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, n
         }
 
         if (this.removalReason.shouldDestroy()) {
+            this.dismountReason = VehicleExitEvent.DismountReason.DEAD; // EMC
             this.stopRiding();
         }
 
-        this.getPassengers().forEach(Entity::stopRiding);
+        this.getPassengers().forEach(entity -> {
+            entity.dismountReason = VehicleExitEvent.DismountReason.DEAD_VEHICLE; // EMC
+            entity.stopRiding();
+        });
         this.levelCallback.onRemove(reason);
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index f9f5fe8f88eb9bde6ec51d8d51e3fcaf3bdffdd3..b78ade8914ca4da67c9d66a2249925354a425b76 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -436,6 +436,7 @@ public abstract class LivingEntity extends Entity {
                 }
 
                 if (!this.level.isClientSide && this.isPassenger() && this.getVehicle() != null && !this.getVehicle().rideableUnderWater()) {
+                    this.dismountReason = org.bukkit.event.vehicle.VehicleExitEvent.DismountReason.WATER; // EMC
                     this.stopRiding();
                 }
             } else if (this.getAirSupply() < this.getMaxAirSupply()) {
@@ -4010,6 +4011,7 @@ public abstract class LivingEntity extends Entity {
 
     public void startSleeping(BlockPos pos) {
         if (this.isPassenger()) {
+            if (this instanceof net.minecraft.world.entity.player.Player) this.dismountReason = org.bukkit.event.vehicle.VehicleExitEvent.DismountReason.PLAYER; // EMC
             this.stopRiding();
         }
 
diff --git a/src/main/java/net/minecraft/world/entity/Mob.java b/src/main/java/net/minecraft/world/entity/Mob.java
index 7496b148743f7f7d213159f2ad1fadd302432705..fdda0a40f2419a9495184d1ed1a74a3a4ab59e81 100644
--- a/src/main/java/net/minecraft/world/entity/Mob.java
+++ b/src/main/java/net/minecraft/world/entity/Mob.java
@@ -81,6 +81,7 @@ import org.bukkit.event.entity.EntityTargetEvent;
 import org.bukkit.event.entity.EntityTransformEvent;
 import org.bukkit.event.entity.EntityUnleashEvent;
 import org.bukkit.event.entity.EntityUnleashEvent.UnleashReason;
+import org.bukkit.event.vehicle.VehicleExitEvent;
 // CraftBukkit end
 
 public abstract class Mob extends LivingEntity {
@@ -1429,6 +1430,7 @@ public abstract class Mob extends LivingEntity {
         }
 
         if (this.isPassenger()) {
+            this.dismountReason = VehicleExitEvent.DismountReason.LEASH; // EMC
             this.stopRiding();
         }
 
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index c0c75219562c500010baf5a65ba530be8f599ba6..936f8e9d677c050d1ea4ae5f59b38d3ec45eb591 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -507,6 +507,7 @@ public abstract class Player extends LivingEntity {
     @Override
     public void rideTick() {
         if (!this.level.isClientSide && this.wantsToStopRiding() && this.isPassenger()) {
+            this.dismountReason = org.bukkit.event.vehicle.VehicleExitEvent.DismountReason.PLAYER; // EMC
             this.stopRiding();
             this.setShiftKeyDown(false);
         } else {
diff --git a/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java b/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java
index 309bafd257d4932cfd69c2c212b32306938cd234..26c127eb38ae9b489a0893510435741df3111511 100644
--- a/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java
+++ b/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java
@@ -56,6 +56,7 @@ import org.bukkit.entity.Vehicle;
 import org.bukkit.event.vehicle.VehicleDamageEvent;
 import org.bukkit.event.vehicle.VehicleDestroyEvent;
 import org.bukkit.event.vehicle.VehicleEntityCollisionEvent;
+import org.bukkit.event.vehicle.VehicleExitEvent;
 import org.bukkit.util.Vector;
 // CraftBukkit end
 
@@ -268,7 +269,7 @@ public abstract class AbstractMinecart extends Entity {
                         return true;
                     }
                     // CraftBukkit end
-                    this.ejectPassengers();
+                    this.ejectPassengers(VehicleExitEvent.DismountReason.DEAD_VEHICLE);
                     if (flag && !this.hasCustomName()) {
                         this.discard();
                     } else {
diff --git a/src/main/java/net/minecraft/world/item/ChorusFruitItem.java b/src/main/java/net/minecraft/world/item/ChorusFruitItem.java
index c2d87fa4c4dc1c7ec89143a96c340b3429c0042c..70a14d8df9c4133fdadfd18444b7f4631b78f679 100644
--- a/src/main/java/net/minecraft/world/item/ChorusFruitItem.java
+++ b/src/main/java/net/minecraft/world/item/ChorusFruitItem.java
@@ -9,6 +9,7 @@ import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.animal.Fox;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.level.Level;
+import org.bukkit.event.vehicle.VehicleExitEvent;
 
 public class ChorusFruitItem extends Item {
 
@@ -31,6 +32,7 @@ public class ChorusFruitItem extends Item {
                 double d5 = user.getZ() + (user.getRandom().nextDouble() - 0.5D) * 16.0D;
 
                 if (user.isPassenger()) {
+                    user.dismountReason = VehicleExitEvent.DismountReason.TELEPORT; // EMC
                     user.stopRiding();
                 }
 
