From 7ac07ac07ac07ac07ac07ac07ac07ac07ac07ac0 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Mon, 11 Mar 2013 21:05:05 -0400
Subject: [PATCH] Keep certain items on death API

This adds a getItemsToKeep to PlayerDeathEvent that can be modified for what item a player should keep upon death.

This can be used for never-to-be-dropped items.
---
 .../net/minecraft/server/EntityPlayer.java    | 45 ++++++++++++++++++-
 .../java/net/minecraft/server/ItemStack.java  | 11 ++++-
 .../net/minecraft/server/PlayerInventory.java |  2 +-
 3 files changed, 55 insertions(+), 3 deletions(-)

diff --git a/src/main/java/net/minecraft/server/EntityPlayer.java b/src/main/java/net/minecraft/server/EntityPlayer.java
index 7ac07ac07ac0..7ac07ac07ac0 100644
--- a/src/main/java/net/minecraft/server/EntityPlayer.java
+++ b/src/main/java/net/minecraft/server/EntityPlayer.java
@@ -491,6 +491,44 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
         });
     }
 
+    // EMC start
+    private static void processKeep(org.bukkit.event.entity.PlayerDeathEvent event, NonNullList<ItemStack> inv) {
+        List<org.bukkit.inventory.ItemStack> itemsToKeep = event.getItemsToKeep();
+        if (inv == null) {
+            // remainder
+            if (!itemsToKeep.isEmpty()) {
+                final org.bukkit.inventory.ItemStack[] items = itemsToKeep.toArray(
+                    new org.bukkit.inventory.ItemStack[itemsToKeep.size()]
+                );
+                event.getEntity().getInventory().addItem(items);
+            }
+            return;
+        }
+        for (int i = 0; i < inv.size(); ++i) {
+            ItemStack item = inv.get(i);
+            if (itemsToKeep.isEmpty() || item.isEmpty()) {
+                inv.set(i, ItemStack.NULL_ITEM);
+                continue;
+            }
+            final org.bukkit.inventory.ItemStack bukkitStack = item.getBukkitStack();
+
+            boolean keep = false;
+
+            final Iterator<org.bukkit.inventory.ItemStack> iterator = itemsToKeep.iterator();
+            while (iterator.hasNext()) {
+                final org.bukkit.inventory.ItemStack keepStack = iterator.next();
+                if (bukkitStack.equals(keepStack)) {
+                    iterator.remove();
+                    keep = true;
+                    break;
+                }
+            }
+            if (!keep) {
+                inv.set(i, ItemStack.NULL_ITEM);
+            }
+        }
+    }
+    // EMC end
     public void die(DamageSource damagesource) {
         boolean flag = this.world.getGameRules().getBoolean("showDeathMessages");
         // CraftBukkit start - fire PlayerDeathEvent
@@ -562,8 +600,13 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
         this.releaseShoulderEntities();
         // we clean the player's inventory after the EntityDeathEvent is called so plugins can get the exact state of the inventory.
         if (!event.getKeepInventory()) {
-            this.inventory.clear();
+            // EMC start - replace logic
+            for (NonNullList<ItemStack> inv : this.inventory.getComponents()) {
+                processKeep(event, inv);
+            }
+            // EMC end
         }
+        processKeep(event, null); // EMC
 
         this.closeInventory(org.bukkit.event.inventory.InventoryCloseEvent.Reason.DEATH); // Paper
         this.setSpectatorTarget(this); // Remove spectated target
diff --git a/src/main/java/net/minecraft/server/ItemStack.java b/src/main/java/net/minecraft/server/ItemStack.java
index 7ac07ac07ac0..7ac07ac07ac0 100644
--- a/src/main/java/net/minecraft/server/ItemStack.java
+++ b/src/main/java/net/minecraft/server/ItemStack.java
@@ -38,10 +38,19 @@ import org.bukkit.event.world.StructureGrowEvent;
 public final class ItemStack {
 
     private static final Logger c = LogManager.getLogger();
-    public static final ItemStack a = new ItemStack((Item) null);
+    public static final ItemStack a = new ItemStack((Item) null);public static final ItemStack NULL_ITEM = a; // EMC
     public static final DecimalFormat b = D();
     private int count;
     private int e;
+    // EMC start
+    private org.bukkit.inventory.ItemStack bukkitStack;
+    public org.bukkit.inventory.ItemStack getBukkitStack() {
+        if (bukkitStack == null) {
+            bukkitStack = org.bukkit.craftbukkit.inventory.CraftItemStack.asCraftMirror(this);
+        }
+        return bukkitStack;
+    }
+    // EMC end
     @Deprecated
     private Item item;
     public NBTTagCompound tag; // Paper -> package private // EMC
diff --git a/src/main/java/net/minecraft/server/PlayerInventory.java b/src/main/java/net/minecraft/server/PlayerInventory.java
index 7ac07ac07ac0..7ac07ac07ac0 100644
--- a/src/main/java/net/minecraft/server/PlayerInventory.java
+++ b/src/main/java/net/minecraft/server/PlayerInventory.java
@@ -20,7 +20,7 @@ public class PlayerInventory implements IInventory {
     public final NonNullList<ItemStack> items;
     public final NonNullList<ItemStack> armor;
     public final NonNullList<ItemStack> extraSlots;
-    private final List<NonNullList<ItemStack>> f;
+    private final List<NonNullList<ItemStack>> f; List<NonNullList<ItemStack>> getComponents() { return f; } // EMC - OBF HELPER
     public int itemInHandIndex;
     public EntityHuman player;
     private ItemStack carried;
-- 
2.19.1

