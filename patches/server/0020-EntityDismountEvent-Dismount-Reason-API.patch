From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Wed, 7 Aug 2013 19:52:14 -0400
Subject: [PATCH] EntityDismountEvent Dismount Reason API


diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index 5d3479f998f43a64983b81263fb70150dff63243..72e01aaaff867aa4440c2da53787a865fe379924 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -178,6 +178,7 @@ import org.bukkit.event.world.GenericGameEvent;
 import org.bukkit.event.world.TimeSkipEvent;
 // CraftBukkit end
 import it.unimi.dsi.fastutil.ints.IntArrayList; // Paper
+import org.spigotmc.event.entity.EntityDismountEvent;
 
 public class ServerLevel extends Level implements WorldGenLevel {
 
@@ -893,6 +894,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
                                 if (!entity1.isRemoved() && entity1.hasPassenger(entity)) {
                                     return;
                                 }
+                                if (entity1.isRemoved()) { entity.dismountReason =  EntityDismountEvent.DismountReason.DEAD_VEHICLE; } // EMC
 
                                 entity.stopRiding();
                             }
@@ -1447,6 +1449,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
             } finally { timer.stopTiming(); }// Paper - EAR2 timings
             }
         } else {
+            if (passenger.isRemoved()) { passenger.dismountReason = EntityDismountEvent.DismountReason.DEAD; } // EMC
             passenger.stopRiding();
         }
     }
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index f71a4a8307fb092d33545e12d253e0b80c884168..5c4995e991f35fc56a5f307d594be2c90a5c085b 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -180,6 +180,7 @@ import org.bukkit.event.player.PlayerTeleportEvent;
 import org.bukkit.event.player.PlayerTeleportEvent.TeleportCause;
 import org.bukkit.event.player.PlayerToggleSneakEvent;
 import org.bukkit.inventory.MainHand;
+import org.spigotmc.event.entity.EntityDismountEvent;
 // CraftBukkit end
 
 public class ServerPlayer extends Player {
@@ -1760,10 +1761,11 @@ public class ServerPlayer extends Player {
 
     public void disconnect() {
         this.disconnected = true;
-        this.ejectPassengers();
+        this.ejectPassengers(EntityDismountEvent.DismountReason.DISCONNECT);
 
         // Paper start - Workaround an issue where the vehicle doesn't track the passenger disconnection dismount.
         if (this.isPassenger() && this.getVehicle() instanceof ServerPlayer) {
+            this.dismountReason = EntityDismountEvent.DismountReason.DISCONNECT; // EMC
             this.stopRiding();
         }
         // Paper end
@@ -1898,6 +1900,7 @@ public class ServerPlayer extends Player {
         ChunkPos chunkcoordintpair = new ChunkPos(BlockPos.containing(d0, d1, d2));
 
         worldserver.getChunkSource().addRegionTicket(TicketType.POST_TELEPORT, chunkcoordintpair, 1, this.getId());
+        this.dismountReason = EntityDismountEvent.DismountReason.TELEPORT; // EMC
         this.stopRiding();
         if (this.isSleeping()) {
             this.stopSleepInBed(true, true);
@@ -1956,6 +1959,7 @@ public class ServerPlayer extends Player {
             this.connection.send(new ClientboundGameEventPacket(ClientboundGameEventPacket.CHANGE_GAME_MODE, (float) gameMode.getId()));
             if (gameMode == GameType.SPECTATOR) {
                 this.removeEntitiesOnShoulder();
+                this.dismountReason = EntityDismountEvent.DismountReason.SPECTATE; // EMC
                 this.stopRiding();
             } else {
                 this.setCamera(this);
@@ -2220,6 +2224,7 @@ public class ServerPlayer extends Player {
     public void teleportTo(ServerLevel worldserver, double d0, double d1, double d2, float f, float f1, org.bukkit.event.player.PlayerTeleportEvent.TeleportCause cause) {
         // CraftBukkit end
         this.setCamera(this);
+        this.dismountReason = EntityDismountEvent.DismountReason.TELEPORT; // EMC
         this.stopRiding();
         /* CraftBukkit start - replace with bukkit handling for multi-world
         if (worldserver == this.level()) {
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index 30dd56871acff2dd730d96406520bab066229d7a..0be978f5288f0a7fddbe14923a1d52f1ee5460d6 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -121,6 +121,7 @@ import org.bukkit.event.player.PlayerQuitEvent;
 import org.bukkit.event.player.PlayerRespawnEvent;
 import org.bukkit.event.player.PlayerRespawnEvent.RespawnReason;
 import org.bukkit.event.player.PlayerSpawnChangeEvent;
+import org.spigotmc.event.entity.EntityDismountEvent;
 // CraftBukkit end
 
 public abstract class PlayerList {
@@ -621,6 +622,7 @@ public abstract class PlayerList {
 
             if (entity.hasExactlyOnePlayerPassenger()) {
                 PlayerList.LOGGER.debug("Removing player mount");
+                entityplayer.dismountReason = EntityDismountEvent.DismountReason.DISCONNECT; // EMC
                 entityplayer.stopRiding();
                 entity.getPassengersAndSelf().forEach((entity1) -> {
                     // Paper start
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index e34a454f24156bf76507ce61fd1cfa7ad71428ac..7caad8e3854c8b36186f1a4f4644f2f04d84e39b 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -157,6 +157,7 @@ import org.bukkit.event.entity.EntityPortalEvent;
 import org.bukkit.event.entity.EntityPoseChangeEvent;
 import org.bukkit.event.player.PlayerTeleportEvent;
 import org.bukkit.plugin.PluginManager;
+import org.spigotmc.event.entity.EntityDismountEvent;
 // CraftBukkit end
 
 public abstract class Entity implements Nameable, EntityAccess, CommandSource {
@@ -828,6 +829,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
         if (firstTick && this instanceof net.minecraft.world.entity.NeutralMob neutralMob) neutralMob.tickInitialPersistentAnger(level); // Paper - Update last hurt when ticking
         this.feetBlockState = null;
         if (this.isPassenger() && this.getVehicle().isRemoved()) {
+            this.dismountReason = EntityDismountEvent.DismountReason.DEAD_VEHICLE; // EMC
             this.stopRiding();
         }
 
@@ -2925,6 +2927,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
                 }
                 // Spigot end
                 if (this.isPassenger()) {
+                    this.dismountReason = EntityDismountEvent.DismountReason.TRANSFER; // EMC
                     this.stopRiding();
                 }
 
@@ -2946,7 +2949,11 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
     }
 
     public void ejectPassengers() {
+        ejectPassengers(EntityDismountEvent.DismountReason.UNKNOWN);
+    }
+    public void ejectPassengers(EntityDismountEvent.DismountReason reason) {
         for (int i = this.passengers.size() - 1; i >= 0; --i) {
+            this.passengers.get(i).dismountReason = reason; // EMC
             ((Entity) this.passengers.get(i)).stopRiding();
         }
 
@@ -2996,6 +3003,8 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
     // Paper start
     protected boolean removePassenger(Entity entity) { return removePassenger(entity, false);}
     protected boolean removePassenger(Entity entity, boolean suppressCancellation) { // CraftBukkit
+        EntityDismountEvent.DismountReason dismountReason = entity.dismountReason; // EMC
+        entity.dismountReason = EntityDismountEvent.DismountReason.UNKNOWN; // EMC
         // Paper end
         if (entity.getVehicle() == this) {
             throw new IllegalStateException("Use x.stopRiding(y), not y.removePassenger(x)");
@@ -3020,7 +3029,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
             }
             // CraftBukkit end
             // Spigot start
-            org.spigotmc.event.entity.EntityDismountEvent event = new org.spigotmc.event.entity.EntityDismountEvent(entity.getBukkitEntity(), this.getBukkitEntity(), !suppressCancellation); // Paper
+            org.spigotmc.event.entity.EntityDismountEvent event = new org.spigotmc.event.entity.EntityDismountEvent(entity.getBukkitEntity(), this.getBukkitEntity(), !suppressCancellation, dismountReason); // Paper
             // Suppress during worldgen
             if (this.valid) {
                 Bukkit.getPluginManager().callEvent(event);
@@ -3576,6 +3585,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
         return this.removalReason != null ? String.format(Locale.ROOT, "%s['%s'/%d, uuid='%s', l='%s', x=%.2f, y=%.2f, z=%.2f, cpos=%s, tl=%d, v=%b, removed=%s]", this.getClass().getSimpleName(), this.getName().getString(), this.id, this.uuid, s, this.getX(), this.getY(), this.getZ(), this.chunkPosition(), this.tickCount, this.valid, this.removalReason) : String.format(Locale.ROOT, "%s['%s'/%d, uuid='%s', l='%s', x=%.2f, y=%.2f, z=%.2f, cpos=%s, tl=%d, v=%b]", this.getClass().getSimpleName(), this.getName().getString(), this.id, this.uuid, s, this.getX(), this.getY(), this.getZ(), this.chunkPosition(), this.tickCount, this.valid);
     }
 
+    public EntityDismountEvent.DismountReason dismountReason = EntityDismountEvent.DismountReason.UNKNOWN; // EMC
     public boolean isInvulnerableTo(DamageSource damageSource) {
         return this.isRemoved() || this.invulnerable && !damageSource.is(DamageTypeTags.BYPASSES_INVULNERABILITY) && !damageSource.isCreativePlayer() && !isDisabled || damageSource.is(DamageTypeTags.IS_FIRE) && this.fireImmune() || damageSource.is(DamageTypeTags.IS_FALL) && this.getType().is(EntityTypeTags.FALL_DAMAGE_IMMUNE); // EMC - add !isDisabled
     }
@@ -4760,10 +4770,18 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
         }
 
         if (this.removalReason.shouldDestroy()) {
+            this.dismountReason = EntityDismountEvent.DismountReason.DEAD; // EMC
             this.stopRiding();
         }
 
-        if (reason != RemovalReason.UNLOADED_TO_CHUNK) this.getPassengers().forEach(Entity::stopRiding); // Paper - chunk system - don't adjust passenger state when unloading, it's just not safe (and messes with our logic in entity chunk unload)
+        // EMC start
+        if (reason != RemovalReason.UNLOADED_TO_CHUNK) { // Paper - chunk system - don't adjust passenger state when unloading, it's just not safe (and messes with our logic in entity chunk unload)
+            this.getPassengers().forEach(entity -> {
+                entity.dismountReason = EntityDismountEvent.DismountReason.DEAD_VEHICLE; // EMC - Add this
+                entity.stopRiding();
+            });
+        }
+        // EMC end
         this.levelCallback.onRemove(reason);
         // Paper start - Folia schedulers
         if (!(this instanceof ServerPlayer) && reason != RemovalReason.CHANGED_DIMENSION && !alreadyRemoved) {
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index 692975419346b0594913376a12df74c285b5e487..d1e7747dc3ca6189ae95f3d0c58b1453e1c3d374 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -143,6 +143,7 @@ import org.bukkit.event.player.PlayerItemConsumeEvent;
 // CraftBukkit end
 
 import co.aikar.timings.MinecraftTimings; // Paper
+import org.spigotmc.event.entity.EntityDismountEvent;
 
 public abstract class LivingEntity extends Entity implements Attackable {
 
@@ -451,6 +452,7 @@ public abstract class LivingEntity extends Entity implements Attackable {
                 }
 
                 if (!this.level().isClientSide && this.isPassenger() && this.getVehicle() != null && this.getVehicle().dismountsUnderwater()) {
+                    this.dismountReason = EntityDismountEvent.DismountReason.WATER; // EMC
                     this.stopRiding();
                 }
             } else if (this.getAirSupply() < this.getMaxAirSupply()) {
@@ -4303,6 +4305,7 @@ public abstract class LivingEntity extends Entity implements Attackable {
 
     public void startSleeping(BlockPos pos) {
         if (this.isPassenger()) {
+            if (this instanceof net.minecraft.world.entity.player.Player) this.dismountReason = EntityDismountEvent.DismountReason.PLAYER; // EMC
             this.stopRiding();
         }
 
diff --git a/src/main/java/net/minecraft/world/entity/Mob.java b/src/main/java/net/minecraft/world/entity/Mob.java
index a9086a5dc90a940122ede1081ecc878bf867ddc3..6c289b763c3af7f7e098cae9ed8ecafd5222c5a4 100644
--- a/src/main/java/net/minecraft/world/entity/Mob.java
+++ b/src/main/java/net/minecraft/world/entity/Mob.java
@@ -84,6 +84,7 @@ import org.bukkit.event.entity.EntityTargetEvent;
 import org.bukkit.event.entity.EntityTransformEvent;
 import org.bukkit.event.entity.EntityUnleashEvent;
 import org.bukkit.event.entity.EntityUnleashEvent.UnleashReason;
+import org.spigotmc.event.entity.EntityDismountEvent;
 // CraftBukkit end
 
 public abstract class Mob extends LivingEntity implements Targeting {
@@ -1543,6 +1544,7 @@ public abstract class Mob extends LivingEntity implements Targeting {
         }
 
         if (this.isPassenger()) {
+            this.dismountReason = EntityDismountEvent.DismountReason.LEASH; // EMC
             this.stopRiding();
         }
 
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index 481c3e321cfc0f20bb1c4c6942b8bdbd23c06339..b44a84c952f6af33676c3151f4e89978c41485df 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -125,6 +125,7 @@ import org.bukkit.event.entity.EntityCombustByEntityEvent;
 import org.bukkit.event.entity.EntityExhaustionEvent;
 import org.bukkit.event.player.PlayerDropItemEvent;
 import org.bukkit.event.player.PlayerVelocityEvent;
+import org.spigotmc.event.entity.EntityDismountEvent;
 // CraftBukkit end
 
 public abstract class Player extends LivingEntity {
@@ -524,6 +525,7 @@ public abstract class Player extends LivingEntity {
     @Override
     public void rideTick() {
         if (!this.level().isClientSide && this.wantsToStopRiding() && this.isPassenger()) {
+            this.dismountReason = EntityDismountEvent.DismountReason.PLAYER; // EMC
             this.stopRiding();
             // CraftBukkit start - SPIGOT-7316: no longer passenger, dismount and return
             if (!this.isPassenger()) {
diff --git a/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java b/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java
index 44a6118d3bd67a95180f750c17967561946e2e87..d08add28029b440488b942d2671097840f31e7b7 100644
--- a/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java
+++ b/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java
@@ -58,6 +58,7 @@ import org.bukkit.event.vehicle.VehicleDamageEvent;
 import org.bukkit.event.vehicle.VehicleDestroyEvent;
 import org.bukkit.event.vehicle.VehicleEntityCollisionEvent;
 import org.bukkit.util.Vector;
+import org.spigotmc.event.entity.EntityDismountEvent;
 // CraftBukkit end
 
 public abstract class AbstractMinecart extends Entity {
@@ -281,7 +282,7 @@ public abstract class AbstractMinecart extends Entity {
                         return true;
                     }
                     // CraftBukkit end
-                    this.ejectPassengers();
+                    this.ejectPassengers(EntityDismountEvent.DismountReason.DEAD_VEHICLE);
                     if (flag && !this.hasCustomName()) {
                         this.discard();
                     } else {
diff --git a/src/main/java/net/minecraft/world/item/ChorusFruitItem.java b/src/main/java/net/minecraft/world/item/ChorusFruitItem.java
index a72903be1ec99ab3c6a305f79442b8763e7f8140..54649ef2561f30fb90fccc45b9643cb9fc944c29 100644
--- a/src/main/java/net/minecraft/world/item/ChorusFruitItem.java
+++ b/src/main/java/net/minecraft/world/item/ChorusFruitItem.java
@@ -12,6 +12,7 @@ import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.gameevent.GameEvent;
 import net.minecraft.world.phys.Vec3;
+import org.spigotmc.event.entity.EntityDismountEvent;
 
 public class ChorusFruitItem extends Item {
 
@@ -34,6 +35,7 @@ public class ChorusFruitItem extends Item {
                 double d5 = user.getZ() + (user.getRandom().nextDouble() - 0.5D) * 16.0D;
 
                 if (user.isPassenger()) {
+                    user.dismountReason = EntityDismountEvent.DismountReason.TELEPORT; // EMC
                     user.stopRiding();
                 }
 
