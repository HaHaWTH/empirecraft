From 2c48ca3f76111f58aa10d70ff01c515030389dea Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Mon, 9 Dec 2013 23:21:21 -0500
Subject: [PATCH] Improved BungeeCord support

Secure BungeeCord with IP Whitelist for IP/UUID forwarding
Allow online-mode to be set to true, and skip online-mode for bungee IP's
---
 src/main/java/net/minecraft/server/HandshakeListener.java | 6 ++++--
 src/main/java/net/minecraft/server/LoginListener.java     | 2 +-
 src/main/java/net/minecraft/server/NetworkManager.java    | 1 +
 src/main/java/org/spigotmc/SpigotConfig.java              | 3 +++
 4 files changed, 9 insertions(+), 3 deletions(-)

diff --git a/src/main/java/net/minecraft/server/HandshakeListener.java b/src/main/java/net/minecraft/server/HandshakeListener.java
index 4d496fd..0855f14 100644
--- a/src/main/java/net/minecraft/server/HandshakeListener.java
+++ b/src/main/java/net/minecraft/server/HandshakeListener.java
@@ -74,7 +74,8 @@ public class HandshakeListener implements PacketHandshakingInListener {
             } else {
                 this.b.setPacketListener(new LoginListener(this.a, this.b));
                 // Paper start - handshake event
-                boolean proxyLogicEnabled = org.spigotmc.SpigotConfig.bungee;
+                String ip = ((java.net.InetSocketAddress) this.b.getSocketAddress()).getAddress().getHostAddress(); // EMC
+                boolean proxyLogicEnabled = org.spigotmc.SpigotConfig.bungee && org.spigotmc.SpigotConfig.bungeeAddresses.contains(ip); // EMC
                 boolean handledByEvent = false;
                 // Try and handle the handshake through the event
                 if (com.destroystokyo.paper.event.player.PlayerHandshakeEvent.getHandlerList().getRegisteredListeners().length != 0) { // Hello? Can you hear me?
@@ -100,12 +101,13 @@ public class HandshakeListener implements PacketHandshakingInListener {
                 // Paper end
                 // Spigot Start
                 //if (org.spigotmc.SpigotConfig.bungee) { // Paper - comment out, we check above!
+                    b.isProxied = true; // EMC
                     String[] split = packethandshakinginsetprotocol.hostname.split("\00");
                     if ( split.length == 3 || split.length == 4 ) {
                         packethandshakinginsetprotocol.hostname = split[0];
                         b.l = new java.net.InetSocketAddress(split[1], ((java.net.InetSocketAddress) b.getSocketAddress()).getPort());
                         b.spoofedUUID = com.mojang.util.UUIDTypeAdapter.fromString( split[2] );
-                    } else
+                    } else if (false) // EMC
                     {
                         chatcomponenttext = new ChatComponentText("If you wish to use IP forwarding, please enable it in your BungeeCord config as well!");
                         this.b.sendPacket(new PacketLoginOutDisconnect(chatcomponenttext));
diff --git a/src/main/java/net/minecraft/server/LoginListener.java b/src/main/java/net/minecraft/server/LoginListener.java
index efa785f..8413201 100644
--- a/src/main/java/net/minecraft/server/LoginListener.java
+++ b/src/main/java/net/minecraft/server/LoginListener.java
@@ -158,7 +158,7 @@ public class LoginListener implements PacketLoginInListener, ITickable {
     public void a(PacketLoginInStart packetlogininstart) {
         Validate.validState(this.g == LoginListener.EnumProtocolState.HELLO, "Unexpected hello packet", new Object[0]);
         this.i = packetlogininstart.a();
-        if (this.server.getOnlineMode() && !this.networkManager.isLocal()) {
+        if (!this.networkManager.isProxied && this.server.getOnlineMode() && !this.networkManager.isLocal()) { // EMC - add !isProxied
             this.g = LoginListener.EnumProtocolState.KEY;
             this.networkManager.sendPacket(new PacketLoginOutEncryptionBegin(this.j, this.server.O().getPublic(), this.e));
         } else {
diff --git a/src/main/java/net/minecraft/server/NetworkManager.java b/src/main/java/net/minecraft/server/NetworkManager.java
index a9ea3f5..13850f5 100644
--- a/src/main/java/net/minecraft/server/NetworkManager.java
+++ b/src/main/java/net/minecraft/server/NetworkManager.java
@@ -69,6 +69,7 @@ public class NetworkManager extends SimpleChannelInboundHandler<Packet<?>> {
     public java.util.UUID spoofedUUID;
     public com.mojang.authlib.properties.Property[] spoofedProfile;
     public boolean preparing = true;
+    public boolean isProxied = false; // EMC
     // Spigot End
     private PacketListener m;
     private IChatBaseComponent n;
diff --git a/src/main/java/org/spigotmc/SpigotConfig.java b/src/main/java/org/spigotmc/SpigotConfig.java
index 374dc38..4540db6 100644
--- a/src/main/java/org/spigotmc/SpigotConfig.java
+++ b/src/main/java/org/spigotmc/SpigotConfig.java
@@ -7,6 +7,7 @@ import java.lang.reflect.InvocationTargetException;
 import java.lang.reflect.Method;
 import java.lang.reflect.Modifier;
 import java.util.Arrays;
+import java.util.Collections;
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.List;
@@ -223,6 +224,7 @@ public class SpigotConfig
     }
 
     public static boolean bungee;
+    public static List<String> bungeeAddresses = Collections.singletonList("127.0.0.1");
     private static void bungee() {
         if ( version < 4 )
         {
@@ -230,6 +232,7 @@ public class SpigotConfig
             System.out.println( "Oudated config, disabling BungeeCord support!" );
         }
         bungee = getBoolean( "settings.bungeecord", false );
+        bungeeAddresses = getList("settings.bungeecord-addresses", bungeeAddresses);
     }
 
     private static void nettyThreads()
-- 
2.8.2

