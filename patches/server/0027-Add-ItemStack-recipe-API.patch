From 62b3dd7e126630db111f41e76fb2727c72c0c130 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Tue, 28 Jan 2014 21:04:24 -0500
Subject: [PATCH] Add ItemStack recipe API

Allows using custom items in Crafting Recipes
---
 src/main/java/net/minecraft/server/ShapedRecipes.java            | 9 ++++++++-
 src/main/java/net/minecraft/server/ShapelessRecipes.java         | 5 ++++-
 .../java/org/bukkit/craftbukkit/inventory/CraftShapedRecipe.java | 5 +++--
 .../org/bukkit/craftbukkit/inventory/CraftShapelessRecipe.java   | 5 +++--
 4 files changed, 18 insertions(+), 6 deletions(-)

diff --git a/src/main/java/net/minecraft/server/ShapedRecipes.java b/src/main/java/net/minecraft/server/ShapedRecipes.java
index 3d511dffb..caad58d3f 100644
--- a/src/main/java/net/minecraft/server/ShapedRecipes.java
+++ b/src/main/java/net/minecraft/server/ShapedRecipes.java
@@ -75,7 +75,8 @@ public class ShapedRecipes implements IRecipe {
         char c = 'a';
         for (ItemStack stack : this.items) {
             if (stack != null) {
-                recipe.setIngredient(c, org.bukkit.craftbukkit.util.CraftMagicNumbers.getMaterial(stack.getItem()), stack.getData());
+                //recipe.setIngredient(c, org.bukkit.craftbukkit.util.CraftMagicNumbers.getMaterial(stack.getItem()), stack.getData()); // EMC
+                recipe.setIngredient(c, stack.getBukkitStack()); // EMC
             }
             c++;
         }
@@ -146,6 +147,12 @@ public class ShapedRecipes implements IRecipe {
                     if (itemstack.getData() != 32767 && itemstack.getData() != itemstack1.getData()) {
                         return false;
                     }
+                    // EMC start
+                    // 32767 is some magic code for "don't care what the durability of the block is"
+                    if (!itemstack.getBukkitStack().isSimilar(itemstack1.getBukkitStack(), itemstack.getData() == 32767)) {
+                        return false;
+                    }
+                    // EMC end
                 }
             }
         }
diff --git a/src/main/java/net/minecraft/server/ShapelessRecipes.java b/src/main/java/net/minecraft/server/ShapelessRecipes.java
index e234a7496..0fad9eb22 100644
--- a/src/main/java/net/minecraft/server/ShapelessRecipes.java
+++ b/src/main/java/net/minecraft/server/ShapelessRecipes.java
@@ -27,7 +27,8 @@ public class ShapelessRecipes implements IRecipe {
         CraftShapelessRecipe recipe = new CraftShapelessRecipe(result, this);
         for (ItemStack stack : (List<ItemStack>) this.ingredients) {
             if (stack != null) {
-                recipe.addIngredient(org.bukkit.craftbukkit.util.CraftMagicNumbers.getMaterial(stack.getItem()), stack.getData());
+                //recipe.addIngredient(org.bukkit.craftbukkit.util.CraftMagicNumbers.getMaterial(stack.getItem()), stack.getData()); // EMC
+                recipe.addIngredient(stack.getBukkitStack()); // EMC
             }
         }
         return recipe;
@@ -63,9 +64,11 @@ public class ShapelessRecipes implements IRecipe {
                     boolean flag = false;
                     Iterator iterator = arraylist.iterator();
 
+                    org.bukkit.inventory.ItemStack bukkitStack = itemstack.getBukkitStack(); // EMC
                     while (iterator.hasNext()) {
                         ItemStack itemstack1 = (ItemStack) iterator.next();
 
+                        if (!bukkitStack.isSimilar(itemstack1.getBukkitStack(), itemstack1.getData() == 32767)) { continue; } // EMC - 32767 is some magic code for "don't care what the durability of the block is"
                         if (itemstack.getItem() == itemstack1.getItem() && (itemstack1.getData() == 32767 || itemstack.getData() == itemstack1.getData())) {
                             flag = true;
                             arraylist.remove(itemstack1);
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftShapedRecipe.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftShapedRecipe.java
index baea75977..c09678e15 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftShapedRecipe.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftShapedRecipe.java
@@ -33,7 +33,7 @@ public class CraftShapedRecipe extends ShapedRecipe implements CraftRecipe {
         for (char c : ingredientMap.keySet()) {
             ItemStack stack = ingredientMap.get(c);
             if (stack != null) {
-                ret.setIngredient(c, stack.getType(), stack.getDurability());
+                ret.setIngredient(c, stack); // EMC
             }
         }
         return ret;
@@ -57,7 +57,8 @@ public class CraftShapedRecipe extends ShapedRecipe implements CraftRecipe {
             i++;
             int id = mdata.getTypeId();
             short dmg = mdata.getDurability();
-            data[i] = new net.minecraft.server.ItemStack(CraftMagicNumbers.getItem(id), 1, dmg);
+            //data[i] = new net.minecraft.server.ItemStack(CraftMagicNumbers.getItem(id), 1, dmg); // EMC
+            data[i] = CraftItemStack.asNMSCopy(mdata); // EMC
             i++;
         }
         CraftingManager.getInstance().registerShapedRecipe(CraftItemStack.asNMSCopy(this.getResult()), data);
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftShapelessRecipe.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftShapelessRecipe.java
index 53479c72c..de562b6fe 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftShapelessRecipe.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftShapelessRecipe.java
@@ -28,7 +28,7 @@ public class CraftShapelessRecipe extends ShapelessRecipe implements CraftRecipe
         }
         CraftShapelessRecipe ret = new CraftShapelessRecipe(recipe.getResult());
         for (ItemStack ingred : recipe.getIngredientList()) {
-            ret.addIngredient(ingred.getType(), ingred.getDurability());
+            ret.addIngredient(ingred); // EMC
         }
         return ret;
     }
@@ -40,7 +40,8 @@ public class CraftShapelessRecipe extends ShapelessRecipe implements CraftRecipe
         for (ItemStack mdata : ingred) {
             int id = mdata.getTypeId();
             short dmg = mdata.getDurability();
-            data[i] = new net.minecraft.server.ItemStack(CraftMagicNumbers.getItem(id), 1, dmg);
+            //data[i] = new net.minecraft.server.ItemStack(CraftMagicNumbers.getItem(id), 1, dmg); // EMC
+            data[i] = CraftItemStack.asNMSCopy(mdata); // EMC
             i++;
         }
         CraftingManager.getInstance().registerShapelessRecipe(CraftItemStack.asNMSCopy(this.getResult()), data);
-- 
2.11.0

