From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Mon, 9 Sep 2013 19:41:07 -0400
Subject: [PATCH] Better hopper events


diff --git a/src/main/java/com/empireminecraft/api/HopperEvents.java b/src/main/java/com/empireminecraft/api/HopperEvents.java
new file mode 100644
index 0000000000000000000000000000000000000000..b5f09c53b182dd8d7a59dda9b0ebecc05a545f6c
--- /dev/null
+++ b/src/main/java/com/empireminecraft/api/HopperEvents.java
@@ -0,0 +1,22 @@
+package com.empireminecraft.api;
+
+import com.empireminecraft.customevents.HopperDrainEvent;
+import com.empireminecraft.customevents.HopperFillEvent;
+import org.bukkit.Bukkit;
+import org.bukkit.inventory.Inventory;
+
+public final class HopperEvents {
+    private HopperEvents() {
+    }
+
+    public static boolean drain(Inventory hopper, Inventory source) {
+        HopperDrainEvent event = new HopperDrainEvent(hopper, source);
+        Bukkit.getPluginManager().callEvent(event);
+        return event.isCancelled();
+    }
+    public static boolean fill(Inventory hopper, Inventory target)  {
+        HopperFillEvent event = new HopperFillEvent(hopper, target);
+        Bukkit.getPluginManager().callEvent(event);
+        return event.isCancelled();
+    }
+}
diff --git a/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java
index 789e5458f4a137694563a22612455506807de51b..727a66145277f92b4edf3993c6982aa9aa92cffb 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java
@@ -193,6 +193,21 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
         return false;
     }
 
+    // EMC start
+    private static Inventory getInventory(final Container container) {
+        final Inventory sourceInventory;
+        if (container instanceof CompoundContainer compoundContainer) {
+            // Have to special-case large chests as they work oddly
+            sourceInventory = new org.bukkit.craftbukkit.inventory.CraftInventoryDoubleChest(compoundContainer);
+        } else if (container instanceof BlockEntity blockEntity) {
+            sourceInventory = blockEntity.getOwner(false).getInventory();
+        } else {
+            sourceInventory = container.getOwner().getInventory();
+        }
+        return sourceInventory;
+    }
+    // EMC end
+
     private static boolean ejectItems(Level world, BlockPos blockposition, BlockState iblockdata, Container iinventory, HopperBlockEntity hopper) { // CraftBukkit
         Container iinventory1 = HopperBlockEntity.getAttachedContainer(world, blockposition, iblockdata);
 
@@ -203,6 +218,7 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
 
             if (HopperBlockEntity.isFullContainer(iinventory1, enumdirection)) {
                 return false;
+            } else if (com.empireminecraft.api.HopperEvents.fill(hopper.getOwner(false).getInventory(), getInventory(iinventory1))) { return false; // EMC
             } else {
                 for (int i = 0; i < iinventory.getContainerSize(); ++i) {
                     if (!iinventory.getItem(i).isEmpty()) {
@@ -272,7 +288,15 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
         if (iinventory != null) {
             Direction enumdirection = Direction.DOWN;
 
-            return HopperBlockEntity.isEmptyContainer(iinventory, enumdirection) ? false : HopperBlockEntity.getSlots(iinventory, enumdirection).anyMatch((i) -> {
+            // EMC start
+            if (HopperBlockEntity.isEmptyContainer(iinventory, enumdirection)) {
+                return false;
+            }
+            if (com.empireminecraft.api.HopperEvents.drain(new org.bukkit.craftbukkit.inventory.CraftInventory(hopper), getInventory(iinventory))) {
+                return false;
+            }
+            return /*HopperBlockEntity.isEmptyContainer(iinventory, enumdirection) ? false :*/ HopperBlockEntity.getSlots(iinventory, enumdirection).anyMatch((i) -> {
+                // EMC end
                 return HopperBlockEntity.a(hopper, iinventory, i, enumdirection, world); // Spigot
             });
         } else {
