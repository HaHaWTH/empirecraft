From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Mon, 9 Sep 2013 19:41:07 -0400
Subject: [PATCH] Better hopper events


diff --git a/src/main/java/com/empireminecraft/api/HopperEvents.java b/src/main/java/com/empireminecraft/api/HopperEvents.java
new file mode 100644
index 0000000000000000000000000000000000000000..e5243da93a2f07b14b78cc2d3103ba36802f2cbc
--- /dev/null
+++ b/src/main/java/com/empireminecraft/api/HopperEvents.java
@@ -0,0 +1,32 @@
+package com.empireminecraft.api;
+
+import com.empireminecraft.customevents.HopperDrainEvent;
+import com.empireminecraft.customevents.HopperFillEvent;
+import net.minecraft.core.BlockPos;
+import net.minecraft.core.Direction;
+import org.bukkit.Bukkit;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.inventory.Inventory;
+
+public final class HopperEvents {
+    private HopperEvents() {
+    }
+
+    public static boolean drain(CraftWorld world, Inventory inventory, double x, double y, double z) {
+        HopperDrainEvent event = new HopperDrainEvent(world, inventory, x, y, z);
+        Bukkit.getPluginManager().callEvent(event);
+        return event.isCancelled();
+    }
+    public static boolean fill(CraftWorld world, Inventory inventory, BlockPos position, Direction enumdirection)  {
+        HopperFillEvent event = new HopperFillEvent(world, inventory,
+            position.getX(),
+            position.getY(),
+            position.getZ(),
+            enumdirection.getStepX(),
+            enumdirection.getStepY(),
+            enumdirection.getStepZ()
+        );
+        Bukkit.getPluginManager().callEvent(event);
+        return event.isCancelled();
+    }
+}
diff --git a/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java
index d41851f9119c334cae3fc2c433d6450a3eed9096..3912032bfaaa1d26cd056ce730861e53a4365da7 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java
@@ -5,6 +5,8 @@ import java.util.List;
 import java.util.function.BooleanSupplier;
 import java.util.stream.IntStream;
 import javax.annotation.Nullable;
+
+import com.empireminecraft.api.HopperEvents;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
 import net.minecraft.core.NonNullList;
@@ -352,6 +354,7 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
         } else {
             Direction enumdirection = ((Direction) iblockdata.getValue(HopperBlock.FACING)).getOpposite();
 
+            if (com.empireminecraft.api.HopperEvents.fill(world.getWorld(), hopper.getOwner(false).getInventory(), hopper.worldPosition, enumdirection)) { return false; } // EMC
             if (HopperBlockEntity.isFullContainer(iinventory1, enumdirection)) {
                 return false;
             } else {
@@ -456,8 +459,12 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
             Direction enumdirection = Direction.DOWN;
 
             // Paper start - optimize hoppers and remove streams
+            // EMC start
+            if (HopperBlockEntity.isEmptyContainer(iinventory, enumdirection)) { return false; }
+            if (HopperEvents.drain((hopper.getLevel()).getWorld(), new org.bukkit.craftbukkit.inventory.CraftInventory(hopper), hopper.getLocation().getX(), hopper.getLocation().getY(), hopper.getLocation().getZ())) { return false; }
             skipPullModeEventFire = skipHopperEvents;
-            return !HopperBlockEntity.isEmptyContainer(iinventory, enumdirection) && anyMatch(iinventory, enumdirection, (item, i) -> {
+            return anyMatch(iinventory, enumdirection, (item, i) -> {
+                // EMC end
                 // Logic copied from below to avoid extra getItem calls
                 if (!item.isEmpty() && canTakeItemFromContainer(iinventory, item, i, enumdirection)) {
                     return hopperPull(hopper, iinventory, item, i);
