From d53514bd7199e85f21fa66b11677c1cc79fd6975 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sun, 26 Nov 2017 13:19:58 -0500
Subject: [PATCH] AsyncTabCompleteEvent

Let plugins be able to control tab completion of commands and chat async.

This will be useful for frameworks like ACF so we can define async safe completion handlers,
and avoid going to main for tab completions.

Especially useful if you need to query a database in order to obtain the results for tab
completion, such as offline players.
---
 .../net/minecraft/server/PlayerConnection.java     | 33 ++++++++++++++--------
 .../java/org/bukkit/craftbukkit/CraftServer.java   |  1 +
 .../command/ConsoleCommandCompleter.java           | 15 ++++++++++
 3 files changed, 38 insertions(+), 11 deletions(-)

diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index cabdb0b2f7..2c9334076f 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -2290,24 +2290,35 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
         // CraftBukkit end
     }
 
-    public void a(PacketPlayInTabComplete packetplayintabcomplete) {
-        PlayerConnectionUtils.ensureMainThread(packetplayintabcomplete, this, this.player.x());
+    // Paper start - async tab completion
+    public void a(PacketPlayInTabComplete packet) {
         // CraftBukkit start
         if (chatSpamField.addAndGet(this, 10) > 500 && !this.minecraftServer.getPlayerList().isOp(this.player.getProfile())) {
-            this.disconnect(new ChatMessage("disconnect.spam", new Object[0]));
+            minecraftServer.postToMainThread(() -> this.disconnect(new ChatMessage("disconnect.spam", new Object[0])));
             return;
         }
         // CraftBukkit end
-        ArrayList arraylist = Lists.newArrayList();
-        Iterator iterator = this.minecraftServer.tabCompleteCommand(this.player, packetplayintabcomplete.a(), packetplayintabcomplete.b(), packetplayintabcomplete.c()).iterator();
 
-        while (iterator.hasNext()) {
-            String s = (String) iterator.next();
-
-            arraylist.add(s);
+        com.destroystokyo.paper.event.server.AsyncTabCompleteEvent event;
+        java.util.List<String> completions = new ArrayList<>();
+        BlockPosition blockpos = packet.b();
+        String currentInput = packet.a();
+        boolean isCommand = packet.c();
+        event = new com.destroystokyo.paper.event.server.AsyncTabCompleteEvent(this.getPlayer(), completions,
+            currentInput, isCommand, blockpos != null ? MCUtil.toLocation(player.world, blockpos) : null);
+        event.callEvent();
+        completions = event.getCompletions();
+        if (!event.shouldFireSyncHandler()) {
+            this.player.playerConnection.sendPacket(new PacketPlayOutTabComplete(completions.toArray(new String[completions.size()])));
+            return;
         }
-
-        this.player.playerConnection.sendPacket(new PacketPlayOutTabComplete((String[]) arraylist.toArray(new String[arraylist.size()])));
+        minecraftServer.postToMainThread(() -> {
+            org.bukkit.event.server.TabCompleteEvent.PREFILL_TAB_COMPLETIONS = event.getCompletions();
+            java.util.List<String> syncCompletions = this.minecraftServer.tabCompleteCommand(this.player, currentInput, blockpos, isCommand);
+            org.bukkit.event.server.TabCompleteEvent.PREFILL_TAB_COMPLETIONS = null;
+            this.player.playerConnection.sendPacket(new PacketPlayOutTabComplete(syncCompletions.toArray(new String[syncCompletions.size()])));
+        });
+        // Paper end
     }
 
     public void a(PacketPlayInSettings packetplayinsettings) {
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 8d4def43a4..f979bb28cc 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -1683,6 +1683,7 @@ public final class CraftServer implements Server {
 
     public List<String> tabCompleteChat(Player player, String message) {
         List<String> completions = new ArrayList<String>();
+        if (org.bukkit.event.server.TabCompleteEvent.PREFILL_TAB_COMPLETIONS != null) { completions.addAll(org.bukkit.event.server.TabCompleteEvent.PREFILL_TAB_COMPLETIONS); } // Paper - Async Tab Completion
         PlayerChatTabCompleteEvent event = new PlayerChatTabCompleteEvent(player, message, completions);
         String token = event.getLastToken();
         for (Player p : getOnlinePlayers()) {
diff --git a/src/main/java/org/bukkit/craftbukkit/command/ConsoleCommandCompleter.java b/src/main/java/org/bukkit/craftbukkit/command/ConsoleCommandCompleter.java
index 1e3aae3b8f..4c0f8cae4c 100644
--- a/src/main/java/org/bukkit/craftbukkit/command/ConsoleCommandCompleter.java
+++ b/src/main/java/org/bukkit/craftbukkit/command/ConsoleCommandCompleter.java
@@ -28,11 +28,26 @@ public class ConsoleCommandCompleter implements Completer {
     public void complete(LineReader reader, ParsedLine line, List<Candidate> candidates) {
         final CraftServer server = this.server.server;
         final String buffer = line.line();
+        // Async Tab Complete
+        com.destroystokyo.paper.event.server.AsyncTabCompleteEvent event;
+        java.util.List<String> completions = new java.util.ArrayList<>();
+        event = new com.destroystokyo.paper.event.server.AsyncTabCompleteEvent(server.getConsoleSender(), completions,
+            buffer, true, null);
+        event.callEvent();
+        completions = event.getCompletions();
+
+        if (!event.shouldFireSyncHandler()) {
+            candidates.addAll(completions.stream().map(Candidate::new).collect(java.util.stream.Collectors.toList()));
+            return;
+        }
+
         // Paper end
         Waitable<List<String>> waitable = new Waitable<List<String>>() {
             @Override
             protected List<String> evaluate() {
+                org.bukkit.event.server.TabCompleteEvent.PREFILL_TAB_COMPLETIONS = event.getCompletions(); // Paper
                 List<String> offers = server.getCommandMap().tabComplete(server.getConsoleSender(), buffer);
+                org.bukkit.event.server.TabCompleteEvent.PREFILL_TAB_COMPLETIONS = null; // Paper
 
                 TabCompleteEvent tabEvent = new TabCompleteEvent(server.getConsoleSender(), buffer, (offers == null) ? Collections.EMPTY_LIST : offers);
                 server.getPluginManager().callEvent(tabEvent);
-- 
2.15.0

