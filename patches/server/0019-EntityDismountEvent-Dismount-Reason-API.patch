From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Wed, 7 Aug 2013 19:52:14 -0400
Subject: [PATCH] EntityDismountEvent Dismount Reason API


diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index b8e59bef2c0adadcfdfa9d2a518b41e394b4faa9..a60b52f2c208c132013fa980d169bb33267209e9 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -176,6 +176,7 @@ import org.bukkit.event.world.GenericGameEvent;
 import org.bukkit.event.world.TimeSkipEvent;
 // CraftBukkit end
 import it.unimi.dsi.fastutil.ints.IntArrayList; // Paper
+import org.spigotmc.event.entity.EntityDismountEvent;
 
 public class ServerLevel extends Level implements WorldGenLevel {
 
@@ -724,6 +725,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
                                 if (!entity1.isRemoved() && entity1.hasPassenger(entity)) {
                                     return;
                                 }
+                                if (entity1.isRemoved()) { entity.dismountReason =  EntityDismountEvent.DismountReason.DEAD_VEHICLE; } // EMC
 
                                 entity.stopRiding();
                             }
@@ -1271,6 +1273,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
             } finally { timer.stopTiming(); }// Paper - EAR2 timings
             }
         } else {
+            if (passenger.isRemoved()) { passenger.dismountReason = EntityDismountEvent.DismountReason.DEAD; } // EMC
             passenger.stopRiding();
         }
     }
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 1d4d02f26391ac55c7631817f09d05e2769b0d29..fcd3e905e4644a7f9d3de30c334879a880523079 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -183,6 +183,7 @@ import org.bukkit.event.player.PlayerTeleportEvent;
 import org.bukkit.event.player.PlayerTeleportEvent.TeleportCause;
 import org.bukkit.event.player.PlayerToggleSneakEvent;
 import org.bukkit.inventory.MainHand;
+import org.spigotmc.event.entity.EntityDismountEvent;
 // CraftBukkit end
 
 public class ServerPlayer extends Player {
@@ -1703,10 +1704,11 @@ public class ServerPlayer extends Player {
 
     public void disconnect() {
         this.disconnected = true;
-        this.ejectPassengers();
+        this.ejectPassengers(EntityDismountEvent.DismountReason.DISCONNECT);
 
         // Paper start - Workaround an issue where the vehicle doesn't track the passenger disconnection dismount.
         if (this.isPassenger() && this.getVehicle() instanceof ServerPlayer) {
+            this.dismountReason = EntityDismountEvent.DismountReason.DISCONNECT; // EMC
             this.stopRiding();
         }
         // Paper end
@@ -1841,6 +1843,7 @@ public class ServerPlayer extends Player {
         ChunkPos chunkcoordintpair = new ChunkPos(BlockPos.containing(d0, d1, d2));
 
         worldserver.getChunkSource().addRegionTicket(TicketType.POST_TELEPORT, chunkcoordintpair, 1, this.getId());
+        this.dismountReason = EntityDismountEvent.DismountReason.TELEPORT; // EMC
         this.stopRiding();
         if (this.isSleeping()) {
             this.stopSleepInBed(true, true);
@@ -1899,6 +1902,7 @@ public class ServerPlayer extends Player {
             this.connection.send(new ClientboundGameEventPacket(ClientboundGameEventPacket.CHANGE_GAME_MODE, (float) gameMode.getId()));
             if (gameMode == GameType.SPECTATOR) {
                 this.removeEntitiesOnShoulder();
+                this.dismountReason = EntityDismountEvent.DismountReason.SPECTATE; // EMC
                 this.stopRiding();
             } else {
                 this.setCamera(this);
@@ -2152,6 +2156,7 @@ public class ServerPlayer extends Player {
     public void teleportTo(ServerLevel worldserver, double d0, double d1, double d2, float f, float f1, org.bukkit.event.player.PlayerTeleportEvent.TeleportCause cause) {
         // CraftBukkit end
         this.setCamera(this);
+        this.dismountReason = EntityDismountEvent.DismountReason.TELEPORT; // EMC
         this.stopRiding();
         /* CraftBukkit start - replace with bukkit handling for multi-world
         if (worldserver == this.level) {
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index 4d837c1530a3031a4c2a5a39d87bd013d60e14a6..c93c53c5f01bd01a12a923a01170b7e73fe7296d 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -126,6 +126,7 @@ import org.bukkit.event.player.PlayerLoginEvent;
 import org.bukkit.event.player.PlayerQuitEvent;
 import org.bukkit.event.player.PlayerRespawnEvent;
 import org.bukkit.event.player.PlayerRespawnEvent.RespawnReason;
+import org.spigotmc.event.entity.EntityDismountEvent;
 // CraftBukkit end
 
 public abstract class PlayerList {
@@ -617,6 +618,7 @@ public abstract class PlayerList {
 
             if (entity.hasExactlyOnePlayerPassenger()) {
                 PlayerList.LOGGER.debug("Removing player mount");
+                entityplayer.dismountReason = EntityDismountEvent.DismountReason.DISCONNECT; // EMC
                 entityplayer.stopRiding();
                 entity.getPassengersAndSelf().forEach((entity1) -> {
                     // Paper start
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 88a733ce734e927f5af68ed161d70ffa86b290cc..c392e5d5e3de18ff428b3026254c22b9729908e7 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -156,6 +156,7 @@ import org.bukkit.event.entity.EntityPortalEvent;
 import org.bukkit.event.entity.EntityPoseChangeEvent;
 import org.bukkit.event.player.PlayerTeleportEvent;
 import org.bukkit.plugin.PluginManager;
+import org.spigotmc.event.entity.EntityDismountEvent;
 // CraftBukkit end
 
 public abstract class Entity implements Nameable, EntityAccess, CommandSource {
@@ -806,6 +807,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
         if (firstTick && this instanceof net.minecraft.world.entity.NeutralMob neutralMob) neutralMob.tickInitialPersistentAnger(level); // Paper - Update last hurt when ticking
         this.feetBlockState = null;
         if (this.isPassenger() && this.getVehicle().isRemoved()) {
+            this.dismountReason = EntityDismountEvent.DismountReason.DEAD_VEHICLE; // EMC
             this.stopRiding();
         }
 
@@ -2704,6 +2706,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
                 return false;
             } else {
                 if (this.isPassenger()) {
+                    this.dismountReason = EntityDismountEvent.DismountReason.TRANSFER; // EMC
                     this.stopRiding();
                 }
 
@@ -2729,7 +2732,11 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
     }
 
     public void ejectPassengers() {
+        ejectPassengers(EntityDismountEvent.DismountReason.UNKNOWN);
+    }
+    public void ejectPassengers(EntityDismountEvent.DismountReason reason) {
         for (int i = this.passengers.size() - 1; i >= 0; --i) {
+            this.passengers.get(i).dismountReason = reason; // EMC
             ((Entity) this.passengers.get(i)).stopRiding();
         }
 
@@ -2818,6 +2825,8 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
     // Paper start
     protected boolean removePassenger(Entity entity) { return removePassenger(entity, false);}
     protected boolean removePassenger(Entity entity, boolean suppressCancellation) { // CraftBukkit
+        EntityDismountEvent.DismountReason dismountReason = entity.dismountReason; // EMC
+        entity.dismountReason = EntityDismountEvent.DismountReason.UNKNOWN; // EMC
         // Paper end
         if (entity.getVehicle() == this) {
             throw new IllegalStateException("Use x.stopRiding(y), not y.removePassenger(x)");
@@ -2842,7 +2851,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
             }
             // CraftBukkit end
             // Spigot start
-            org.spigotmc.event.entity.EntityDismountEvent event = new org.spigotmc.event.entity.EntityDismountEvent(entity.getBukkitEntity(), this.getBukkitEntity(), !suppressCancellation); // Paper
+            org.spigotmc.event.entity.EntityDismountEvent event = new org.spigotmc.event.entity.EntityDismountEvent(entity.getBukkitEntity(), this.getBukkitEntity(), !suppressCancellation, dismountReason); // Paper
             // Suppress during worldgen
             if (this.valid) {
                 Bukkit.getPluginManager().callEvent(event);
@@ -3370,6 +3379,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
         return this.removalReason != null ? String.format(Locale.ROOT, "%s['%s'/%d, uuid='%s', l='%s', x=%.2f, y=%.2f, z=%.2f, cpos=%s, tl=%d, v=%b, removed=%s]", this.getClass().getSimpleName(), this.getName().getString(), this.id, this.uuid, s, this.getX(), this.getY(), this.getZ(), this.chunkPosition(), this.tickCount, this.valid, this.removalReason) : String.format(Locale.ROOT, "%s['%s'/%d, uuid='%s', l='%s', x=%.2f, y=%.2f, z=%.2f, cpos=%s, tl=%d, v=%b]", this.getClass().getSimpleName(), this.getName().getString(), this.id, this.uuid, s, this.getX(), this.getY(), this.getZ(), this.chunkPosition(), this.tickCount, this.valid);
     }
 
+    public EntityDismountEvent.DismountReason dismountReason = EntityDismountEvent.DismountReason.UNKNOWN; // EMC
     public boolean isInvulnerableTo(DamageSource damageSource) {
         return this.isRemoved() || this.invulnerable && !damageSource.is(DamageTypeTags.BYPASSES_INVULNERABILITY) && !damageSource.isCreativePlayer() && !isDisabled || damageSource.is(DamageTypeTags.IS_FIRE) && this.fireImmune() || damageSource.is(DamageTypeTags.IS_FALL) && this.getType().is(EntityTypeTags.FALL_DAMAGE_IMMUNE); // EMC - add !isDisabled
     }
@@ -4560,10 +4570,18 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
         }
 
         if (this.removalReason.shouldDestroy()) {
+            this.dismountReason = EntityDismountEvent.DismountReason.DEAD; // EMC
             this.stopRiding();
         }
 
-        if (reason != RemovalReason.UNLOADED_TO_CHUNK) this.getPassengers().forEach(Entity::stopRiding); // Paper - chunk system - don't adjust passenger state when unloading, it's just not safe (and messes with our logic in entity chunk unload)
+        // EMC start
+        if (reason != RemovalReason.UNLOADED_TO_CHUNK) { // Paper - chunk system - don't adjust passenger state when unloading, it's just not safe (and messes with our logic in entity chunk unload)
+            this.getPassengers().forEach(entity -> {
+                entity.dismountReason = EntityDismountEvent.DismountReason.DEAD_VEHICLE; // EMC - Add this
+                entity.stopRiding();
+            });
+        }
+        // EMC end
         this.levelCallback.onRemove(reason);
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index ca41d009abca627469fc4e74246cffbb3f159908..8e08d9da5928360e6c8c62a4593a16b33d9f6421 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -142,6 +142,7 @@ import org.bukkit.event.player.PlayerItemConsumeEvent;
 // CraftBukkit end
 
 import co.aikar.timings.MinecraftTimings; // Paper
+import org.spigotmc.event.entity.EntityDismountEvent;
 
 public abstract class LivingEntity extends Entity implements Attackable {
 
@@ -434,6 +435,7 @@ public abstract class LivingEntity extends Entity implements Attackable {
                 }
 
                 if (!this.level.isClientSide && this.isPassenger() && this.getVehicle() != null && this.getVehicle().dismountsUnderwater()) {
+                    this.dismountReason = EntityDismountEvent.DismountReason.WATER; // EMC
                     this.stopRiding();
                 }
             } else if (this.getAirSupply() < this.getMaxAirSupply()) {
@@ -4188,6 +4190,7 @@ public abstract class LivingEntity extends Entity implements Attackable {
 
     public void startSleeping(BlockPos pos) {
         if (this.isPassenger()) {
+            if (this instanceof net.minecraft.world.entity.player.Player) this.dismountReason = EntityDismountEvent.DismountReason.PLAYER; // EMC
             this.stopRiding();
         }
 
diff --git a/src/main/java/net/minecraft/world/entity/Mob.java b/src/main/java/net/minecraft/world/entity/Mob.java
index 117d9f8f796a60e34865d2bb0d511ff00f646931..6c9c93420cb242de02d0976457c0963c289298f9 100644
--- a/src/main/java/net/minecraft/world/entity/Mob.java
+++ b/src/main/java/net/minecraft/world/entity/Mob.java
@@ -84,6 +84,7 @@ import org.bukkit.event.entity.EntityTargetEvent;
 import org.bukkit.event.entity.EntityTransformEvent;
 import org.bukkit.event.entity.EntityUnleashEvent;
 import org.bukkit.event.entity.EntityUnleashEvent.UnleashReason;
+import org.spigotmc.event.entity.EntityDismountEvent;
 // CraftBukkit end
 
 public abstract class Mob extends LivingEntity implements Targeting {
@@ -1531,6 +1532,7 @@ public abstract class Mob extends LivingEntity implements Targeting {
         }
 
         if (this.isPassenger()) {
+            this.dismountReason = EntityDismountEvent.DismountReason.LEASH; // EMC
             this.stopRiding();
         }
 
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index 0629c471d38a77c44fc1c86ccdfcb0690f61ca17..6a4dabbe92156e92428a09f8b2974488e7be1366 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -125,6 +125,7 @@ import org.bukkit.event.entity.EntityCombustByEntityEvent;
 import org.bukkit.event.entity.EntityExhaustionEvent;
 import org.bukkit.event.player.PlayerDropItemEvent;
 import org.bukkit.event.player.PlayerVelocityEvent;
+import org.spigotmc.event.entity.EntityDismountEvent;
 // CraftBukkit end
 
 public abstract class Player extends LivingEntity {
@@ -518,6 +519,7 @@ public abstract class Player extends LivingEntity {
     @Override
     public void rideTick() {
         if (!this.level.isClientSide && this.wantsToStopRiding() && this.isPassenger()) {
+            this.dismountReason = EntityDismountEvent.DismountReason.PLAYER; // EMC
             this.stopRiding();
             // CraftBukkit start - SPIGOT-7316: no longer passenger, dismount and return
             if (!this.isPassenger()) {
diff --git a/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java b/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java
index 9a80cf593bbdd7681bc9395daf4545a98e07636f..f65446a2dfb9afc773e8212f114514d99ac6072d 100644
--- a/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java
+++ b/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java
@@ -53,6 +53,7 @@ import org.bukkit.event.vehicle.VehicleDamageEvent;
 import org.bukkit.event.vehicle.VehicleDestroyEvent;
 import org.bukkit.event.vehicle.VehicleEntityCollisionEvent;
 import org.bukkit.util.Vector;
+import org.spigotmc.event.entity.EntityDismountEvent;
 // CraftBukkit end
 
 public abstract class AbstractMinecart extends Entity {
@@ -272,7 +273,7 @@ public abstract class AbstractMinecart extends Entity {
                         return true;
                     }
                     // CraftBukkit end
-                    this.ejectPassengers();
+                    this.ejectPassengers(EntityDismountEvent.DismountReason.DEAD_VEHICLE);
                     if (flag && !this.hasCustomName()) {
                         this.discard();
                     } else {
diff --git a/src/main/java/net/minecraft/world/item/ChorusFruitItem.java b/src/main/java/net/minecraft/world/item/ChorusFruitItem.java
index d38161d6266c2460666434d5f0930ecf16096977..3fbb031785daa25211bb608b1f1bce1905aa7787 100644
--- a/src/main/java/net/minecraft/world/item/ChorusFruitItem.java
+++ b/src/main/java/net/minecraft/world/item/ChorusFruitItem.java
@@ -12,6 +12,7 @@ import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.gameevent.GameEvent;
 import net.minecraft.world.phys.Vec3;
+import org.spigotmc.event.entity.EntityDismountEvent;
 
 public class ChorusFruitItem extends Item {
 
@@ -34,6 +35,7 @@ public class ChorusFruitItem extends Item {
                 double d5 = user.getZ() + (user.getRandom().nextDouble() - 0.5D) * 16.0D;
 
                 if (user.isPassenger()) {
+                    user.dismountReason = EntityDismountEvent.DismountReason.TELEPORT; // EMC
                     user.stopRiding();
                 }
 
