From c72346926df327a9c152f1aebbd1cf2f6d871ca3 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Wed, 20 Dec 2017 17:36:49 -0500
Subject: [PATCH] Ability to apply mending to gained XP

This allows plugins that give players the ability to apply the experience
points to the Item Mending formula, which will repair an item instead
of giving the player EXP.

Both an API To standalone mend, and apply mending logic to .giveExp has been added.
---
 .../net/minecraft/server/EnchantmentManager.java   |  1 +
 .../net/minecraft/server/EntityExperienceOrb.java  |  2 ++
 src/main/java/net/minecraft/server/ItemStack.java  |  4 ++-
 .../org/bukkit/craftbukkit/entity/CraftPlayer.java | 33 +++++++++++++++++++++-
 4 files changed, 38 insertions(+), 2 deletions(-)

diff --git a/src/main/java/net/minecraft/server/EnchantmentManager.java b/src/main/java/net/minecraft/server/EnchantmentManager.java
index 8a96bd34e0..33c5b68f1b 100644
--- a/src/main/java/net/minecraft/server/EnchantmentManager.java
+++ b/src/main/java/net/minecraft/server/EnchantmentManager.java
@@ -231,6 +231,7 @@ public class EnchantmentManager {
         return getEnchantmentLevel(Enchantments.D, itemstack) > 0;
     }
 
+    public static ItemStack getRandomEquippedItemWithEnchant(Enchantment enchantment, EntityLiving entityliving) { return b(enchantment, entityliving); } // Paper - OBFHELPER
     public static ItemStack b(Enchantment enchantment, EntityLiving entityliving) {
         List list = enchantment.a(entityliving);
 
diff --git a/src/main/java/net/minecraft/server/EntityExperienceOrb.java b/src/main/java/net/minecraft/server/EntityExperienceOrb.java
index ff5cc74ba7..1c59fd9661 100644
--- a/src/main/java/net/minecraft/server/EntityExperienceOrb.java
+++ b/src/main/java/net/minecraft/server/EntityExperienceOrb.java
@@ -234,10 +234,12 @@ public class EntityExperienceOrb extends Entity {
         }
     }
 
+    public int durToXp(int i) { return c(i); } // Paper OBFHELPER
     private int c(int i) {
         return i / 2;
     }
 
+    public int xpToDur(int i) { return d(i); } // Paper OBFHELPER
     private int d(int i) {
         return i * 2;
     }
diff --git a/src/main/java/net/minecraft/server/ItemStack.java b/src/main/java/net/minecraft/server/ItemStack.java
index cb4fc944b9..4c72394db9 100644
--- a/src/main/java/net/minecraft/server/ItemStack.java
+++ b/src/main/java/net/minecraft/server/ItemStack.java
@@ -49,7 +49,7 @@ public final class ItemStack {
     private Item item;
     public NBTTagCompound tag; // EMC
     private boolean g;
-    private int damage;
+    private int damage; public void setDamage(int i) { this.damage = 0; } // Paper - OBFHELPER
     private EntityItemFrame i;
     private Block j;
     private boolean k;
@@ -372,10 +372,12 @@ public final class ItemStack {
         return this.getItem().k();
     }
 
+    public boolean hasDamage() { return h(); } // Paper OBFHELPER
     public boolean h() {
         return this.f() && this.damage > 0;
     }
 
+    public int getDamage() { return i(); } // Paper OBFHELPER
     public int i() {
         return this.damage;
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index a77baafe5d..752e1dd67d 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -951,8 +951,39 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         return GameMode.getByValue(getHandle().playerInteractManager.getGameMode().getId());
     }
 
+    // Paper start
     @Override
-    public void giveExp(int exp) {
+    public int applyMending(int amount) {
+        EntityPlayer handle = getHandle();
+        // Logic copied from EntityExperienceOrb and remapped to unobfuscated methods/properties
+        ItemStack itemstack = EnchantmentManager.getRandomEquippedItemWithEnchant(Enchantments.MENDING, handle);
+        if (!itemstack.isEmpty() && itemstack.hasDamage()) {
+
+            EntityExperienceOrb orb = new EntityExperienceOrb(handle.world);
+            orb.value = amount;
+            orb.spawnReason = org.bukkit.entity.ExperienceOrb.SpawnReason.CUSTOM;
+            orb.locX = handle.locX;
+            orb.locY = handle.locY;
+            orb.locZ = handle.locZ;
+
+            int i = Math.min(orb.xpToDur(amount), itemstack.getDamage());
+            org.bukkit.event.player.PlayerItemMendEvent event = org.bukkit.craftbukkit.event.CraftEventFactory.callPlayerItemMendEvent(handle, orb, itemstack, i);
+            i = event.getRepairAmount();
+            orb.dead = true;
+            if (!event.isCancelled()) {
+                amount -= orb.durToXp(i);
+                itemstack.setDamage(itemstack.getDamage() - i);
+            }
+        }
+        return amount;
+    }
+
+    @Override
+    public void giveExp(int exp, boolean applyMending) {
+        if (applyMending) {
+            exp = this.applyMending(exp);
+        }
+        // Paper end
         getHandle().giveExp(exp);
     }
 
-- 
2.15.1

