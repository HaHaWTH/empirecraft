From 1314fde9aea1905467511e788fce328e966a49fb Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sat, 28 Mar 2020 18:18:03 -0400
Subject: [PATCH] EAR improvements

---
 .../java/net/minecraft/server/Entity.java     |  1 +
 .../net/minecraft/server/EntityLiving.java    |  2 +-
 .../java/org/spigotmc/ActivationRange.java    | 46 +++++++++++--------
 .../java/org/spigotmc/SpigotWorldConfig.java  |  2 +
 4 files changed, 31 insertions(+), 20 deletions(-)

diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index fd8b97beef..0c2a1be425 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -218,6 +218,7 @@ Entity implements INamableTileEntity, ICommandListener, KeyedObject { // Paper
     public final org.spigotmc.ActivationRange.ActivationType activationType = org.spigotmc.ActivationRange.initializeEntityActivationType(this);
     public final boolean defaultActivationState;
     public long activatedTick = Integer.MIN_VALUE;
+    public boolean isTemporarilyActive = false; // Paper
     public boolean spawnedViaMobSpawner; // Paper - Yes this name is similar to above, upstream took the better one
     public boolean fromNetherPortal; // Paper
     protected int numCollisions = 0; // Paper
diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java
index 6cce611ffa..4badd1b864 100644
--- a/src/main/java/net/minecraft/server/EntityLiving.java
+++ b/src/main/java/net/minecraft/server/EntityLiving.java
@@ -2408,7 +2408,7 @@ public abstract class EntityLiving extends Entity {
             }
         }
 
-        this.movementTick();
+        if (!this.isTemporarilyActive || this.world.spigotConfig.moveInactiveEntities) this.movementTick(); // Paper - don't move if only temporarily active
         double d0 = this.locX() - this.lastX;
         double d1 = this.locZ() - this.lastZ;
         float f = (float) (d0 * d0 + d1 * d1);
diff --git a/src/main/java/org/spigotmc/ActivationRange.java b/src/main/java/org/spigotmc/ActivationRange.java
index 391a8c5e59..6e05f7c42a 100644
--- a/src/main/java/org/spigotmc/ActivationRange.java
+++ b/src/main/java/org/spigotmc/ActivationRange.java
@@ -203,22 +203,22 @@ public class ActivationRange
      * @param entity
      * @return
      */
-    public static boolean checkEntityImmunities(Entity entity)
+    public static int checkEntityImmunities(Entity entity) // Paper - return # of ticks to get immunity
     {
         // quick checks.
         if ( (entity.activationType != ActivationType.WATER && entity.inWater) || entity.fireTicks > 0 ) // Paper
         {
-            return true;
+            return 1; // Paper
         }
         if ( !( entity instanceof EntityArrow ) )
         {
-            if ( (!entity.onGround && entity instanceof EntityFlying) || !entity.passengers.isEmpty() || entity.isPassenger() ) // Paper
+            if ( (!entity.onGround && !(entity instanceof EntityFlying)) || !entity.passengers.isEmpty() || entity.isPassenger() ) // Paper
             {
-                return true;
+                return 10; // Paper
             }
         } else if ( !( (EntityArrow) entity ).inGround )
         {
-            return true;
+            return 1; // Paper
         }
         // special cases.
         if ( entity instanceof EntityLiving )
@@ -226,25 +226,25 @@ public class ActivationRange
             EntityLiving living = (EntityLiving) entity;
             if ( /*TODO: Missed mapping? living.attackTicks > 0 || */ living.hurtTicks > 0 || living.effects.size() > 0 )
             {
-                return true;
+                return 1; // Paper
             }
             if ( entity instanceof EntityCreature && (( (EntityCreature) entity ).getGoalTarget() instanceof EntityPlayer /*|| ( (EntityCreature) entity ).getMovingTarget() != null*/)) // Paper // EMC
             {
-                return true;
+                return 20; // Paper
             }
             // Paper start
             if ( entity instanceof EntityVillager && ( (EntityVillager) entity ).canBreed() )
             {
                 BehaviorController<EntityVillager> behaviorController = ((EntityVillager) entity).getBehaviorController();
                 if (behaviorController.hasMemory(MemoryModuleType.BREED_TARGET)) {
-                    return true;
+                    return 1;
                 }
                 // Paper end
             }
             // Paper start
             if ( entity instanceof EntityLlama && ( (EntityLlama ) entity ).inCaravan() )
             {
-                return true;
+                return 0;
             }
             // Paper end
             if ( entity instanceof EntityAnimal )
@@ -252,18 +252,23 @@ public class ActivationRange
                 EntityAnimal animal = (EntityAnimal) entity;
                 if ( animal.isBaby() || animal.isInLove() )
                 {
-                    return true;
+                    return 1; // Paper
                 }
                 if ( entity instanceof EntitySheep && ( (EntitySheep) entity ).isSheared() )
                 {
-                    return true;
+                    return 1; // Paper
                 }
             }
             if (entity instanceof EntityCreeper && ((EntityCreeper) entity).isIgnited()) { // isExplosive
-                return true;
+                return 20; // Paper
             }
+            // Paper start
+            if (entity instanceof EntityInsentient && ((EntityInsentient) entity).targetSelector.hasTasks() ) {
+                return 0;
+            }
+            // Paper end
         }
-        return false;
+        return -1; // Paper
     }
 
     /**
@@ -281,6 +286,7 @@ public class ActivationRange
         }
 
         boolean isActive = entity.activatedTick >= MinecraftServer.currentTick || entity.defaultActivationState;
+        entity.isTemporarilyActive = !isActive; // Paper
 
         // Should this entity tick?
         if ( !isActive )
@@ -288,17 +294,19 @@ public class ActivationRange
             if ( ( MinecraftServer.currentTick - entity.activatedTick - 1 ) % 20 == 0 )
             {
                 // Check immunities every 20 ticks.
-                if ( checkEntityImmunities( entity ) )
-                {
-                    // Triggered some sort of immunity, give 20 full ticks before we check again.
-                    entity.activatedTick = MinecraftServer.currentTick + 20;
+                // Paper start
+                int immunity = checkEntityImmunities(entity);
+                if (immunity >= 0) {
+                    entity.activatedTick = MinecraftServer.currentTick + immunity;
                 } else {
-                    entity.activatedTick = MinecraftServer.currentTick; // Paper
+                    entity.isTemporarilyActive = true;
                 }
+                // Paper end
                 isActive = true;
+
             }
             // Add a little performance juice to active entities. Skip 1/4 if not immune.
-        } else if ( !entity.defaultActivationState && entity.ticksLived % 4 == 0 && !(entity instanceof EntityInsentient && ((EntityInsentient) entity).targetSelector.hasTasks()) && !checkEntityImmunities( entity ) ) // Paper - add targetSelector.hasTasks
+        } else if ( !entity.defaultActivationState && entity.ticksLived % 4 == 0 && checkEntityImmunities( entity) < 0 ) // Paper
         {
             isActive = false;
         }
diff --git a/src/main/java/org/spigotmc/SpigotWorldConfig.java b/src/main/java/org/spigotmc/SpigotWorldConfig.java
index 3ceeed3f99..1540afd805 100644
--- a/src/main/java/org/spigotmc/SpigotWorldConfig.java
+++ b/src/main/java/org/spigotmc/SpigotWorldConfig.java
@@ -181,6 +181,7 @@ public class SpigotWorldConfig
     public int raiderActivationRange = 48;
     public int miscActivationRange = 16;
     public int waterActivationRange = 16; // Paper
+    public boolean moveInactiveEntities = false; // Paper
     public boolean tickInactiveVillagers = true;
     private void activationRange()
     {
@@ -189,6 +190,7 @@ public class SpigotWorldConfig
         raiderActivationRange = getInt( "entity-activation-range.raiders", raiderActivationRange );
         miscActivationRange = getInt( "entity-activation-range.misc", miscActivationRange );
         waterActivationRange = getInt( "entity-activation-range.water", waterActivationRange ); // Paper
+        moveInactiveEntities = getBoolean( "entity-activation-range.move-inactive-entities", moveInactiveEntities ); // Paper
         tickInactiveVillagers = getBoolean( "entity-activation-range.tick-inactive-villagers", tickInactiveVillagers );
         log( "Entity Activation Range: An " + animalActivationRange + " / Mo " + monsterActivationRange + " / Ra " + raiderActivationRange + " / Mi " + miscActivationRange + " / Tiv " + tickInactiveVillagers );
     }
-- 
2.25.1

