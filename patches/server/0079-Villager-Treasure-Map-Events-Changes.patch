From 51f8a6b67cf90f0ad8a8384549d70f218f21ff06 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Tue, 13 Dec 2016 00:40:10 -0500
Subject: [PATCH] Villager Treasure Map Events / Changes

---
 .../empireminecraft/api/CraftEAPI_Misc.java   | 35 +++++++++++++++++++
 .../net/minecraft/server/EntityVillager.java  | 28 +++++++--------
 .../java/net/minecraft/server/ItemStack.java  |  1 +
 src/main/java/net/minecraft/server/World.java |  2 +-
 4 files changed, 51 insertions(+), 15 deletions(-)

diff --git a/src/main/java/com/empireminecraft/api/CraftEAPI_Misc.java b/src/main/java/com/empireminecraft/api/CraftEAPI_Misc.java
index fa8cbd5a38..2065032836 100644
--- a/src/main/java/com/empireminecraft/api/CraftEAPI_Misc.java
+++ b/src/main/java/com/empireminecraft/api/CraftEAPI_Misc.java
@@ -23,5 +23,40 @@
 
 package com.empireminecraft.api;
 
+import net.minecraft.server.BlockPosition;
+import net.minecraft.server.ItemStack;
+import net.minecraft.server.ItemWorldMap;
+import net.minecraft.server.MCUtil;
+import net.minecraft.server.MapIcon.Type;
+import net.minecraft.server.World;
+import net.minecraft.server.WorldMap;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+
+import javax.annotation.Nonnull;
+
 public class CraftEAPI_Misc implements EAPI_Misc {
+
+    @Override
+    public Location findNearestStructure(@Nonnull String structure, @Nonnull Location center, int radius) {
+        final World world = MCUtil.getNMSWorld(center.getWorld());
+        final BlockPosition blockposition = world.findNearestStructure(structure, MCUtil.toBlockPosition(center), radius, true);
+        return blockposition != null ? MCUtil.toLocation(world, blockposition) : null;
+    }
+
+    @Override
+    public org.bukkit.inventory.ItemStack createTreasureMap(@Nonnull String mapType, int iconType, @Nonnull Location loc) {
+        Type[] values = Type.values();
+        if (iconType >= values.length) {
+            throw new IllegalArgumentException("Invalid Icon Type");
+        }
+        final World world = MCUtil.getNMSWorld(loc.getWorld());
+        final BlockPosition pos = MCUtil.toBlockPosition(loc);
+        ItemStack itemstack = ItemWorldMap.createFilledMapView(world, pos.getX(), pos.getZ(), (byte) 2, true, true);
+        ItemWorldMap.applySepiaFilter(world, itemstack);
+
+        WorldMap.decorateMap(itemstack, pos, "+", values[iconType]);
+        itemstack.setLocaleName("filled_map." + mapType);
+        return CraftItemStack.asCraftMirror(itemstack);
+    }
 }
diff --git a/src/main/java/net/minecraft/server/EntityVillager.java b/src/main/java/net/minecraft/server/EntityVillager.java
index 6623fc8bb1..4026b292a0 100644
--- a/src/main/java/net/minecraft/server/EntityVillager.java
+++ b/src/main/java/net/minecraft/server/EntityVillager.java
@@ -4,6 +4,7 @@ import java.util.Iterator;
 import java.util.Locale;
 import java.util.Random;
 import javax.annotation.Nullable;
+import com.empireminecraft.customevents.CreatePendingTreasureMapEvent;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 // CraftBukkit start
@@ -818,8 +819,8 @@ public class EntityVillager extends EntityAgeable implements NPC, IMerchant {
     static class h implements EntityVillager.IMerchantRecipeOption {
 
         public EntityVillager.MerchantOptionRandomRange a;
-        public String b;
-        public MapIcon.Type c;
+        public String b;String getMapType() { return b; } // EMC - OBF HELPER
+        public MapIcon.Type c; MapIcon.Type getIconType() { return c; } // EMC - OBF HELPER
 
         public h(EntityVillager.MerchantOptionRandomRange entityvillager_merchantoptionrandomrange, String s, MapIcon.Type mapicon_type) {
             this.a = entityvillager_merchantoptionrandomrange;
@@ -828,20 +829,19 @@ public class EntityVillager extends EntityAgeable implements NPC, IMerchant {
         }
 
         public void a(IMerchant imerchant, MerchantRecipeList merchantrecipelist, Random random) {
-            int i = this.a.a(random);
+            int i = Math.min(64, 35 + this.a.a(random)); // EMC - boost cost due to modified behavior - each map is unique, when its not in vanilla
             World world = imerchant.getWorld();
             if (!world.paperConfig.enableTreasureMaps) return; //Paper
-            BlockPosition blockposition = world.a(this.b, imerchant.getPosition(), 100, true);
-
-            if (blockposition != null) {
-                ItemStack itemstack = ItemWorldMap.createFilledMapView(world, blockposition.getX(), blockposition.getZ(), (byte) 2, true, true);
-
-                ItemWorldMap.applySepiaFilter(world, itemstack);
-                WorldMap.decorateMap(itemstack, blockposition, "+", this.c);
-                itemstack.a((IChatBaseComponent) (new ChatMessage("filled_map." + this.b.toLowerCase(Locale.ROOT), new Object[0])));
-                merchantrecipelist.add(new MerchantRecipe(new ItemStack(Items.EMERALD, i), new ItemStack(Items.COMPASS), itemstack));
-            }
-
+            //BlockPosition blockposition = world.a(this.b, imerchant.getPosition(), 100, true);
+            // EMC start - refactor treasure maps to be pending - ABSOLUTELY DEPENDS ON PLUGIN CODE!!!!!!!!!!!
+            CreatePendingTreasureMapEvent event = new CreatePendingTreasureMapEvent(this.getMapType(), getIconType().ordinal());
+            event.callEvent();
+            if (event.getItem() != null) {
+                ItemStack item = org.bukkit.craftbukkit.inventory.CraftItemStack.asNMSCopy(event.getItem());
+                // Max 2 purchase before lock
+                merchantrecipelist.add(new MerchantRecipe(new ItemStack(Items.EMERALD, i), new ItemStack(Items.COMPASS), item, 0, 2));
+            }
+            // EMC end
         }
     }
 
diff --git a/src/main/java/net/minecraft/server/ItemStack.java b/src/main/java/net/minecraft/server/ItemStack.java
index 470315491c..4479732ce0 100644
--- a/src/main/java/net/minecraft/server/ItemStack.java
+++ b/src/main/java/net/minecraft/server/ItemStack.java
@@ -664,6 +664,7 @@ public final class ItemStack {
         return this.getItem().i(this);
     }
 
+    public ItemStack setLocaleName(String s) { return a(new ChatMessage("filled_map." + s.toLowerCase(Locale.ROOT))); } // EMC - OBF HELPER
     public ItemStack a(@Nullable IChatBaseComponent ichatbasecomponent) {
         NBTTagCompound nbttagcompound = this.a("display");
 
diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index 8494110025..2b5e94b944 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -3085,7 +3085,7 @@ public abstract class World implements IEntityAccess, GeneratorAccess, IIBlockAc
     }
 
     @Nullable
-    public BlockPosition a(String s, BlockPosition blockposition, int i, boolean flag) {
+    public BlockPosition findNearestStructure(String type, BlockPosition pos, int radius, boolean flag) { return a(type, pos, radius, flag); } public BlockPosition a(String s, BlockPosition blockposition, int i, boolean flag) { // EMC - OBF HELPER
         return null;
     }
 
-- 
2.20.1

