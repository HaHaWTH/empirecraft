From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: chickeneer <emcchickeneer@gmail.com>
Date: Sat, 25 Jan 2020 00:37:51 -0600
Subject: [PATCH] Register the Item field of the ender signal entity

This patches MC-169769. Without the fix, errors can
be thrown while converting these entities
---
 .../util/datafix/schemas/DataConverterSchemaV1460.java        | 2 +-
 .../util/datafix/schemas/DataConverterSchemaV705.java         | 4 ++--
 .../util/datafix/schemas/DataConverterSchemaV99.java          | 4 ++--
 3 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/src/main/java/net/minecraft/util/datafix/schemas/DataConverterSchemaV1460.java b/src/main/java/net/minecraft/util/datafix/schemas/DataConverterSchemaV1460.java
index 75e20cd33c18a7865d30671ca41050d8e352756b..f620566753bdd7639cf22c8dd4b262e8bd636cc9 100644
--- a/src/main/java/net/minecraft/util/datafix/schemas/DataConverterSchemaV1460.java
+++ b/src/main/java/net/minecraft/util/datafix/schemas/DataConverterSchemaV1460.java
@@ -63,7 +63,7 @@ public class DataConverterSchemaV1460 extends DataConverterSchemaNamed {
         schema.registerSimple(map, "minecraft:ender_pearl");
         schema.registerSimple(map, "minecraft:evocation_fangs");
         a(schema, map, "minecraft:evocation_illager");
-        schema.registerSimple(map, "minecraft:eye_of_ender_signal");
+        schema.register(map, "minecraft:eye_of_ender_signal", (s) -> DSL.optionalFields("Item", DataConverterTypes.ITEM_STACK.in(schema))); // EMC
         schema.register(map, "minecraft:falling_block", (s) -> {
             return DSL.optionalFields("BlockState", DataConverterTypes.BLOCK_STATE.in(schema), "TileEntityData", DataConverterTypes.BLOCK_ENTITY.in(schema));
         });
diff --git a/src/main/java/net/minecraft/util/datafix/schemas/DataConverterSchemaV705.java b/src/main/java/net/minecraft/util/datafix/schemas/DataConverterSchemaV705.java
index 532f30547411d01394146af18e39ef55170304c3..4b98e2ca1d684cdc6d039daba46f0375c14398b6 100644
--- a/src/main/java/net/minecraft/util/datafix/schemas/DataConverterSchemaV705.java
+++ b/src/main/java/net/minecraft/util/datafix/schemas/DataConverterSchemaV705.java
@@ -15,7 +15,7 @@ public class DataConverterSchemaV705 extends DataConverterSchemaNamed {
 
     protected static final HookFunction b = new HookFunction() {
         public <T> T apply(DynamicOps<T> dynamicops, T t0) {
-            return DataConverterSchemaV99.a(new Dynamic(dynamicops, t0), DataConverterSchemaV704.a, "minecraft:armor_stand");
+            return (T) DataConverterSchemaV99.a(new Dynamic(dynamicops, t0), DataConverterSchemaV704.a, "minecraft:armor_stand"); // EMC - decompile error
         }
     };
 
@@ -69,7 +69,7 @@ public class DataConverterSchemaV705 extends DataConverterSchemaNamed {
         });
         a(schema, map, "minecraft:endermite");
         b(schema, map, "minecraft:ender_pearl");
-        schema.registerSimple(map, "minecraft:eye_of_ender_signal");
+        schema.register(map, "minecraft:eye_of_ender_signal", (s) -> DSL.optionalFields("Item", DataConverterTypes.ITEM_STACK.in(schema))); // EMC
         schema.register(map, "minecraft:falling_block", (s) -> {
             return DSL.optionalFields("Block", DataConverterTypes.BLOCK_NAME.in(schema), "TileEntityData", DataConverterTypes.BLOCK_ENTITY.in(schema));
         });
diff --git a/src/main/java/net/minecraft/util/datafix/schemas/DataConverterSchemaV99.java b/src/main/java/net/minecraft/util/datafix/schemas/DataConverterSchemaV99.java
index 6f46e1c02e2be27f0d6c629249523604cb3df536..89e483385377004930e3360b27ff2b7fe9a0edac 100644
--- a/src/main/java/net/minecraft/util/datafix/schemas/DataConverterSchemaV99.java
+++ b/src/main/java/net/minecraft/util/datafix/schemas/DataConverterSchemaV99.java
@@ -56,7 +56,7 @@ public class DataConverterSchemaV99 extends Schema {
     });
     protected static final HookFunction a = new HookFunction() {
         public <T> T apply(DynamicOps<T> dynamicops, T t0) {
-            return DataConverterSchemaV99.a(new Dynamic(dynamicops, t0), DataConverterSchemaV99.c, "ArmorStand");
+            return (T) DataConverterSchemaV99.a(new Dynamic(dynamicops, t0), DataConverterSchemaV99.c, "ArmorStand"); // EMC - decompile error
         }
     };
 
@@ -115,7 +115,7 @@ public class DataConverterSchemaV99 extends Schema {
         b(schema, map, "Fireball");
         b(schema, map, "SmallFireball");
         b(schema, map, "ThrownEnderpearl");
-        schema.registerSimple(map, "EyeOfEnderSignal");
+        schema.register(map, "EyeOfEnderSignal", (s) -> DSL.optionalFields("Item", DataConverterTypes.ITEM_STACK.in(schema))); // EMC
         schema.register(map, "ThrownPotion", (s) -> {
             return DSL.optionalFields("inTile", DataConverterTypes.BLOCK_NAME.in(schema), "Potion", DataConverterTypes.ITEM_STACK.in(schema));
         });
