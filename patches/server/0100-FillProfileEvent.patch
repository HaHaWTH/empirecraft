From fb9860583c54f18d3ea41a47f02c0de7afa5ddf0 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Tue, 2 Jan 2018 00:31:26 -0500
Subject: [PATCH] FillProfileEvent

---
 .../profiles/WrappedMinecraftSessionService.java   | 66 ++++++++++++++++++++++
 .../java/net/minecraft/server/MinecraftServer.java |  2 +-
 2 files changed, 67 insertions(+), 1 deletion(-)
 create mode 100644 src/main/java/com/destroystokyo/paper/profiles/WrappedMinecraftSessionService.java

diff --git a/src/main/java/com/destroystokyo/paper/profiles/WrappedMinecraftSessionService.java b/src/main/java/com/destroystokyo/paper/profiles/WrappedMinecraftSessionService.java
new file mode 100644
index 0000000000..3d2f56e6b9
--- /dev/null
+++ b/src/main/java/com/destroystokyo/paper/profiles/WrappedMinecraftSessionService.java
@@ -0,0 +1,66 @@
+/*
+ * Copyright (c) 2018 Daniel Ennis (Aikar) MIT License
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining
+ *  a copy of this software and associated documentation files (the
+ *  "Software"), to deal in the Software without restriction, including
+ *  without limitation the rights to use, copy, modify, merge, publish,
+ *  distribute, sublicense, and/or sell copies of the Software, and to
+ *  permit persons to whom the Software is furnished to do so, subject to
+ *  the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be
+ *  included in all copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+ *  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+ *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+ *  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+ *  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+ *  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+ *  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.destroystokyo.paper.profiles;
+
+import com.destroystokyo.paper.event.profile.FillProfileEvent;
+import com.mojang.authlib.GameProfile;
+import com.mojang.authlib.exceptions.AuthenticationException;
+import com.mojang.authlib.exceptions.AuthenticationUnavailableException;
+import com.mojang.authlib.minecraft.MinecraftProfileTexture;
+import com.mojang.authlib.minecraft.MinecraftProfileTexture.Type;
+import com.mojang.authlib.minecraft.MinecraftSessionService;
+
+import java.net.InetAddress;
+import java.util.Map;
+
+public class WrappedMinecraftSessionService implements MinecraftSessionService {
+
+    private final MinecraftSessionService orig;
+
+    public WrappedMinecraftSessionService(MinecraftSessionService orig) {
+        this.orig = orig;
+    }
+
+    @Override
+    public void joinServer(GameProfile profile, String authenticationToken, String serverId) throws AuthenticationException {
+        orig.joinServer(profile, authenticationToken, serverId);
+    }
+
+    @Override
+    public GameProfile hasJoinedServer(GameProfile user, String serverId, InetAddress address) throws AuthenticationUnavailableException {
+        return orig.hasJoinedServer(user, serverId, address);
+    }
+
+    @Override
+    public Map<Type, MinecraftProfileTexture> getTextures(GameProfile profile, boolean requireSecure) {
+        return orig.getTextures(profile, requireSecure);
+    }
+
+    @Override
+    public GameProfile fillProfileProperties(GameProfile profile, boolean requireSecure) {
+        GameProfile gameProfile = orig.fillProfileProperties(profile, requireSecure);
+        new FillProfileEvent(gameProfile).callEvent();
+        return gameProfile;
+    }
+}
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 63a6dc8323..c7ae26a6bf 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -1032,7 +1032,7 @@ public abstract class MinecraftServer implements ICommandListener, Runnable, IAs
 
             String s1 = "."; // PAIL?
             YggdrasilAuthenticationService yggdrasilauthenticationservice = new YggdrasilAuthenticationService(Proxy.NO_PROXY, UUID.randomUUID().toString());
-            MinecraftSessionService minecraftsessionservice = yggdrasilauthenticationservice.createMinecraftSessionService();
+            MinecraftSessionService minecraftsessionservice = new com.destroystokyo.paper.profiles.WrappedMinecraftSessionService(yggdrasilauthenticationservice.createMinecraftSessionService()); // Paper
             GameProfileRepository gameprofilerepository = yggdrasilauthenticationservice.createProfileRepository();
             gameprofilerepository = com.destroystokyo.paper.event.profile.PreLookupProfileEvent.wrapProfileRepository(gameprofilerepository); // Paper
             UserCache usercache = new UserCache(gameprofilerepository, new File(s1, MinecraftServer.a.getName()));
-- 
2.15.1

