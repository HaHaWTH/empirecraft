From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Thu, 18 Dec 2014 22:48:46 -0500
Subject: [PATCH] Add BlockBreakNaturally Event

To give reliable control over all blocks dropping to world to restore custom item meta

diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index 0e0c1fff677a1781fca80b179d5a67c337d0d020..b2f30165292493ae0a98958c740e13a0b1bf85bb 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -1442,6 +1442,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
             if (entity instanceof net.minecraft.world.entity.item.ItemEntity itemEntity && itemEntity.getItem().isEmpty()) return false; // Paper - Prevent empty items from being added
             // Paper start - capture all item additions to the world
             if (captureDrops != null && entity instanceof net.minecraft.world.entity.item.ItemEntity) {
+                ((net.minecraft.world.entity.item.ItemEntity) entity).droppedPosition = new BlockPos(entity.getX(), entity.getY(), entity.getZ()); // EMC
                 captureDrops.add((net.minecraft.world.entity.item.ItemEntity) entity);
                 return true;
             }
diff --git a/src/main/java/net/minecraft/world/entity/item/ItemEntity.java b/src/main/java/net/minecraft/world/entity/item/ItemEntity.java
index c38862d6fb6ae59f9cdf7d717a809c76968eaa28..00c130348d62eca818f4726eda04bf5c6d761238 100644
--- a/src/main/java/net/minecraft/world/entity/item/ItemEntity.java
+++ b/src/main/java/net/minecraft/world/entity/item/ItemEntity.java
@@ -46,6 +46,7 @@ public class ItemEntity extends Entity {
     private static final int INFINITE_LIFETIME = -32768;
     public int age;
     public boolean canDespawn = true; // EMC
+    public BlockPos droppedPosition; // EMC
     public int pickupDelay;
     public int health;
     @Nullable
diff --git a/src/main/java/net/minecraft/world/level/block/Block.java b/src/main/java/net/minecraft/world/level/block/Block.java
index 224ce424b9a22548212ac157ec273c6dd80d6cfb..df44c2df4ceceb0a25721696d46901853399e44a 100644
--- a/src/main/java/net/minecraft/world/level/block/Block.java
+++ b/src/main/java/net/minecraft/world/level/block/Block.java
@@ -21,6 +21,7 @@ import net.minecraft.core.NonNullList;
 import net.minecraft.core.Registry;
 import net.minecraft.network.chat.Component;
 import net.minecraft.network.chat.MutableComponent;
+import net.minecraft.server.MCUtil;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.stats.Stats;
 import net.minecraft.tags.BlockTags;
@@ -371,7 +372,7 @@ public class Block extends BlockBehaviour implements ItemLike {
 
         Block.popResource(world, () -> {
             return new ItemEntity(world, d0, d1, d2, stack);
-        }, stack);
+        }, stack, pos);
     }
 
     public static void popResourceFromFace(Level world, BlockPos pos, Direction direction, ItemStack stack) {
@@ -391,18 +392,20 @@ public class Block extends BlockBehaviour implements ItemLike {
 
         Block.popResource(world, () -> {
             return new ItemEntity(world, d0, d1, d2, stack, d3, d4, d5);
-        }, stack);
+        }, stack, pos);
     }
 
-    private static void popResource(Level world, Supplier<ItemEntity> itemEntitySupplier, ItemStack stack) {
+    private static void popResource(Level world, Supplier<ItemEntity> itemEntitySupplier, ItemStack stack, BlockPos blockPos) { // EMC - add blockPos
         if (!world.isClientSide && !stack.isEmpty() && world.getGameRules().getBoolean(GameRules.RULE_DOBLOCKDROPS)) {
             ItemEntity entityitem = (ItemEntity) itemEntitySupplier.get();
 
             entityitem.setDefaultPickUpDelay();
             // CraftBukkit start
             if (world.captureDrops != null) {
+                entityitem.droppedPosition = blockPos.immutable(); // EMC
                 world.captureDrops.add(entityitem);
             } else {
+                new com.empireminecraft.customevents.BlockBreakNaturallyEvent(MCUtil.toLocation(world, blockPos), (org.bukkit.entity.Item) entityitem.getBukkitEntity()).callEvent(); // EMC
                 world.addFreshEntity(entityitem);
             }
             // CraftBukkit end
diff --git a/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java b/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java
index 9c921f6aa9a720f1931d7e297c6b83052d25f5fd..e37fc6237ba4bb2279dd43592d71870dd255767e 100644
--- a/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java
+++ b/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java
@@ -406,6 +406,16 @@ public class CraftEventFactory {
         Bukkit.getPluginManager().callEvent(event);
 
         if (!event.isCancelled()) {
+            // EMC start
+            com.google.common.collect.Multimap<org.bukkit.Location, org.bukkit.entity.Item> drops = com.google.common.collect.ArrayListMultimap.create();
+            for (Item item : list) {
+                ItemEntity entityItem = (ItemEntity) ((CraftEntity) item).getHandle();
+                drops.put(net.minecraft.server.MCUtil.toLocation(entityItem.level, entityItem.droppedPosition), (org.bukkit.entity.Item) entityItem.getBukkitEntity());
+            }
+            for (org.bukkit.Location location : drops.keySet()) {
+                new com.empireminecraft.customevents.BlockBreakNaturallyEvent(location, drops.get(location)).callEvent();
+            }
+            // EMC end
             // Paper start
             for (Item bukkit : list) {
                 if (!bukkit.isValid()) {
