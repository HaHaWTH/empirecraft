From 4328e75a4c68b44e879cf763c4ba627018572071 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Wed, 12 Mar 2014 23:10:04 -0400
Subject: [PATCH] LivingEntityArmorProtectEvent

To control if armor should protect entity, how much if so, and how much item damage to give.
---
 .../LivingEntityArmorProtectEvent.java             | 89 ++++++++++++++++++++++
 .../java/net/minecraft/server/EntityLiving.java    | 15 ++--
 2 files changed, 99 insertions(+), 5 deletions(-)
 create mode 100644 src/main/java/com/empireminecraft/customevents/LivingEntityArmorProtectEvent.java

diff --git a/src/main/java/com/empireminecraft/customevents/LivingEntityArmorProtectEvent.java b/src/main/java/com/empireminecraft/customevents/LivingEntityArmorProtectEvent.java
new file mode 100644
index 0000000..8605fa1
--- /dev/null
+++ b/src/main/java/com/empireminecraft/customevents/LivingEntityArmorProtectEvent.java
@@ -0,0 +1,89 @@
+package com.empireminecraft.customevents;
+
+import com.empireminecraft.cbmisc.CBMiscUtils;
+import net.minecraft.server.DamageSource;
+import net.minecraft.server.EntityLiving;
+import org.bukkit.entity.LivingEntity;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.entity.EntityDamageEvent;
+import org.bukkit.event.entity.EntityEvent;
+
+public class LivingEntityArmorProtectEvent extends EntityEvent implements Cancellable {
+
+
+    private static final HandlerList handlers = new HandlerList();
+    private final EntityDamageEvent.DamageCause cause;
+    private final LivingEntity entity;
+
+    private float itemDamage;
+    private int armorValue = 0;
+
+    private boolean cancelled = false;
+    private float armorProtectionPct;
+
+    public LivingEntityArmorProtectEvent(DamageSource source,
+                                         EntityLiving entity, float itemDamage, int armorValue) {
+
+        super(entity.getBukkitEntity());
+        this.itemDamage = itemDamage;
+        cause = CBMiscUtils.getCause(source);
+        this.entity = (LivingEntity) entity.getBukkitEntity();
+        setArmorValue(armorValue);
+    }
+    public int getArmorValue() {
+        return armorValue;
+    }
+
+    public void setArmorValue(int armorValue) {
+        this.armorValue = armorValue;
+        armorProtectionPct = (float) (getMaxArmorValue() - armorValue) / (float) getMaxArmorValue();
+    }
+
+    public int getMaxArmorValue() {
+        return 25;
+    }
+
+    public float getArmorProtectionPct() {
+        return armorProtectionPct;
+    }
+
+    public void setArmorProtectionPct(float armorProtectionPct) {
+        this.armorProtectionPct = armorProtectionPct;
+    }
+
+    public float getItemDamage() {
+        return itemDamage;
+    }
+
+    public void setItemDamage(float itemDamage) {
+        this.itemDamage = itemDamage;
+    }
+
+    public EntityDamageEvent.DamageCause getCause() {
+        return cause;
+    }
+
+    public LivingEntity getEntity() {
+        return entity;
+    }
+
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+
+    @Override
+    public boolean isCancelled() {
+        return cancelled;
+    }
+
+    @Override
+    public void setCancelled(boolean cancel) {
+        cancelled = cancel;
+    }
+
+}
diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java
index eba8aa8..3b07620 100644
--- a/src/main/java/net/minecraft/server/EntityLiving.java
+++ b/src/main/java/net/minecraft/server/EntityLiving.java
@@ -9,6 +9,7 @@ import java.util.UUID;
 
 // CraftBukkit start
 import java.util.ArrayList;
+import com.empireminecraft.customevents.LivingEntityArmorProtectEvent; // EMC
 import com.empireminecraft.customevents.LivingEntityReceiveDamageEvent; // EMC
 import org.bukkit.craftbukkit.SpigotTimings;
 import org.bukkit.craftbukkit.event.CraftEventFactory;
@@ -933,11 +934,15 @@ public abstract class EntityLiving extends Entity {
 
     protected float b(DamageSource damagesource, float f) {
         if (!damagesource.ignoresArmor()) {
-            int i = 25 - this.aU();
-            float f1 = f * (float) i;
-
-            this.h(f);
-            f = f1 / 25.0F;
+            // EMC start - implement own logic.
+            // this.aV(); = Armor Value - 2 above this method
+            LivingEntityArmorProtectEvent event = new LivingEntityArmorProtectEvent(damagesource, this, f, this.aU());
+            if (!event.callEvent()) {
+                return f;
+            }
+            f *= event.getArmorProtectionPct();
+            this.h(event.getItemDamage());
+            // EMC end
         }
 
         return f;
-- 
1.9.1

