From 462e932905cb551b53e7e8f3d14120b1798953a5 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sat, 22 Dec 2012 00:35:15 -0500
Subject: [PATCH] PlayerUseItem Event#
 This lets us control when an item is
 consumed and change the item.

---
 .../minecraft/server/PlayerInteractManager.java    | 32 ++++++++++++-
 .../bukkit/event/inventory/PlayerUseItemEvent.java | 52 ++++++++++++++++++++++
 2 files changed, 82 insertions(+), 2 deletions(-)
 create mode 100644 src/main/java/org/bukkit/event/inventory/PlayerUseItemEvent.java

diff --git a/src/main/java/net/minecraft/server/PlayerInteractManager.java b/src/main/java/net/minecraft/server/PlayerInteractManager.java
index 8dc94d4..ad5ed7a 100644
--- a/src/main/java/net/minecraft/server/PlayerInteractManager.java
+++ b/src/main/java/net/minecraft/server/PlayerInteractManager.java
@@ -1,10 +1,14 @@
 package net.minecraft.server;
 
 // CraftBukkit start
+import org.bukkit.Bukkit;
+import org.bukkit.craftbukkit.entity.CraftPlayer;
 import org.bukkit.event.block.BlockBreakEvent;
 import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
 import org.bukkit.event.Event;
 import org.bukkit.event.block.Action;
+import org.bukkit.event.inventory.PlayerUseItemEvent;
 import org.bukkit.event.player.PlayerInteractEvent;
 // CraftBukkit end
 
@@ -345,6 +349,17 @@ public class PlayerInteractManager {
     }
 
     public boolean useItem(EntityHuman entityhuman, World world, ItemStack itemstack) {
+        // EMC Start - Allow control over if item should be consumed or not.
+        CraftItemStack craftitem = CraftItemStack.asCraftMirror(itemstack);
+        PlayerUseItemEvent event = new PlayerUseItemEvent((CraftPlayer)entityhuman.bukkitEntity, craftitem);
+        Bukkit.getPluginManager().callEvent(event);
+        if (event.isCancelled()) {
+            return false;
+        }
+        if (!craftitem.equals(event.getItem())) {
+            itemstack = CraftItemStack.asNMSCopy(event.getItem());
+        }
+        // EMC end
         int i = itemstack.count;
         int j = itemstack.getData();
         ItemStack itemstack1 = itemstack.a(world, entityhuman);
@@ -353,7 +368,8 @@ public class PlayerInteractManager {
             return false;
         } else {
             entityhuman.inventory.items[entityhuman.inventory.itemInHandIndex] = itemstack1;
-            if (this.isCreative()) {
+            // EMC - Add getConsumeItem check
+            if (!event.getConsumeItem() || this.isCreative()) {
                 itemstack1.count = i;
                 if (itemstack1.f()) {
                     itemstack1.setData(j);
@@ -391,13 +407,25 @@ public class PlayerInteractManager {
             }
 
             if (itemstack != null && !result) {
+                // EMC Start - Allow control over if item should be consumed or not.
+                CraftItemStack craftitem = CraftItemStack.asCraftMirror(itemstack);
+                PlayerUseItemEvent eventUse = new PlayerUseItemEvent((CraftPlayer)entityhuman.bukkitEntity, craftitem);
+                Bukkit.getPluginManager().callEvent(eventUse);
+                if (eventUse.isCancelled()) {
+                    return false;
+                }
+                if (!craftitem.equals(eventUse.getItem())) {
+                    itemstack = CraftItemStack.asNMSCopy(eventUse.getItem());
+                }
+                // EMC end
                 int j1 = itemstack.getData();
                 int k1 = itemstack.count;
 
                 result = itemstack.placeItem(entityhuman, world, i, j, k, l, f, f1, f2);
 
                 // The item count should not decrement in Creative mode.
-                if (this.isCreative()) {
+                // EMC - add getConsumeItem()
+                if (!eventUse.getConsumeItem() || this.isCreative()) { 
                     itemstack.setData(j1);
                     itemstack.count = k1;
                 }
diff --git a/src/main/java/org/bukkit/event/inventory/PlayerUseItemEvent.java b/src/main/java/org/bukkit/event/inventory/PlayerUseItemEvent.java
new file mode 100644
index 0000000..d16a0f7
--- /dev/null
+++ b/src/main/java/org/bukkit/event/inventory/PlayerUseItemEvent.java
@@ -0,0 +1,52 @@
+package org.bukkit.event.inventory;
+
+import org.bukkit.entity.Player;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.Event;
+import org.bukkit.event.HandlerList;
+import org.bukkit.inventory.ItemStack;
+
+public class PlayerUseItemEvent extends Event implements Cancellable {
+    private static final HandlerList handlers = new HandlerList();
+    private boolean canceled;
+    Player player;
+    ItemStack item;
+    boolean consume = true;
+    public PlayerUseItemEvent(Player player, ItemStack item) {        
+        this.player = player;
+        this.item = item;
+    }
+
+    public Player getPlayer() {
+        return this.player;
+    }
+
+    public ItemStack getItem() {
+        return this.item;
+    }
+    public void setItem(ItemStack item) {
+        this.item = item;
+    }
+    public boolean getConsumeItem() {
+        return this.consume;
+    }
+    
+    public void setConsumeItem(boolean consume) {
+        this.consume = consume;
+    }
+    public boolean isCancelled() {
+        return canceled;
+    }
+
+    public void setCancelled(boolean cancel) {
+        canceled = cancel;
+    }
+
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+}
-- 
1.8.1.1

