From 0b2dac6be4f2da22252a9413fc984386f1469cea Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Thu, 13 Nov 2014 22:09:12 -0500
Subject: [PATCH] Remove unnecessary WorldAccess iteration

---
 src/main/java/net/minecraft/server/World.java | 71 +++++++--------------------
 1 file changed, 18 insertions(+), 53 deletions(-)

diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index 73632c4..94d00bc 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -52,7 +52,7 @@ public abstract class World implements IBlockAccess {
     public EnumDifficulty difficulty;
     public Random random = new Random();
     public WorldProvider worldProvider; // CraftBukkit - remove final
-    protected List u = new ArrayList();
+    protected IWorldAccess worldAccess; // EMC
     public IChunkProvider chunkProvider; // CraftBukkit - public
     protected final IDataManager dataManager;
     public WorldData worldData; // CraftBukkit - public
@@ -563,9 +563,7 @@ public abstract class World implements IBlockAccess {
     }
 
     public void notify(int i, int j, int k) {
-        for (int l = 0; l < this.u.size(); ++l) {
-            ((IWorldAccess) this.u.get(l)).a(i, j, k);
-        }
+        this.worldAccess.a(i, j, k); // EMC
     }
 
     public void update(int i, int j, int k, Block block) {
@@ -596,9 +594,7 @@ public abstract class World implements IBlockAccess {
     }
 
     public void c(int i, int j, int k, int l, int i1, int j1) {
-        for (int k1 = 0; k1 < this.u.size(); ++k1) {
-            ((IWorldAccess) this.u.get(k1)).a(i, j, k, l, i1, j1);
-        }
+        this.worldAccess.a(i, j, k, l, i1, j1); // EMC
     }
 
     public void applyPhysics(int i, int j, int k, Block block) {
@@ -807,9 +803,7 @@ public abstract class World implements IBlockAccess {
 
                         chunk.a(enumskyblock, i & 15, j, k & 15, l);
 
-                        for (int i1 = 0; i1 < this.u.size(); ++i1) {
-                            ((IWorldAccess) this.u.get(i1)).b(i, j, k);
-                        }
+                        this.worldAccess.b(i, j, k); // EMC
                     }
                 }
             }
@@ -817,9 +811,7 @@ public abstract class World implements IBlockAccess {
     }
 
     public void m(int i, int j, int k) {
-        for (int l = 0; l < this.u.size(); ++l) {
-            ((IWorldAccess) this.u.get(l)).b(i, j, k);
-        }
+        this.worldAccess.b(i, j, k); // EMC
     }
 
     public float n(int i, int j, int k) {
@@ -1002,35 +994,26 @@ public abstract class World implements IBlockAccess {
     }
 
     public void makeSound(Entity entity, String s, float f, float f1) {
-        for (int i = 0; i < this.u.size(); ++i) {
-            ((IWorldAccess) this.u.get(i)).a(s, entity.locX, entity.locY - (double) entity.height, entity.locZ, f, f1);
-        }
+        this.worldAccess.a(s, entity.locX, entity.locY - (double) entity.height, entity.locZ, f, f1); // EMC
     }
 
     public void a(EntityHuman entityhuman, String s, float f, float f1) {
-        for (int i = 0; i < this.u.size(); ++i) {
-            ((IWorldAccess) this.u.get(i)).a(entityhuman, s, entityhuman.locX, entityhuman.locY - (double) entityhuman.height, entityhuman.locZ, f, f1);
-        }
+        this.worldAccess.a(entityhuman, s, entityhuman.locX, entityhuman.locY - (double) entityhuman.height, entityhuman.locZ, f,
+            f1); // EMC
     }
 
     public void makeSound(double d0, double d1, double d2, String s, float f, float f1) {
-        for (int i = 0; i < this.u.size(); ++i) {
-            ((IWorldAccess) this.u.get(i)).a(s, d0, d1, d2, f, f1);
-        }
+        this.worldAccess.a(s, d0, d1, d2, f, f1); // EMC
     }
 
     public void a(double d0, double d1, double d2, String s, float f, float f1, boolean flag) {}
 
     public void a(String s, int i, int j, int k) {
-        for (int l = 0; l < this.u.size(); ++l) {
-            ((IWorldAccess) this.u.get(l)).a(s, i, j, k);
-        }
+        this.worldAccess.a(s, i, j, k); // EMC
     }
 
     public void addParticle(String s, double d0, double d1, double d2, double d3, double d4, double d5) {
-        for (int i = 0; i < this.u.size(); ++i) {
-            ((IWorldAccess) this.u.get(i)).a(s, d0, d1, d2, d3, d4, d5);
-        }
+        this.worldAccess.a(s, d0, d1, d2, d3, d4, d5); // EMC
     }
 
     public boolean strikeLightning(Entity entity) {
@@ -1120,18 +1103,14 @@ public abstract class World implements IBlockAccess {
     }
 
     protected void a(Entity entity) {
-        for (int i = 0; i < this.u.size(); ++i) {
-            ((IWorldAccess) this.u.get(i)).a(entity);
-        }
+        this.worldAccess.a(entity); // EMC
 
         entity.valid = true; // CraftBukkit
         new com.empireminecraft.customevents.EntityEvents.EntitySpawnEvent(entity.bukkitEntity).callEvent(); // EMC
     }
 
     protected void b(Entity entity) {
-        for (int i = 0; i < this.u.size(); ++i) {
-            ((IWorldAccess) this.u.get(i)).b(entity);
-        }
+        this.worldAccess.b(entity); // EMC
 
         new com.empireminecraft.customevents.EntityEvents.EntityDespawnEvent(entity.bukkitEntity).callEvent(); // EMC
         entity.valid = false; // CraftBukkit
@@ -1202,7 +1181,7 @@ public abstract class World implements IBlockAccess {
     }
 
     public void addIWorldAccess(IWorldAccess iworldaccess) {
-        this.u.add(iworldaccess);
+        this.worldAccess = iworldaccess; // EMC
     }
 
     public List getCubes(Entity entity, AxisAlignedBB axisalignedbb) {
@@ -2972,9 +2951,7 @@ public abstract class World implements IBlockAccess {
     }
 
     public void b(int i, int j, int k, int l, int i1) {
-        for (int j1 = 0; j1 < this.u.size(); ++j1) {
-            ((IWorldAccess) this.u.get(j1)).a(i, j, k, l, i1);
-        }
+        this.worldAccess.a(i, j, k, l, i1); // EMC
     }
 
     public void triggerEffect(int i, int j, int k, int l, int i1) {
@@ -2983,9 +2960,7 @@ public abstract class World implements IBlockAccess {
 
     public void a(EntityHuman entityhuman, int i, int j, int k, int l, int i1) {
         try {
-            for (int j1 = 0; j1 < this.u.size(); ++j1) {
-                ((IWorldAccess) this.u.get(j1)).a(entityhuman, i, j, k, l, i1);
-            }
+            this.worldAccess.a(entityhuman, i, j, k, l, i1); // EMC
         } catch (Throwable throwable) {
             CrashReport crashreport = CrashReport.a(throwable, "Playing level event");
             CrashReportSystemDetails crashreportsystemdetails = crashreport.a("Level event being played");
@@ -3034,11 +3009,7 @@ public abstract class World implements IBlockAccess {
     }
 
     public void d(int i, int j, int k, int l, int i1) {
-        for (int j1 = 0; j1 < this.u.size(); ++j1) {
-            IWorldAccess iworldaccess = (IWorldAccess) this.u.get(j1);
-
-            iworldaccess.b(i, j, k, l, i1);
-        }
+        this.worldAccess.b(i, j, k, l, i1); // EMC
     }
 
     public Calendar V() {
@@ -3096,12 +3067,6 @@ public abstract class World implements IBlockAccess {
     }
 
     public void X() {
-        Iterator iterator = this.u.iterator();
-
-        while (iterator.hasNext()) {
-            IWorldAccess iworldaccess = (IWorldAccess) iterator.next();
-
-            iworldaccess.b();
-        }
+        this.worldAccess.b(); // EMC
     }
 }
-- 
1.9.1

