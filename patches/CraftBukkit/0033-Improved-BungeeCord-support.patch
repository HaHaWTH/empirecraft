From e5616c9e7fa5270a6bdd6e8810f9b7f941c85f94 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Mon, 9 Dec 2013 23:21:21 -0500
Subject: [PATCH] Improved BungeeCord support

Secure BungeeCord with IP Whitelist for IP/UUID forwarding
Allow online-mode to be set to true, and skip online-mode for bungee IP's
---
 src/main/java/net/minecraft/server/HandshakeListener.java      | 5 ++++-
 src/main/java/net/minecraft/server/LoginListener.java          | 6 ++++++
 src/main/java/net/minecraft/server/NetworkManager.java         | 1 +
 src/main/java/net/minecraft/server/ThreadPlayerLookupUUID.java | 2 +-
 src/main/java/org/spigotmc/SpigotConfig.java                   | 3 +++
 5 files changed, 15 insertions(+), 2 deletions(-)

diff --git a/src/main/java/net/minecraft/server/HandshakeListener.java b/src/main/java/net/minecraft/server/HandshakeListener.java
index 7566110..a84c8dc 100644
--- a/src/main/java/net/minecraft/server/HandshakeListener.java
+++ b/src/main/java/net/minecraft/server/HandshakeListener.java
@@ -83,7 +83,10 @@ public class HandshakeListener implements PacketHandshakingInListener {
             } else {
                 this.b.a((PacketListener) (new LoginListener(this.a, this.b)));
                 // Spigot Start
-                if (org.spigotmc.SpigotConfig.bungee) {
+                String ip = ((java.net.InetSocketAddress) this.b.getSocketAddress()).getAddress().getHostAddress();
+                if (org.spigotmc.SpigotConfig.bungee &&
+                    org.spigotmc.SpigotConfig.bungeeAddresses.contains(ip)) {
+                    b.isProxied = true;
                     String[] split = packethandshakinginsetprotocol.b.split("\00");
                     if ( split.length == 3 || split.length == 4 ) {
                         packethandshakinginsetprotocol.b = split[0];
diff --git a/src/main/java/net/minecraft/server/LoginListener.java b/src/main/java/net/minecraft/server/LoginListener.java
index bd254de..8c9abdb 100644
--- a/src/main/java/net/minecraft/server/LoginListener.java
+++ b/src/main/java/net/minecraft/server/LoginListener.java
@@ -136,6 +136,12 @@ public class LoginListener implements PacketLoginInListener {
     public void a(PacketLoginInStart packetlogininstart) {
         Validate.validState(this.g == EnumProtocolState.HELLO, "Unexpected hello packet", new Object[0]);
         this.i = packetlogininstart.c();
+        // Spigot start - handle Bungee
+        if (this.networkManager.isProxied && !this.networkManager.c()) {
+            new ThreadPlayerLookupUUID(this, "User Authenticator #" + b.incrementAndGet()).start();
+            return;
+        }
+        // Spigot end
         if (this.server.getOnlineMode() && !this.networkManager.c()) {
             this.g = EnumProtocolState.KEY;
             this.networkManager.handle(new PacketLoginOutEncryptionBegin(this.j, this.server.K().getPublic(), this.e), new GenericFutureListener[0]);
diff --git a/src/main/java/net/minecraft/server/NetworkManager.java b/src/main/java/net/minecraft/server/NetworkManager.java
index 0cae021..068f82f 100644
--- a/src/main/java/net/minecraft/server/NetworkManager.java
+++ b/src/main/java/net/minecraft/server/NetworkManager.java
@@ -48,6 +48,7 @@ public class NetworkManager extends SimpleChannelInboundHandler {
     public java.util.UUID spoofedUUID;
     public Property[] spoofedProfile;
     public boolean preparing = true;
+    public boolean isProxied = false;
     // Spigot End
     private PacketListener o;
     private EnumProtocol p;
diff --git a/src/main/java/net/minecraft/server/ThreadPlayerLookupUUID.java b/src/main/java/net/minecraft/server/ThreadPlayerLookupUUID.java
index 1b2620c..5086861 100644
--- a/src/main/java/net/minecraft/server/ThreadPlayerLookupUUID.java
+++ b/src/main/java/net/minecraft/server/ThreadPlayerLookupUUID.java
@@ -26,7 +26,7 @@ class ThreadPlayerLookupUUID extends Thread {
 
         try {
             // Spigot Start
-            if ( !LoginListener.c( this.a ).getOnlineMode() )
+            if ( a.networkManager.isProxied || !LoginListener.c( this.a ).getOnlineMode() )
             {
                 a.initUUID();
                 fireLoginEvents();
diff --git a/src/main/java/org/spigotmc/SpigotConfig.java b/src/main/java/org/spigotmc/SpigotConfig.java
index f407eb8..87017b4 100644
--- a/src/main/java/org/spigotmc/SpigotConfig.java
+++ b/src/main/java/org/spigotmc/SpigotConfig.java
@@ -8,6 +8,7 @@ import java.lang.reflect.Method;
 import java.lang.reflect.Modifier;
 import java.net.URL;
 import java.util.Arrays;
+import java.util.Collections;
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.List;
@@ -223,6 +224,7 @@ public class SpigotConfig
     }
 
     public static boolean bungee;
+    public static List<String> bungeeAddresses = Collections.singletonList("127.0.0.1");
     private static void bungee() {
         if ( version < 4 )
         {
@@ -230,6 +232,7 @@ public class SpigotConfig
             System.out.println( "Oudated config, disabling BungeeCord support!" );
         }
         bungee = getBoolean( "settings.bungeecord", false );
+        bungeeAddresses = getList("settings.bungeecord-addresses", bungeeAddresses);
     }
 
     private static void nettyThreads()
-- 
1.9.1

