From 134b41c52a1700e6e8e40042a999d37188aaaffb Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Mon, 15 Sep 2014 21:36:25 -0400
Subject: [PATCH] Limit damage of EntityPlayer memory leaks

If a plugin leaks EntityPlayer references by storing Player objects and never cleaning them up,
then the server will leak a ton of memory by buffering up packets into the outgoing queue that will
never be processed. These packets themselves then hold on to lots of other references, causing massive leaks.

This change does not prevent plugins from leaking EntityPlayer references, but will drastically reduce the impact
of the bug to the level one would expect of a Minecraft Server of memory leaks anyways.
---
 src/main/java/net/minecraft/server/NetworkManager.java   | 4 +++-
 src/main/java/net/minecraft/server/PlayerConnection.java | 4 +++-
 2 files changed, 6 insertions(+), 2 deletions(-)

diff --git a/src/main/java/net/minecraft/server/NetworkManager.java b/src/main/java/net/minecraft/server/NetworkManager.java
index 4506494..f7d55c7 100644
--- a/src/main/java/net/minecraft/server/NetworkManager.java
+++ b/src/main/java/net/minecraft/server/NetworkManager.java
@@ -42,6 +42,8 @@ public class NetworkManager extends SimpleChannelInboundHandler {
     private final boolean j;
     private final Queue k = Queues.newConcurrentLinkedQueue();
     private final Queue l = Queues.newConcurrentLinkedQueue();
+    public void clearQueues() { k.clear(); l.clear(); } // Spigot
+    EntityPlayer player; // Spigot
     private Channel m;
     // Spigot Start
     public SocketAddress n;
@@ -128,7 +130,7 @@ public class NetworkManager extends SimpleChannelInboundHandler {
         if (this.m != null && this.m.isOpen()) {
             this.i();
             this.b(packet, agenericfuturelistener);
-        } else {
+        } else if (player != null && !player.playerConnection.processedDisconnect) { // Spigot
             this.l.add(new QueuedPacket(packet, agenericfuturelistener));
         }
     }
diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index dec3162..9567862 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -79,10 +79,11 @@ public class PlayerConnection implements PacketPlayInListener {
     private double z;
     private double q;
     public boolean checkMovement = true; // CraftBukkit - private -> public
-    private boolean processedDisconnect; // CraftBukkit - added
+    public boolean processedDisconnect; // CraftBukkit - added // Spigot - private -> public
     public boolean is18; // EMC
 
     public PlayerConnection(MinecraftServer minecraftserver, NetworkManager networkmanager, EntityPlayer entityplayer) {
+        networkmanager.player = entityplayer; // Spigot
         this.minecraftServer = minecraftserver;
         this.networkManager = networkmanager;
         networkmanager.a((PacketListener) this);
@@ -744,6 +745,7 @@ public class PlayerConnection implements PacketPlayInListener {
         if ((quitMessage != null) && (quitMessage.length() > 0)) {
             this.minecraftServer.getPlayerList().sendMessage(CraftChatMessage.fromString(quitMessage));
         }
+        this.player.playerConnection.networkManager.clearQueues(); // Spigot
         // CraftBukkit end
         if (this.minecraftServer.N() && this.player.getName().equals(this.minecraftServer.M())) {
             c.info("Stopping singleplayer server as player logged out");
-- 
1.9.1

