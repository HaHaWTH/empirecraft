From 4361a4aa5ba8e5b2ecae7b2da75c7d88c5b001e0 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Thu, 22 Nov 2012 21:30:59 -0500
Subject: [PATCH] Misc EMC Changes

Only spawn 1 ocelot ever from eggs.
Load custom permissions before plugins
Proper colors in console
Unload plugins after everything else
Dragon eggs break all blocks
Fix boat wood gen exploit
Remove CraftBukkit "Feature" of ItemStack's having infinite use if less than 0 stack size.
---
 src/main/java/net/minecraft/server/EntityBoat.java |  1 +
 .../java/net/minecraft/server/EntityOcelot.java    |  2 +-
 src/main/java/net/minecraft/server/ItemStack.java  |  2 +-
 .../java/net/minecraft/server/MinecraftServer.java | 12 ++++----
 .../net/minecraft/server/PlayerConnection.java     |  2 +-
 .../minecraft/server/PlayerInteractManager.java    |  2 +-
 .../java/net/minecraft/server/PlayerInventory.java |  1 +
 .../java/org/bukkit/craftbukkit/CraftServer.java   |  3 +-
 .../craftbukkit/command/ColouredConsoleSender.java | 32 +++++++++++-----------
 9 files changed, 31 insertions(+), 26 deletions(-)

diff --git a/src/main/java/net/minecraft/server/EntityBoat.java b/src/main/java/net/minecraft/server/EntityBoat.java
index 8fce559..388df14 100644
--- a/src/main/java/net/minecraft/server/EntityBoat.java
+++ b/src/main/java/net/minecraft/server/EntityBoat.java
@@ -146,6 +146,7 @@ public class EntityBoat extends Entity {
     }
 
     public void j_() {
+        if (this.dead) return; // EMC - Fix wood generator exploit
         // CraftBukkit start
         double prevX = this.locX;
         double prevY = this.locY;
diff --git a/src/main/java/net/minecraft/server/EntityOcelot.java b/src/main/java/net/minecraft/server/EntityOcelot.java
index 68b08ae..e04c69e 100644
--- a/src/main/java/net/minecraft/server/EntityOcelot.java
+++ b/src/main/java/net/minecraft/server/EntityOcelot.java
@@ -213,7 +213,7 @@ public class EntityOcelot extends EntityTameableAnimal {
     }
 
     public void bG() {
-        if (this.world.random.nextInt(7) == 0) {
+        if (false && this.world.random.nextInt(7) == 0) { // EMC - One Ocelot only...
             for (int i = 0; i < 2; ++i) {
                 EntityOcelot entityocelot = new EntityOcelot(this.world);
 
diff --git a/src/main/java/net/minecraft/server/ItemStack.java b/src/main/java/net/minecraft/server/ItemStack.java
index 8f0a5ad..38c5664 100644
--- a/src/main/java/net/minecraft/server/ItemStack.java
+++ b/src/main/java/net/minecraft/server/ItemStack.java
@@ -212,7 +212,7 @@ public final class ItemStack {
     }
 
     public boolean b(Block block) {
-        return Item.byId[this.id].canDestroySpecialBlock(block);
+        return Item.byId[this.id].canDestroySpecialBlock(block) || this.id == Block.DRAGON_EGG.id; // EMC - Dragon eggs break all blocks.
     }
 
     public boolean a(EntityLiving entityliving) {
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 99a6cf4..c9b51ce 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -352,11 +352,6 @@ public abstract class MinecraftServer implements ICommandListener, Runnable, IMo
     public void stop() throws ExceptionWorldConflict { // CraftBukkit - added throws
         if (!this.O) {
             log.info("Stopping server");
-            // CraftBukkit start
-            if (this.server != null) {
-                this.server.disablePlugins();
-            }
-            // CraftBukkit end
 
             if (this.ae() != null) {
                 this.ae().a();
@@ -378,6 +373,13 @@ public abstract class MinecraftServer implements ICommandListener, Runnable, IMo
                 worldserver.saveLevel();
             }
             // CraftBukkit end */
+
+            // CraftBukkit start
+            if (this.server != null) {
+                this.server.disablePlugins();
+            }
+            // CraftBukkit end
+
             if (this.n != null && this.n.d()) {
                 this.n.e();
             }
diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index 7ca0acf..0aabc64 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -692,7 +692,7 @@ public class PlayerConnection extends Connection {
         }
 
         itemstack = this.player.inventory.getItemInHand();
-        if (itemstack != null && itemstack.count == 0) {
+        if (itemstack != null && itemstack.count <= 0) { // CraftBukkit - Handle infinite use item bug.
             this.player.inventory.items[this.player.inventory.itemInHandIndex] = null;
             itemstack = null;
         }
diff --git a/src/main/java/net/minecraft/server/PlayerInteractManager.java b/src/main/java/net/minecraft/server/PlayerInteractManager.java
index 55f9ffa..8dc94d4 100644
--- a/src/main/java/net/minecraft/server/PlayerInteractManager.java
+++ b/src/main/java/net/minecraft/server/PlayerInteractManager.java
@@ -360,7 +360,7 @@ public class PlayerInteractManager {
                 }
             }
 
-            if (itemstack1.count == 0) {
+            if (itemstack1.count <= 0) { // CraftBukkit - Handle infinite use item bug.
                 entityhuman.inventory.items[entityhuman.inventory.itemInHandIndex] = null;
             }
 
diff --git a/src/main/java/net/minecraft/server/PlayerInventory.java b/src/main/java/net/minecraft/server/PlayerInventory.java
index f40b1e9..a694e82 100644
--- a/src/main/java/net/minecraft/server/PlayerInventory.java
+++ b/src/main/java/net/minecraft/server/PlayerInventory.java
@@ -306,6 +306,7 @@ public class PlayerInventory implements IInventory {
         float f = 1.0F;
 
         if (this.items[this.itemInHandIndex] != null) {
+            if (this.items[this.itemInHandIndex].id == Block.DRAGON_EGG.id) { return 15.0F;} // EMC - Dragon eggs break all blocks.
             f *= this.items[this.itemInHandIndex].a(block);
         }
 
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index ef52f32..f24af82 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -281,6 +281,7 @@ public final class CraftServer implements Server {
         if (type == PluginLoadOrder.STARTUP) {
             helpMap.clear();
             helpMap.initializeGeneralTopics();
+            loadCustomPermissions(); // EMC - Plugins should have access to this
         }
 
         Plugin[] plugins = pluginManager.getPlugins();
@@ -293,7 +294,7 @@ public final class CraftServer implements Server {
 
         if (type == PluginLoadOrder.POSTWORLD) {
             commandMap.registerServerAliases();
-            loadCustomPermissions();
+            // loadCustomPermissions(); // EMC - Moving up
             DefaultPermissions.registerCorePermissions();
             helpMap.initializeCommands();
         }
diff --git a/src/main/java/org/bukkit/craftbukkit/command/ColouredConsoleSender.java b/src/main/java/org/bukkit/craftbukkit/command/ColouredConsoleSender.java
index c86253c..da8487f 100644
--- a/src/main/java/org/bukkit/craftbukkit/command/ColouredConsoleSender.java
+++ b/src/main/java/org/bukkit/craftbukkit/command/ColouredConsoleSender.java
@@ -22,22 +22,22 @@ public class ColouredConsoleSender extends CraftConsoleCommandSender {
         this.reader = ((CraftServer) getServer()).getReader();
         this.terminal = reader.getTerminal();
 
-        replacements.put(ChatColor.BLACK, Ansi.ansi().fg(Ansi.Color.BLACK).boldOff().toString());
-        replacements.put(ChatColor.DARK_BLUE, Ansi.ansi().fg(Ansi.Color.BLUE).boldOff().toString());
-        replacements.put(ChatColor.DARK_GREEN, Ansi.ansi().fg(Ansi.Color.GREEN).boldOff().toString());
-        replacements.put(ChatColor.DARK_AQUA, Ansi.ansi().fg(Ansi.Color.CYAN).boldOff().toString());
-        replacements.put(ChatColor.DARK_RED, Ansi.ansi().fg(Ansi.Color.RED).boldOff().toString());
-        replacements.put(ChatColor.DARK_PURPLE, Ansi.ansi().fg(Ansi.Color.MAGENTA).boldOff().toString());
-        replacements.put(ChatColor.GOLD, Ansi.ansi().fg(Ansi.Color.YELLOW).boldOff().toString());
-        replacements.put(ChatColor.GRAY, Ansi.ansi().fg(Ansi.Color.WHITE).boldOff().toString());
-        replacements.put(ChatColor.DARK_GRAY, Ansi.ansi().fg(Ansi.Color.BLACK).bold().toString());
-        replacements.put(ChatColor.BLUE, Ansi.ansi().fg(Ansi.Color.BLUE).bold().toString());
-        replacements.put(ChatColor.GREEN, Ansi.ansi().fg(Ansi.Color.GREEN).bold().toString());
-        replacements.put(ChatColor.AQUA, Ansi.ansi().fg(Ansi.Color.CYAN).bold().toString());
-        replacements.put(ChatColor.RED, Ansi.ansi().fg(Ansi.Color.RED).bold().toString());
-        replacements.put(ChatColor.LIGHT_PURPLE, Ansi.ansi().fg(Ansi.Color.MAGENTA).bold().toString());
-        replacements.put(ChatColor.YELLOW, Ansi.ansi().fg(Ansi.Color.YELLOW).bold().toString());
-        replacements.put(ChatColor.WHITE, Ansi.ansi().fg(Ansi.Color.WHITE).bold().toString());
+        replacements.put(ChatColor.BLACK, Ansi.ansi().a(Attribute.RESET).fg(Ansi.Color.BLACK).boldOff().toString());
+        replacements.put(ChatColor.DARK_BLUE, Ansi.ansi().a(Attribute.RESET).fg(Ansi.Color.BLUE).boldOff().toString());
+        replacements.put(ChatColor.DARK_GREEN, Ansi.ansi().a(Attribute.RESET).fg(Ansi.Color.GREEN).boldOff().toString());
+        replacements.put(ChatColor.DARK_AQUA, Ansi.ansi().a(Attribute.RESET).fg(Ansi.Color.CYAN).boldOff().toString());
+        replacements.put(ChatColor.DARK_RED, Ansi.ansi().a(Attribute.RESET).fg(Ansi.Color.RED).boldOff().toString());
+        replacements.put(ChatColor.DARK_PURPLE, Ansi.ansi().a(Attribute.RESET).fg(Ansi.Color.MAGENTA).boldOff().toString());
+        replacements.put(ChatColor.GOLD, Ansi.ansi().a(Attribute.RESET).fg(Ansi.Color.YELLOW).boldOff().toString());
+        replacements.put(ChatColor.GRAY, Ansi.ansi().a(Attribute.RESET).fg(Ansi.Color.WHITE).boldOff().toString());
+        replacements.put(ChatColor.DARK_GRAY, Ansi.ansi().a(Attribute.RESET).fg(Ansi.Color.BLACK).bold().toString());
+        replacements.put(ChatColor.BLUE, Ansi.ansi().a(Attribute.RESET).fg(Ansi.Color.BLUE).bold().toString());
+        replacements.put(ChatColor.GREEN, Ansi.ansi().a(Attribute.RESET).fg(Ansi.Color.GREEN).bold().toString());
+        replacements.put(ChatColor.AQUA, Ansi.ansi().a(Attribute.RESET).fg(Ansi.Color.CYAN).bold().toString());
+        replacements.put(ChatColor.RED, Ansi.ansi().a(Attribute.RESET).fg(Ansi.Color.RED).bold().toString());
+        replacements.put(ChatColor.LIGHT_PURPLE, Ansi.ansi().a(Attribute.RESET).fg(Ansi.Color.MAGENTA).bold().toString());
+        replacements.put(ChatColor.YELLOW, Ansi.ansi().a(Attribute.RESET).fg(Ansi.Color.YELLOW).bold().toString());
+        replacements.put(ChatColor.WHITE, Ansi.ansi().a(Attribute.RESET).fg(Ansi.Color.WHITE).bold().toString());
         replacements.put(ChatColor.MAGIC, Ansi.ansi().a(Attribute.BLINK_SLOW).toString());
         replacements.put(ChatColor.BOLD, Ansi.ansi().a(Attribute.UNDERLINE_DOUBLE).toString());
         replacements.put(ChatColor.STRIKETHROUGH, Ansi.ansi().a(Attribute.STRIKETHROUGH_ON).toString());
-- 
1.8.1.1

