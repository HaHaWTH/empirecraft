From 364e3391af906ea2440b8250aa1a3112b736f108 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Thu, 25 Jul 2013 23:08:50 -0400
Subject: [PATCH] Improvements to Player lookup - Resolves BUKKIT-4608

Many sections of code does player lookups by iterating every online player
and doing name comparisons. This is very ineffecient and can reduce performance
on servers with high player count.

By using a map based approach for most player lookups, player lookup
performance should scale better with increased amount of players.

This commit also corrects a loose lookup on adding and removing ops by
using getPlayerExact instead, as adding and removing ops is not a loose
match operation.
---
 src/main/java/net/minecraft/server/PlayerList.java     | 12 ++++++++++--
 .../org/bukkit/craftbukkit/CraftOfflinePlayer.java     | 10 ++--------
 src/main/java/org/bukkit/craftbukkit/CraftServer.java  | 18 ++++++------------
 .../org/bukkit/craftbukkit/entity/CraftPlayer.java     |  8 +-------
 4 files changed, 19 insertions(+), 29 deletions(-)

diff --git a/src/main/java/net/minecraft/server/PlayerList.java b/src/main/java/net/minecraft/server/PlayerList.java
index bb13b41..cde5b39 100644
--- a/src/main/java/net/minecraft/server/PlayerList.java
+++ b/src/main/java/net/minecraft/server/PlayerList.java
@@ -37,6 +37,7 @@ public abstract class PlayerList {
     private static final SimpleDateFormat d = new SimpleDateFormat("yyyy-MM-dd \'at\' HH:mm:ss z");
     private final MinecraftServer server;
     public final List players = new java.util.concurrent.CopyOnWriteArrayList(); // CraftBukkit - ArrayList -> CopyOnWriteArrayList: Iterator safety
+    public final Map<String, EntityPlayer> playerMap = new java.util.HashMap<String, EntityPlayer>(); // CraftBukkit
     private final BanList banByName = new BanList(new File("banned-players.txt"));
     private final BanList banByIP = new BanList(new File("banned-ips.txt"));
     private Set operators = new HashSet();
@@ -200,6 +201,7 @@ public abstract class PlayerList {
         cserver.detectListNameConflict(entityplayer); // CraftBukkit
         // this.sendAll(new Packet201PlayerInfo(entityplayer.getName(), true, 1000)); // CraftBukkit - replaced with loop below
         this.players.add(entityplayer);
+        this.playerMap.put(entityplayer.name.toLowerCase(), entityplayer); // CraftBukkit
         WorldServer worldserver = this.server.getWorldServer(entityplayer.dimension);
 
         // CraftBukkit start
@@ -271,6 +273,7 @@ public abstract class PlayerList {
         worldserver.kill(entityplayer);
         worldserver.getPlayerChunkMap().removePlayer(entityplayer);
         this.players.remove(entityplayer);
+        this.playerMap.remove(entityplayer.name.toLowerCase()); // CraftBukkit
         ChunkIOExecutor.adjustPoolSize(this.getPlayerCount()); // CraftBukkit
 
         // CraftBukkit start - .name -> .listName, replace sendAll with loop
@@ -348,6 +351,7 @@ public abstract class PlayerList {
 
         EntityPlayer entityplayer;
 
+        /* CraftBukkit start
         for (int i = 0; i < this.players.size(); ++i) {
             entityplayer = (EntityPlayer) this.players.get(i);
             if (entityplayer.getName().equalsIgnoreCase(s)) {
@@ -359,6 +363,9 @@ public abstract class PlayerList {
 
         while (iterator.hasNext()) {
             entityplayer = (EntityPlayer) iterator.next();
+        */
+        if ((entityplayer = playerMap.get(s.toLowerCase())) != null) {
+        // CraftBukkit end
             entityplayer.playerConnection.disconnect("You logged in from another location");
         }
 
@@ -796,7 +803,7 @@ public abstract class PlayerList {
         this.operators.add(s.toLowerCase());
 
         // CraftBukkit start
-        Player player = server.server.getPlayer(s);
+        Player player = server.server.getPlayerExact(s);
         if (player != null) {
             player.recalculatePermissions();
         }
@@ -807,7 +814,7 @@ public abstract class PlayerList {
         this.operators.remove(s.toLowerCase());
 
         // CraftBukkit start
-        Player player = server.server.getPlayer(s);
+        Player player = server.server.getPlayerExact(s);
         if (player != null) {
             player.recalculatePermissions();
         }
@@ -825,6 +832,7 @@ public abstract class PlayerList {
     }
 
     public EntityPlayer getPlayer(String s) {
+        if (true) return playerMap.get(s.toLowerCase()); // CraftBukkit
         Iterator iterator = this.players.iterator();
 
         EntityPlayer entityplayer;
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java b/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java
index dd6bcf9..775bfc9 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java
@@ -103,14 +103,8 @@ public class CraftOfflinePlayer implements OfflinePlayer, ConfigurationSerializa
     }
 
     public Player getPlayer() {
-        for (Object obj : server.getHandle().players) {
-            EntityPlayer player = (EntityPlayer) obj;
-            if (player.getName().equalsIgnoreCase(getName())) {
-                return (player.playerConnection != null) ? player.playerConnection.getPlayer() : null;
-            }
-        }
-
-        return null;
+        final EntityPlayer player = server.getHandle().playerMap.get(name.toLowerCase());
+        return (player != null && player.playerConnection != null) ? player.playerConnection.getPlayer() : null;
     }
 
     @Override
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 23ad8b3..2dcdd53 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -327,9 +327,11 @@ public final class CraftServer implements Server {
     public Player getPlayer(final String name) {
         Validate.notNull(name, "Name cannot be null");
 
+        Player found = getPlayerExact(name);
+        if (found != null) {
+            return found;
+        }
         Player[] players = getOnlinePlayers();
-
-        Player found = null;
         String lowerName = name.toLowerCase();
         int delta = Integer.MAX_VALUE;
         for (Player player : players) {
@@ -347,16 +349,8 @@ public final class CraftServer implements Server {
 
     public Player getPlayerExact(String name) {
         Validate.notNull(name, "Name cannot be null");
-
-        String lname = name.toLowerCase();
-
-        for (Player player : getOnlinePlayers()) {
-            if (player.getName().equalsIgnoreCase(lname)) {
-                return player;
-            }
-        }
-
-        return null;
+        final EntityPlayer entityPlayer = playerList.playerMap.get(name.toLowerCase());
+        return entityPlayer != null ? entityPlayer.getBukkitEntity() : null;
     }
 
     public int broadcastMessage(String message) {
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index fbceeb3..bdbd0d0 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -91,13 +91,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
     }
 
     public boolean isOnline() {
-        for (Object obj : server.getHandle().players) {
-            EntityPlayer player = (EntityPlayer) obj;
-            if (player.getName().equalsIgnoreCase(getName())) {
-                return true;
-            }
-        }
-        return false;
+        return server.getHandle().playerMap.containsKey(getName().toLowerCase());
     }
 
     public InetSocketAddress getAddress() {
-- 
1.8.4

