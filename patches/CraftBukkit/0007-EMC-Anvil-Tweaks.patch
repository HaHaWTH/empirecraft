From e90accc4bd6a77c441d5a25eed12153cba072373 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Mon, 31 Dec 2012 01:25:46 -0500
Subject: [PATCH] EMC Anvil Tweaks

Make Items not have a repair cost increase due to Anvil usage.
Renaming is only 5 levels, combines include free renames.
---
 src/main/java/net/minecraft/server/ContainerAnvil.java | 16 +++++++++++++++-
 src/main/java/net/minecraft/server/ItemStack.java      |  5 +++++
 2 files changed, 20 insertions(+), 1 deletion(-)

diff --git a/src/main/java/net/minecraft/server/ContainerAnvil.java b/src/main/java/net/minecraft/server/ContainerAnvil.java
index 9b73555..df71dac 100644
--- a/src/main/java/net/minecraft/server/ContainerAnvil.java
+++ b/src/main/java/net/minecraft/server/ContainerAnvil.java
@@ -1,6 +1,7 @@
 package net.minecraft.server;
 
 import java.util.Iterator;
+import java.util.List;
 import java.util.Map;
 
 import org.apache.commons.lang3.StringUtils;
@@ -271,8 +272,11 @@ public class ContainerAnvil extends Container {
                 this.a = 39;
             }
 
+            if (j == i && j > 0) { this.a = Math.min(15, 4 + itemstack.count); } // EMC - renames scale 5 to 15 levels
+            else if (j > 0) { this.a -= j; } // EMC - Free renames on combining
+
             if (this.a >= 40 && !this.n.abilities.canInstantlyBuild) {
-                itemstack1 = null;
+                this.a = 39; // EMC - cap at 39
             }
 
             if (itemstack1 != null) {
@@ -299,6 +303,16 @@ public class ContainerAnvil extends Container {
         }
     }
 
+    // EMC Start - send modified max level on change
+    @Override
+    public void b() {
+        super.b();
+        for (ICrafting listener : (List<ICrafting>) this.listeners) {
+            listener.setContainerData(this, 0, this.a);
+        }
+    }
+    // EMC end
+
     public void addSlotListener(ICrafting icrafting) {
         super.addSlotListener(icrafting);
         icrafting.setContainerData(this, 0, this.a);
diff --git a/src/main/java/net/minecraft/server/ItemStack.java b/src/main/java/net/minecraft/server/ItemStack.java
index 66b595f..2b4d97c 100644
--- a/src/main/java/net/minecraft/server/ItemStack.java
+++ b/src/main/java/net/minecraft/server/ItemStack.java
@@ -120,6 +120,10 @@ public final class ItemStack {
         if (nbttagcompound.hasKey("tag")) {
             // CraftBukkit - clear name from compound and make defensive copy as this data may be coming from the save thread
             this.tag = (NBTTagCompound) nbttagcompound.getCompound("tag").clone().setName("");
+
+            // EMC - No repair cost on EMC.
+            if (this.tag.hasKey("RepairCost")) { this.tag.setInt("RepairCost", 0); }
+
         }
     }
 
@@ -462,6 +466,7 @@ public final class ItemStack {
     }
 
     public void setRepairCost(int i) {
+        i = 0; // EMC - no repair cost increases for EMC.
         if (!this.hasTag()) {
             this.tag = new NBTTagCompound("tag");
         }
-- 
1.8.3.2

