From 7a1cb8d1b8f85434cd28b9492ff6a3f50db51c83 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Thu, 22 Nov 2012 21:30:59 -0500
Subject: [PATCH] Misc EMC Changes

Only spawn 1 ocelot ever from eggs.
Load custom permissions before plugins
Unload plugins after everything else
Fix boat wood gen exploit
Remove CraftBukkit "Feature" of ItemStack's having infinite use if less than 0 stack size.
Color name tags to match list
Make Durability enchant scale 0-80% reduction on Armor damage (up to level 5)
Zombies break down doors on normal
---
 src/main/java/net/minecraft/server/EntityBoat.java           |  2 +-
 src/main/java/net/minecraft/server/EntityOcelot.java         |  2 +-
 src/main/java/net/minecraft/server/EntityTrackerEntry.java   |  5 +++++
 src/main/java/net/minecraft/server/ItemStack.java            |  9 +++++++++
 src/main/java/net/minecraft/server/MinecraftServer.java      | 12 +++++++-----
 .../java/net/minecraft/server/PathfinderGoalBreakDoor.java   |  2 +-
 src/main/java/net/minecraft/server/PlayerConnection.java     |  2 +-
 .../java/net/minecraft/server/PlayerInteractManager.java     |  2 +-
 src/main/java/org/bukkit/craftbukkit/CraftServer.java        |  3 ++-
 9 files changed, 28 insertions(+), 11 deletions(-)

diff --git a/src/main/java/net/minecraft/server/EntityBoat.java b/src/main/java/net/minecraft/server/EntityBoat.java
index 827b3a0..c585f2d 100644
--- a/src/main/java/net/minecraft/server/EntityBoat.java
+++ b/src/main/java/net/minecraft/server/EntityBoat.java
@@ -292,7 +292,7 @@ public class EntityBoat extends Entity {
             }
 
             this.move(this.motX, this.motY, this.motZ);
-            if (this.positionChanged && d3 > 0.2D) {
+            if (!this.dead && this.positionChanged && d3 > 0.2D) { // EMC - Fix wood generator exploit
                 if (!this.world.isStatic) {
                     // CraftBukkit start
                     Vehicle vehicle = (Vehicle) this.getBukkitEntity();
diff --git a/src/main/java/net/minecraft/server/EntityOcelot.java b/src/main/java/net/minecraft/server/EntityOcelot.java
index 48d311f..c9e2102 100644
--- a/src/main/java/net/minecraft/server/EntityOcelot.java
+++ b/src/main/java/net/minecraft/server/EntityOcelot.java
@@ -213,7 +213,7 @@ public class EntityOcelot extends EntityTameableAnimal {
     }
 
     public void bJ() {
-        if (this.world.random.nextInt(7) == 0) {
+        if (false && this.world.random.nextInt(7) == 0) { // EMC - one OCelot only...
             for (int i = 0; i < 2; ++i) {
                 EntityOcelot entityocelot = new EntityOcelot(this.world);
 
diff --git a/src/main/java/net/minecraft/server/EntityTrackerEntry.java b/src/main/java/net/minecraft/server/EntityTrackerEntry.java
index 6fa425c..9451f37 100644
--- a/src/main/java/net/minecraft/server/EntityTrackerEntry.java
+++ b/src/main/java/net/minecraft/server/EntityTrackerEntry.java
@@ -306,6 +306,11 @@ public class EntityTrackerEntry {
 
                     this.trackedPlayers.add(entityplayer);
                     Packet packet = this.b();
+                    // EMC start - colored name tags
+                    if (packet != null && packet instanceof Packet20NamedEntitySpawn && this.tracker instanceof EntityPlayer) {
+                        ((Packet20NamedEntitySpawn) packet).b = ((EntityPlayer) this.tracker).listName;
+                    }
+                    // EMC end
 
                     entityplayer.playerConnection.sendPacket(packet);
                     if (!this.tracker.getDataWatcher().d()) {
diff --git a/src/main/java/net/minecraft/server/ItemStack.java b/src/main/java/net/minecraft/server/ItemStack.java
index de7e7ac..fd3c5d8 100644
--- a/src/main/java/net/minecraft/server/ItemStack.java
+++ b/src/main/java/net/minecraft/server/ItemStack.java
@@ -192,7 +192,16 @@ public final class ItemStack {
                 int j = EnchantmentManager.getEnchantmentLevel(Enchantment.DURABILITY.id, this);
                 int k = 0;
 
+                j = Math.min(5, j); // EMC
                 for (int l = 0; j > 0 && l < i; ++l) {
+                    // EMC start - make Unbreaking scale to level for armor. 5 = 80% chance of no loss.
+                    if (getItem() instanceof ItemArmor) {
+                        if (random.nextFloat() >= 1 - (.8 * (j / 5))) {
+                            k++;
+                        }
+                        continue;
+                    }
+                    // EMC end
                     if (EnchantmentDurability.a(this, j, random)) {
                         ++k;
                     }
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 3689a3d..42bc453 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -334,11 +334,6 @@ public abstract class MinecraftServer implements ICommandListener, Runnable, IMo
     public void stop() throws ExceptionWorldConflict { // CraftBukkit - added throws
         if (!this.N) {
             this.getLogger().info("Stopping server");
-            // CraftBukkit start
-            if (this.server != null) {
-                this.server.disablePlugins();
-            }
-            // CraftBukkit end
 
             if (this.ae() != null) {
                 this.ae().a();
@@ -360,6 +355,13 @@ public abstract class MinecraftServer implements ICommandListener, Runnable, IMo
                 worldserver.saveLevel();
             }
             // CraftBukkit end */
+
+            // CraftBukkit start
+            if (this.server != null) {
+                this.server.disablePlugins();
+            }
+            // CraftBukkit end
+
             if (this.m != null && this.m.d()) {
                 this.m.e();
             }
diff --git a/src/main/java/net/minecraft/server/PathfinderGoalBreakDoor.java b/src/main/java/net/minecraft/server/PathfinderGoalBreakDoor.java
index 86b194c..69bc2da 100644
--- a/src/main/java/net/minecraft/server/PathfinderGoalBreakDoor.java
+++ b/src/main/java/net/minecraft/server/PathfinderGoalBreakDoor.java
@@ -43,7 +43,7 @@ public class PathfinderGoalBreakDoor extends PathfinderGoalDoorInteract {
             this.j = i;
         }
 
-        if (this.i == 240 && this.a.world.difficulty == 3) {
+        if (this.i == 240 && this.a.world.difficulty >= 2) { // EMC - normal mode
             // CraftBukkit start
             if (org.bukkit.craftbukkit.event.CraftEventFactory.callEntityBreakDoorEvent(this.a, this.b, this.c, this.d).isCancelled()) {
                 this.e();
diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index 60114e6..1d7ac55 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -668,7 +668,7 @@ public class PlayerConnection extends Connection {
         }
 
         itemstack = this.player.inventory.getItemInHand();
-        if (itemstack != null && itemstack.count == 0) {
+        if (itemstack != null && itemstack.count <= 0) { // CraftBukkit - Handle infinite use item bug.
             this.player.inventory.items[this.player.inventory.itemInHandIndex] = null;
             itemstack = null;
         }
diff --git a/src/main/java/net/minecraft/server/PlayerInteractManager.java b/src/main/java/net/minecraft/server/PlayerInteractManager.java
index 62df1a3..4773384 100644
--- a/src/main/java/net/minecraft/server/PlayerInteractManager.java
+++ b/src/main/java/net/minecraft/server/PlayerInteractManager.java
@@ -360,7 +360,7 @@ public class PlayerInteractManager {
                 }
             }
 
-            if (itemstack1.count == 0) {
+            if (itemstack1.count <= 0) { // CraftBukkit - Handle infinite use item bug.
                 entityhuman.inventory.items[entityhuman.inventory.itemInHandIndex] = null;
             }
 
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 83704f0..e50212a 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -277,6 +277,7 @@ public final class CraftServer implements Server {
         if (type == PluginLoadOrder.STARTUP) {
             helpMap.clear();
             helpMap.initializeGeneralTopics();
+            loadCustomPermissions(); // EMC - Plugins should have access to this
         }
 
         Plugin[] plugins = pluginManager.getPlugins();
@@ -289,7 +290,7 @@ public final class CraftServer implements Server {
 
         if (type == PluginLoadOrder.POSTWORLD) {
             commandMap.registerServerAliases();
-            loadCustomPermissions();
+            // loadCustomPermissions(); // EMC - Moving up
             DefaultPermissions.registerCorePermissions();
             helpMap.initializeCommands();
         }
-- 
1.8.2

