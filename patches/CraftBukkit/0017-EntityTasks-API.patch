From a53a92c8a15c7b1000f1e04906a7a4f19a41a923 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Tue, 11 Jun 2013 23:15:00 -0400
Subject: [PATCH] EntityTasks API

Allows scheduling repeating task timers on an entity level.
Avoids Bukkit system so that tasks will simply maintain themselves on entity removal.
---
 .../empireminecraft/entityai/EntityTasksApi.java   | 35 ++++++++++++++++++++++
 src/main/java/net/minecraft/server/Entity.java     |  1 +
 .../net/minecraft/server/EntityTasksHandler.java   | 33 ++++++++++++++++++++
 src/main/java/net/minecraft/server/World.java      |  1 +
 4 files changed, 70 insertions(+)
 create mode 100644 src/main/java/com/empireminecraft/entityai/EntityTasksApi.java
 create mode 100644 src/main/java/net/minecraft/server/EntityTasksHandler.java

diff --git a/src/main/java/com/empireminecraft/entityai/EntityTasksApi.java b/src/main/java/com/empireminecraft/entityai/EntityTasksApi.java
new file mode 100644
index 0000000..2df6d1e
--- /dev/null
+++ b/src/main/java/com/empireminecraft/entityai/EntityTasksApi.java
@@ -0,0 +1,35 @@
+package com.empireminecraft.entityai;
+
+import net.minecraft.server.EntityTasksHandler;
+import org.bukkit.craftbukkit.entity.CraftEntity;
+import org.bukkit.entity.Entity;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class EntityTasksApi {
+    public void scheduleTask(Entity entity, EntityTask task, int interval) {
+        final EntityTasksHandler.TaskList entityTasks = ((CraftEntity) entity).getHandle().entityTasks;
+        List<EntityTask> entityTasksList = entityTasks.get(interval);
+        if (entityTasksList == null) {
+            entityTasksList = new ArrayList<EntityTask>(8);
+            entityTasks.put(interval, entityTasksList);
+        }
+
+        entityTasksList.add(task);
+    }
+
+    public abstract static class EntityTask implements Runnable {
+        private final Entity entity;
+
+        protected EntityTask(Entity entity) {
+            this.entity = entity;
+        }
+
+        public abstract void run(Entity entity);
+
+        public void run() {
+            run(entity);
+        }
+    }
+}
diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index 3088d87..39e5b6f 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -34,6 +34,7 @@ public abstract class Entity {
 
     // CraftBukkit start
     public com.empireminecraft.metaapi.MetaApi.MetaMap metaMap = null; // EMC
+    public EntityTasksHandler.TaskList entityTasks = new EntityTasksHandler.TaskList(); // EMC
     private static final int CURRENT_LEVEL = 2;
     static boolean isLevelAtLeast(NBTTagCompound tag, int level) {
         return tag.hasKey("Bukkit.updateLevel") && tag.getInt("Bukkit.updateLevel") >= level;
diff --git a/src/main/java/net/minecraft/server/EntityTasksHandler.java b/src/main/java/net/minecraft/server/EntityTasksHandler.java
new file mode 100644
index 0000000..ab0bfea
--- /dev/null
+++ b/src/main/java/net/minecraft/server/EntityTasksHandler.java
@@ -0,0 +1,33 @@
+package net.minecraft.server;
+
+import org.spigotmc.CustomTimingsHandler;
+
+import java.util.HashMap;
+import java.util.List;
+
+import static com.empireminecraft.entityai.EntityTasksApi.EntityTask;
+import static java.util.Map.Entry;
+
+public class EntityTasksHandler {
+    private static CustomTimingsHandler entityTasksTimer = new CustomTimingsHandler("** entityTasksTimer");
+    public static void tickHandler(Entity entity) {
+        if (entity.entityTasks.isEmpty()) {
+            return;
+        }
+        entityTasksTimer.startTiming();
+        int entityKey = entity.ticksLived - entity.id;
+        for (Entry<Integer, List<EntityTask>> entry : entity.entityTasks.entrySet()) {
+            int runEvery = entry.getKey();
+            if (entityKey % runEvery != 0 || entry.getValue().isEmpty()) {
+                continue;
+            }
+            for (EntityTask runnable : entry.getValue()) {
+                runnable.run();
+            }
+        }
+        entityTasksTimer.stopTiming();
+    }
+    public static class TaskList extends HashMap<Integer, List<EntityTask>> {
+
+    }
+}
diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index 9a75778..518ac7e 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -1439,6 +1439,7 @@ public abstract class World implements IBlockAccess {
         int j = MathHelper.floor(entity.locZ);
         byte b0 = 32;
 
+        EntityTasksHandler.tickHandler(entity); // EMC
         // Spigot start
         if (!Spigot.checkIfActive(entity)) {
             entity.ticksLived++;
-- 
1.8.3

