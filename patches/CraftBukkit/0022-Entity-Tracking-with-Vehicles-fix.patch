From a56324c2ac0425d2a7f374edeb866406cd9c611a Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Mon, 17 Jun 2013 01:24:00 -0400
Subject: [PATCH] Entity Tracking with Vehicles fix

If an entity untracks from a player while a vehicle/passenger, the rider can become frozen
and stop receiving updates correctly.

This patch makes it so passengers track the same way as their vehicle.
---
 src/main/java/net/minecraft/server/Entity.java      |  1 +
 .../net/minecraft/server/EntityTrackerEntry.java    | 21 ++++++++++++++++++++-
 2 files changed, 21 insertions(+), 1 deletion(-)

diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index 4c60a3d..ee9ffc9 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -39,6 +39,7 @@ public abstract class Entity {
     static boolean isLevelAtLeast(NBTTagCompound tag, int level) {
         return tag.hasKey("Bukkit.updateLevel") && tag.getInt("Bukkit.updateLevel") >= level;
     }
+    EntityTrackerEntry tracker; // EMC
     // CraftBukkit end
 
     private static int entityCount = 0;
diff --git a/src/main/java/net/minecraft/server/EntityTrackerEntry.java b/src/main/java/net/minecraft/server/EntityTrackerEntry.java
index 0d8d5fc..467212a 100644
--- a/src/main/java/net/minecraft/server/EntityTrackerEntry.java
+++ b/src/main/java/net/minecraft/server/EntityTrackerEntry.java
@@ -37,6 +37,7 @@ public class EntityTrackerEntry {
     public Set trackedPlayers = new HashSet();
 
     public EntityTrackerEntry(Entity entity, int i, int j, boolean flag) {
+        entity.tracker = this; // EMC
         this.tracker = entity;
         this.b = i;
         this.c = j;
@@ -291,7 +292,15 @@ public class EntityTrackerEntry {
             double d0 = entityplayer.locX - (double) (this.xLoc / 32);
             double d1 = entityplayer.locZ - (double) (this.zLoc / 32);
 
-            if (d0 >= (double) (-this.b) && d0 <= (double) this.b && d1 >= (double) (-this.b) && d1 <= (double) this.b) {
+            // EMC start
+            boolean parent = true;
+            boolean force = false;
+            if (tracker.vehicle != null) {
+                parent = tracker.vehicle.tracker != null && tracker.vehicle.tracker.trackedPlayers.contains(entityplayer);
+                force = true;
+            }
+            if (parent && (force || (d0 >= (double) (-this.b) && d0 <= (double) this.b && d1 >= (double) (-this.b) && d1 <= (double) this.b))) {
+            // EMC end
                 if (!this.trackedPlayers.contains(entityplayer) && (this.d(entityplayer) || this.tracker.p)) {
                     // CraftBukkit start
                     if (this.tracker instanceof EntityPlayer) {
@@ -305,6 +314,11 @@ public class EntityTrackerEntry {
                     // CraftBukkit end
 
                     this.trackedPlayers.add(entityplayer);
+                    // EMC start
+                    if (tracker.passenger != null && tracker.passenger.tracker != null) {
+                        tracker.passenger.tracker.updatePlayer(entityplayer);
+                    }
+                    // EMC end
                     Packet packet = this.b();
                     // EMC start - colored name tags
                     if (packet != null && packet instanceof Packet20NamedEntitySpawn && this.tracker instanceof EntityPlayer) {
@@ -368,6 +382,11 @@ public class EntityTrackerEntry {
                 }
             } else if (this.trackedPlayers.contains(entityplayer)) {
                 this.trackedPlayers.remove(entityplayer);
+                // EMC start
+                if (tracker.passenger != null && tracker.passenger.tracker != null) {
+                    tracker.passenger.tracker.updatePlayer(entityplayer);
+                }
+                // EMC end
                 entityplayer.playerConnection.sendPacket(new Packet29DestroyEntity(this.tracker.id)); // SportBukkit
             }
         }
-- 
1.8.3.1

