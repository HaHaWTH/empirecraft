From 59880bd9b9f3adec10f2696f4ad3f92d0e0a7749 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Fri, 12 Jul 2013 18:58:19 -0400
Subject: [PATCH] Entity Serialization

Allow serializing an Entity to raw NBT, and to get an Entity object without spawning it into the world.
---
 .../cbmisc/EntitySerialization.java                | 30 ++++++++++++++++++++++
 src/main/java/net/minecraft/server/Entity.java     |  1 +
 .../org/bukkit/craftbukkit/entity/CraftEntity.java |  5 ++++
 3 files changed, 36 insertions(+)
 create mode 100644 src/main/java/com/empireminecraft/cbmisc/EntitySerialization.java

diff --git a/src/main/java/com/empireminecraft/cbmisc/EntitySerialization.java b/src/main/java/com/empireminecraft/cbmisc/EntitySerialization.java
new file mode 100644
index 0000000..e356105
--- /dev/null
+++ b/src/main/java/com/empireminecraft/cbmisc/EntitySerialization.java
@@ -0,0 +1,30 @@
+package com.empireminecraft.cbmisc;
+
+import net.minecraft.server.*;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.craftbukkit.entity.CraftEntity;
+import org.bukkit.entity.Entity;
+
+import java.io.ByteArrayInputStream;
+
+public class EntitySerialization {
+    public static byte[] serializeEntity(Entity craftentity) {
+        if (craftentity == null) {
+            throw new NullPointerException("Entity can not be null for serialization");
+        }
+        net.minecraft.server.Entity entity = ((CraftEntity) craftentity).getHandle();
+        NBTTagCompound cmp = new NBTTagCompound();
+        entity.serializeEntity(cmp);
+
+        return NBTCompressedStreamTools.a(cmp);
+    }
+
+    public static Entity deserializeEntity(byte[] data, org.bukkit.World world) {
+        if (data == null || data.length == 0) {
+            throw new NullPointerException("Data can not be null or empty for deserialization");
+        }
+        ByteArrayInputStream stream = new ByteArrayInputStream(data);
+        final NBTTagCompound cmp = NBTCompressedStreamTools.a(stream);
+        return EntityTypes.a(cmp, ((CraftWorld) world).getHandle()).getBukkitEntity();
+    }
+}
diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index 9b12786..7e642fd 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -1069,6 +1069,7 @@ public abstract class Entity {
         }
     }
 
+    public boolean serializeEntity(NBTTagCompound cmp) { Entity pass = passenger; passenger = null;boolean res = d(cmp); passenger = pass; return res; } // EMC
     public boolean d(NBTTagCompound nbttagcompound) {
         String s = this.P();
 
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
index 8e2e5cd..675cd71 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
@@ -22,6 +22,11 @@ public abstract class CraftEntity implements org.bukkit.entity.Entity {
     protected Entity entity;
     private EntityDamageEvent lastDamageEvent;
 
+    // EMC start
+    public boolean spawnAt(Location loc) {
+        return !entity.valid && ((CraftWorld) loc.getWorld()).getHandle().addEntity(entity);
+    }
+    // EMC end
     public CraftEntity(final CraftServer server, final Entity entity) {
         this.server = server;
         this.entity = entity;
-- 
1.8.3.2

