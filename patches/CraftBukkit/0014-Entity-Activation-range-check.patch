From 6e41644c6ae383cc69f6fbc4d391199c04ed45e8 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Fri, 18 Jan 2013 18:58:25 -0500
Subject: [PATCH] Entity Activation range check

---
 src/main/java/net/minecraft/server/Entity.java      | 11 ++++++++++-
 src/main/java/net/minecraft/server/EntityArrow.java | 10 ++++++++++
 src/main/java/net/minecraft/server/EntityBoat.java  |  6 ++++++
 .../net/minecraft/server/EntityEnderCrystal.java    |  6 ++++++
 .../net/minecraft/server/EntityEnderDragon.java     |  6 ++++++
 .../java/net/minecraft/server/EntityFireball.java   |  6 ++++++
 .../java/net/minecraft/server/EntityFireworks.java  |  7 +++++++
 src/main/java/net/minecraft/server/EntityHuman.java |  7 +++++++
 .../java/net/minecraft/server/EntityLightning.java  |  6 ++++++
 .../java/net/minecraft/server/EntityMinecart.java   |  6 ++++++
 .../java/net/minecraft/server/EntityProjectile.java |  6 ++++++
 .../java/net/minecraft/server/EntityTNTPrimed.java  |  6 ++++++
 .../java/net/minecraft/server/EntityWither.java     |  6 ++++++
 .../net/minecraft/server/EntityWitherSkull.java     |  6 ++++++
 src/main/java/net/minecraft/server/World.java       |  6 ++++--
 .../java/org/bukkit/craftbukkit/CraftWorld.java     |  8 +++++++-
 src/main/java/org/bukkit/craftbukkit/Spigot.java    | 21 +++++++++++++++++++++
 src/main/resources/configurations/bukkit.yml        |  1 +
 18 files changed, 127 insertions(+), 4 deletions(-)

diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index 1e9ee41..3bff730 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -112,7 +112,15 @@ public abstract class Entity {
     public UUID uniqueId = UUID.randomUUID(); // CraftBukkit
     public boolean valid = false; // CraftBukkit
 
-    static public CustomTimingsHandler entityMoveTimer = new CustomTimingsHandler("** entityMove"); // Spigot
+    // Spigot start
+    static public CustomTimingsHandler entityMoveTimer = new CustomTimingsHandler("** entityMove");
+    public boolean inWater = false;
+    public boolean isActivated = true;
+
+    public boolean isActivated() {
+        return isActivated || this.ticksLived % 20 == 0 || !this.onGround || this.inWater;
+    }
+    // Spigot end
 
     public Entity(World world) {
         this.id = entityCount++;
@@ -867,6 +875,7 @@ public abstract class Entity {
             this.ad = false;
         }
 
+        this.inWater = this.ad; // Spigot
         return this.ad;
     }
 
diff --git a/src/main/java/net/minecraft/server/EntityArrow.java b/src/main/java/net/minecraft/server/EntityArrow.java
index 916b9dc..b424712 100644
--- a/src/main/java/net/minecraft/server/EntityArrow.java
+++ b/src/main/java/net/minecraft/server/EntityArrow.java
@@ -39,6 +39,16 @@ public class EntityArrow extends Entity implements IProjectile {
         this.height = 0.0F;
     }
 
+    // Spigot start - kill arrows out of activation range
+    @Override
+    public boolean isActivated() {
+        if (!isActivated && inGround) {
+            this.die();
+        }
+        return true;
+    }
+    // Spigot end
+
     public EntityArrow(World world, EntityLiving entityliving, EntityLiving entityliving1, float f, float f1) {
         super(world);
         this.l = 10.0D;
diff --git a/src/main/java/net/minecraft/server/EntityBoat.java b/src/main/java/net/minecraft/server/EntityBoat.java
index 8fce559..cdbf913 100644
--- a/src/main/java/net/minecraft/server/EntityBoat.java
+++ b/src/main/java/net/minecraft/server/EntityBoat.java
@@ -28,6 +28,12 @@ public class EntityBoat extends Entity {
     public double unoccupiedDeceleration = -1;
     public boolean landBoats = false;
 
+    // Spigot start
+    @Override
+    public boolean isActivated() {
+        return this.passenger != null || super.isActivated();
+    }
+    // Spigot end
     @Override
     public void collide(Entity entity) {
         org.bukkit.entity.Entity hitEntity = (entity == null) ? null : entity.getBukkitEntity();
diff --git a/src/main/java/net/minecraft/server/EntityEnderCrystal.java b/src/main/java/net/minecraft/server/EntityEnderCrystal.java
index f3395b4..b7597d9 100644
--- a/src/main/java/net/minecraft/server/EntityEnderCrystal.java
+++ b/src/main/java/net/minecraft/server/EntityEnderCrystal.java
@@ -2,6 +2,12 @@ package net.minecraft.server;
 
 public class EntityEnderCrystal extends Entity {
 
+    // Spigot start
+    @Override
+    public boolean isActivated() {
+        return true;
+    }
+    // Spigot end
     public int a = 0;
     public int b;
 
diff --git a/src/main/java/net/minecraft/server/EntityEnderDragon.java b/src/main/java/net/minecraft/server/EntityEnderDragon.java
index ffbc15a..c0e147d 100644
--- a/src/main/java/net/minecraft/server/EntityEnderDragon.java
+++ b/src/main/java/net/minecraft/server/EntityEnderDragon.java
@@ -494,6 +494,12 @@ public class EntityEnderDragon extends EntityLiving implements IComplex {
         return false;
     }
 
+    // Spigot start
+    @Override
+    public boolean isActivated() {
+        return true;
+    }
+    // Spigot end
     public boolean dealDamage(DamageSource damagesource, int i) { // CraftBukkit - protected -> public
         return super.damageEntity(damagesource, i);
     }
diff --git a/src/main/java/net/minecraft/server/EntityFireball.java b/src/main/java/net/minecraft/server/EntityFireball.java
index 107abca..75566d1 100644
--- a/src/main/java/net/minecraft/server/EntityFireball.java
+++ b/src/main/java/net/minecraft/server/EntityFireball.java
@@ -51,6 +51,12 @@ public abstract class EntityFireball extends Entity {
         this.setDirection(d0, d1, d2);
     }
 
+    // Spigot start
+    @Override
+    public boolean isActivated() {
+        return true;
+    }
+    // Spigot end
     public void setDirection(double d0, double d1, double d2) {
         // CraftBukkit end
         d0 += this.random.nextGaussian() * 0.4D;
diff --git a/src/main/java/net/minecraft/server/EntityFireworks.java b/src/main/java/net/minecraft/server/EntityFireworks.java
index 64454f5..c202aba 100644
--- a/src/main/java/net/minecraft/server/EntityFireworks.java
+++ b/src/main/java/net/minecraft/server/EntityFireworks.java
@@ -14,6 +14,13 @@ public class EntityFireworks extends Entity {
         this.datawatcher.a(8, 5);
     }
 
+    // Spigot start
+    @Override
+    public boolean isActivated() {
+        return true;
+    }
+    // Spigot end
+
     public EntityFireworks(World world, double d0, double d1, double d2, ItemStack itemstack) {
         super(world);
         this.ticksFlown = 0;
diff --git a/src/main/java/net/minecraft/server/EntityHuman.java b/src/main/java/net/minecraft/server/EntityHuman.java
index 25a75c9..a73a656 100644
--- a/src/main/java/net/minecraft/server/EntityHuman.java
+++ b/src/main/java/net/minecraft/server/EntityHuman.java
@@ -45,6 +45,13 @@ public abstract class EntityHuman extends EntityLiving implements ICommandListen
     }
     // CraftBukkit end
 
+    // Spigot start
+    @Override
+    public boolean isActivated() {
+        return true;
+    }
+    // Spigot end
+
     public ChunkCoordinates ca;
     public int sleepTicks; // CraftBukkit - private -> public
     public float cb;
diff --git a/src/main/java/net/minecraft/server/EntityLightning.java b/src/main/java/net/minecraft/server/EntityLightning.java
index 606ae34..c3467be 100644
--- a/src/main/java/net/minecraft/server/EntityLightning.java
+++ b/src/main/java/net/minecraft/server/EntityLightning.java
@@ -14,6 +14,12 @@ public class EntityLightning extends EntityWeather {
     private org.bukkit.craftbukkit.CraftWorld cworld;
     public boolean isEffect = false;
 
+    // Spigot start
+    @Override
+    public boolean isActivated() {
+        return true;
+    }
+    // Spigot end
     public EntityLightning(World world, double d0, double d1, double d2) {
         this(world, d0, d1, d2, false);
     }
diff --git a/src/main/java/net/minecraft/server/EntityMinecart.java b/src/main/java/net/minecraft/server/EntityMinecart.java
index cabc3ce..55d05e0 100644
--- a/src/main/java/net/minecraft/server/EntityMinecart.java
+++ b/src/main/java/net/minecraft/server/EntityMinecart.java
@@ -44,6 +44,12 @@ public class EntityMinecart extends Entity implements IInventory {
     public List<HumanEntity> transaction = new java.util.ArrayList<HumanEntity>();
     private int maxStack = MAX_STACK;
 
+    // Spigot start
+    @Override
+    public boolean isActivated() {
+        return this.passenger != null || super.isActivated();
+    }
+    // Spigot end
     public ItemStack[] getContents() {
         return this.items;
     }
diff --git a/src/main/java/net/minecraft/server/EntityProjectile.java b/src/main/java/net/minecraft/server/EntityProjectile.java
index 7e8122d..e975c31 100644
--- a/src/main/java/net/minecraft/server/EntityProjectile.java
+++ b/src/main/java/net/minecraft/server/EntityProjectile.java
@@ -6,6 +6,12 @@ import org.bukkit.event.entity.ProjectileHitEvent; // CraftBukkit
 
 public abstract class EntityProjectile extends Entity implements IProjectile {
 
+    // Spigot start
+    @Override
+    public boolean isActivated() {
+        return true;
+    }
+    // Spigot end
     private int blockX = -1;
     private int blockY = -1;
     private int blockZ = -1;
diff --git a/src/main/java/net/minecraft/server/EntityTNTPrimed.java b/src/main/java/net/minecraft/server/EntityTNTPrimed.java
index 8db94ff..3bf8537 100644
--- a/src/main/java/net/minecraft/server/EntityTNTPrimed.java
+++ b/src/main/java/net/minecraft/server/EntityTNTPrimed.java
@@ -4,6 +4,12 @@ import org.bukkit.event.entity.ExplosionPrimeEvent; // CraftBukkit
 
 public class EntityTNTPrimed extends Entity {
 
+    // Spigot start
+    @Override
+    public boolean isActivated() {
+        return true;
+    }
+    // Spigot end
     public int fuseTicks;
     public float yield = 4; // CraftBukkit
     public boolean isIncendiary = false; // CraftBukkit
diff --git a/src/main/java/net/minecraft/server/EntityWither.java b/src/main/java/net/minecraft/server/EntityWither.java
index 2dc6e98..6b6fa03 100644
--- a/src/main/java/net/minecraft/server/EntityWither.java
+++ b/src/main/java/net/minecraft/server/EntityWither.java
@@ -409,6 +409,12 @@ public class EntityWither extends EntityMonster implements IRangedEntity {
         }
     }
 
+    // Spigot start
+    @Override
+    public boolean isActivated() {
+        return true;
+    }
+    // Spigot end
     protected void dropDeathLoot(boolean flag, int i) {
         // CraftBukkit start
         java.util.List<org.bukkit.inventory.ItemStack> loot = new java.util.ArrayList<org.bukkit.inventory.ItemStack>();
diff --git a/src/main/java/net/minecraft/server/EntityWitherSkull.java b/src/main/java/net/minecraft/server/EntityWitherSkull.java
index a1fcdb1..996c459 100644
--- a/src/main/java/net/minecraft/server/EntityWitherSkull.java
+++ b/src/main/java/net/minecraft/server/EntityWitherSkull.java
@@ -7,6 +7,12 @@ import org.bukkit.event.entity.ExplosionPrimeEvent;
 
 public class EntityWitherSkull extends EntityFireball {
 
+    // Spigot start
+    @Override
+    public boolean isActivated() {
+        return true;
+    }
+    // Spigot end
     public EntityWitherSkull(World world) {
         super(world);
         this.a(0.3125F, 0.3125F);
diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index 59febbb..d477e4b 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -1242,6 +1242,7 @@ public abstract class World implements IBlockAccess {
         this.f.clear();
         this.methodProfiler.c("regular");
 
+        org.bukkit.craftbukkit.Spigot.activateEntities(this); // Spigot
         timings.entityTick.startTiming(); // Spigot
         for (i = 0; i < this.entityList.size(); ++i) {
             entity = (Entity) this.entityList.get(i);
@@ -1438,7 +1439,7 @@ public abstract class World implements IBlockAccess {
         int j = MathHelper.floor(entity.locZ);
         byte b0 = 32;
 
-        if (!flag || this.d(i - b0, 0, j - b0, i + b0, 0, j + b0)) {
+        if (true || !flag || this.d(i - b0, 0, j - b0, i + b0, 0, j + b0)) { // Spigot - Logic moved below.
             entity.T = entity.locX;
             entity.U = entity.locY;
             entity.V = entity.locZ;
@@ -1447,12 +1448,13 @@ public abstract class World implements IBlockAccess {
             if (flag && entity.ah) {
                 if (entity.vehicle != null) {
                     entity.U();
-                } else {
+                } else if (entity.isActivated()) { // Spigot - check if entity is in activation range
                     ++entity.ticksLived;
                     entity.j_();
                 }
             }
 
+            if (!entity.isActivated()) { return; } // Spigot - if entity is not in range, skip rest.
             this.methodProfiler.a("chunkCheck");
             if (Double.isNaN(entity.locX) || Double.isInfinite(entity.locX)) {
                 entity.locX = entity.T;
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
index 21bd64a..2636ed4 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
@@ -100,10 +100,12 @@ public class CraftWorld implements World {
         treeGrowthModifier = configuration.getInt("world-settings.default.tree-growth-modifier", treeGrowthModifier);
         mushroomGrowthModifier = configuration.getInt("world-settings.default.mushroom-growth-modifier", mushroomGrowthModifier);
 
+        entityActivationRange = configuration.getInt("world-settings.default.entity-activation-range", entityActivationRange);
+
         //override defaults with world specific, if they exist
         growthPerTick = configuration.getInt("world-settings." + name + ".growth-chunks-per-tick", growthPerTick);
         itemMergeRadius = configuration.getDouble("world-settings." + name + ".item-merge-radius", itemMergeRadius);
-      expMergeRadius = configuration.getDouble("world-settings." + name + ".exp-merge-radius", expMergeRadius);
+        expMergeRadius = configuration.getDouble("world-settings." + name + ".exp-merge-radius", expMergeRadius);
         randomLightingUpdates = configuration.getBoolean("world-settings." + name + ".random-light-updates", randomLightingUpdates);
         mobSpawnRange = configuration.getInt("world-settings." + name + ".mob-spawn-range", mobSpawnRange);
         aggregateTicks = Math.max(1, configuration.getInt("world-settings." + name + ".aggregate-chunkticks", aggregateTicks));
@@ -120,6 +122,7 @@ public class CraftWorld implements World {
         viewDistance = configuration.getInt("world-settings." + name + ".view-distance", viewDistance);
 
         obfuscated = !world.getServer().orebfuscatorDisabledWorlds.contains(name);
+        entityActivationRange = configuration.getInt("world-settings." + name + ".entity-activation-range", entityActivationRange);
 
         server.getLogger().info("-------------- Spigot ----------------");
         server.getLogger().info("-------- World Settings For [" + name + "] --------");
@@ -138,6 +141,7 @@ public class CraftWorld implements World {
         server.getLogger().info("Mushroom Growth Modifier: " + mushroomGrowthModifier);
         server.getLogger().info("View distance: " + viewDistance);
         server.getLogger().info("Oreobfuscator: " + obfuscated);
+        server.getLogger().info("Entity Activation Range: " + entityActivationRange);
         server.getLogger().info("-------------------------------------------------");
         // Spigot end
     }
@@ -158,6 +162,8 @@ public class CraftWorld implements World {
     public int sugarGrowthModifier = 100;
     public int treeGrowthModifier = 100;
     public int mushroomGrowthModifier = 100;
+
+    public int entityActivationRange = 0;
     // Spigot end
 
     public Block getBlockAt(int x, int y, int z) {
diff --git a/src/main/java/org/bukkit/craftbukkit/Spigot.java b/src/main/java/org/bukkit/craftbukkit/Spigot.java
index 83988c3..1f511ef 100644
--- a/src/main/java/org/bukkit/craftbukkit/Spigot.java
+++ b/src/main/java/org/bukkit/craftbukkit/Spigot.java
@@ -1,8 +1,12 @@
 package org.bukkit.craftbukkit;
 
+import net.minecraft.server.Entity;
+import net.minecraft.server.World;
 import org.bukkit.command.SimpleCommandMap;
 import org.bukkit.configuration.file.YamlConfiguration;
 
+import java.util.List;
+
 public class Spigot {
     public static void initialize(CraftServer server, SimpleCommandMap commandMap, YamlConfiguration configuration) {
         commandMap.register("bukkit", new org.bukkit.craftbukkit.command.RestartCommand("restart"));
@@ -33,4 +37,21 @@ public class Spigot {
             server.chunkGCPeriod = 600;
         }
     }
+
+    public static void activateEntities(World world) {
+        int activationRange = world.getWorld().entityActivationRange;
+        if (activationRange == 0) {
+            return;
+        }
+        for (Entity entity : (List<Entity>) world.entityList) {
+            entity.isActivated = false;
+        }
+
+        for (Entity player : (List<Entity>) world.players) {
+            List<Entity> list = world.getEntities(player, player.boundingBox.grow(activationRange, 256, activationRange));
+            for (Entity entity : list) {
+                entity.isActivated  = true;
+            }
+        }
+    }
 }
diff --git a/src/main/resources/configurations/bukkit.yml b/src/main/resources/configurations/bukkit.yml
index 6931712..a22c6d2 100644
--- a/src/main/resources/configurations/bukkit.yml
+++ b/src/main/resources/configurations/bukkit.yml
@@ -49,6 +49,7 @@ world-settings:
         sugar-growth-modifier: 100
         tree-growth-modifier: 100
         mushroom-growth-modifier: 100
+        entity-activation-range: 0
     world:
         growth-chunks-per-tick: 1000
     world_nether:
-- 
1.8.1.1

