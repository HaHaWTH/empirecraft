From 7ee769d2287d7e4772cfc02763e9481ec7c0b45d Mon Sep 17 00:00:00 2001
From: Thinkofdeath <thethinkofdeath@gmail.com>
Date: Tue, 18 Mar 2014 09:49:30 +0000
Subject: [PATCH] Remove the lastChunkAccessed if it is unloaded.

This fixes an issue where a chunk would be unloaded but remain in lastChunkAccessed meaning calls on getChunkAt could return a chunk that is no longer loaded, this caused an issue where the chunk could be reloaded whilst in use reverting any block changes. This caused findEndPortal to return null even after createEndPortal which would crash the server trying to teleport to a null location.
---
 src/main/java/net/minecraft/server/ChunkProviderServer.java | 7 +++++++
 src/main/java/net/minecraft/server/World.java               | 2 +-
 src/main/java/org/bukkit/craftbukkit/CraftWorld.java        | 8 ++++++++
 3 files changed, 16 insertions(+), 1 deletion(-)

diff --git a/src/main/java/net/minecraft/server/ChunkProviderServer.java b/src/main/java/net/minecraft/server/ChunkProviderServer.java
index 4b17a17..0e50624 100644
--- a/src/main/java/net/minecraft/server/ChunkProviderServer.java
+++ b/src/main/java/net/minecraft/server/ChunkProviderServer.java
@@ -309,6 +309,13 @@ public class ChunkProviderServer implements IChunkProvider {
                 long chunkcoordinates = this.unloadQueue.popFirst();
                 Chunk chunk = this.chunks.get(chunkcoordinates);
                 if (chunk == null) continue;
+                // Spigot start - Remove the chunk from the cache if it is unloaded
+                Chunk result = world.lastChunkAccessed;
+                if ( result != null && result.locX == chunk.locX && result.locZ == chunk.locZ )
+                {
+                    world.lastChunkAccessed = null;
+                }
+                // Spigot end
 
                 ChunkUnloadEvent event = new ChunkUnloadEvent(chunk.bukkitChunk);
                 server.getPluginManager().callEvent(event);
diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index 4fffbb4..25b5ea7 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -154,7 +154,7 @@ public abstract class World implements IBlockAccess {
     public boolean pvpMode;
     public boolean keepSpawnInMemory = true;
     public ChunkGenerator generator;
-    Chunk lastChunkAccessed;
+    public Chunk lastChunkAccessed; // Spigot - Make public
     int lastXAccessed = Integer.MIN_VALUE;
     int lastZAccessed = Integer.MIN_VALUE;
     final Object chunkLock = new Object();
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
index 147b3dc..86296c8 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
@@ -187,6 +187,14 @@ public class CraftWorld implements World {
             world.chunkProviderServer.saveChunkNOP(chunk);
         }
 
+        // Spigot start - Remove the chunk from the cache if it is unloaded
+        net.minecraft.server.Chunk result = world.lastChunkAccessed;
+        if ( result != null && result.locX == chunk.locX && result.locZ == chunk.locZ )
+        {
+            world.lastChunkAccessed = null;
+        }
+        // Spigot end
+
         world.chunkProviderServer.unloadQueue.remove(x, z);
         world.chunkProviderServer.chunks.remove(LongHash.toLong(x, z));
 
-- 
1.8.3.2

