From f7da7b8c03090d6357b37f830d51f2faafc0b435 Mon Sep 17 00:00:00 2001
From: mrapple <tony@oc.tc>
Date: Mon, 17 Jun 2013 00:27:28 -0400
Subject: [PATCH] SportBukkit - Remove Destroy Queue

---
 src/main/java/net/minecraft/server/EntityPlayer.java       |  7 +++++--
 src/main/java/net/minecraft/server/EntityTrackerEntry.java | 10 +++++-----
 2 files changed, 10 insertions(+), 7 deletions(-)

diff --git a/src/main/java/net/minecraft/server/EntityPlayer.java b/src/main/java/net/minecraft/server/EntityPlayer.java
index 07d48eb..5462b23 100644
--- a/src/main/java/net/minecraft/server/EntityPlayer.java
+++ b/src/main/java/net/minecraft/server/EntityPlayer.java
@@ -29,7 +29,7 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
     public double d;
     public double e;
     public final List chunkCoordIntPairQueue = new LinkedList();
-    public final List removeQueue = new LinkedList();
+    //public final List removeQueue = new LinkedList(); // SportBukkit
     private float bO = Float.MIN_VALUE;
     private float bP = -1.0E8F;
     private int bQ = -99999999;
@@ -181,6 +181,8 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
         }
         // CraftBukkit end
 
+        // SportBukkit start
+        /*
         while (!this.removeQueue.isEmpty()) {
             int i = Math.min(this.removeQueue.size(), 127);
             int[] aint = new int[i];
@@ -194,6 +196,7 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
 
             this.playerConnection.sendPacket(new Packet29DestroyEntity(aint));
         }
+        */ // SportBukkit end
 
         if (!this.chunkCoordIntPairQueue.isEmpty()) {
             ArrayList arraylist = new ArrayList();
@@ -807,7 +810,7 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
         this.lastSentExp = -1;
         this.bP = -1.0F;
         this.bQ = -1;
-        this.removeQueue.addAll(((EntityPlayer) entityhuman).removeQueue);
+        //this.removeQueue.addAll(((EntityPlayer) entityhuman).removeQueue); // SportBukkit
     }
 
     protected void a(MobEffect mobeffect) {
diff --git a/src/main/java/net/minecraft/server/EntityTrackerEntry.java b/src/main/java/net/minecraft/server/EntityTrackerEntry.java
index f2e1435..26e9c1a 100644
--- a/src/main/java/net/minecraft/server/EntityTrackerEntry.java
+++ b/src/main/java/net/minecraft/server/EntityTrackerEntry.java
@@ -285,13 +285,13 @@ public class EntityTrackerEntry {
         while (iterator.hasNext()) {
             EntityPlayer entityplayer = (EntityPlayer) iterator.next();
 
-            entityplayer.removeQueue.add(Integer.valueOf(this.tracker.id));
+            entityplayer.playerConnection.sendPacket(new Packet29DestroyEntity(this.tracker.id)); // SportBukkit
         }
     }
 
     public void a(EntityPlayer entityplayer) {
         if (this.trackedPlayers.contains(entityplayer)) {
-            entityplayer.removeQueue.add(Integer.valueOf(this.tracker.id));
+            entityplayer.playerConnection.sendPacket(new Packet29DestroyEntity(this.tracker.id)); // SportBukkit
             this.trackedPlayers.remove(entityplayer);
         }
     }
@@ -312,7 +312,7 @@ public class EntityTrackerEntry {
                         }
                     }
 
-                    entityplayer.removeQueue.remove(Integer.valueOf(this.tracker.id));
+                    entityplayer.playerConnection.sendPacket(new Packet29DestroyEntity(this.tracker.id)); // SportBukkit
                     // CraftBukkit end
 
                     this.trackedPlayers.add(entityplayer);
@@ -399,7 +399,7 @@ public class EntityTrackerEntry {
                 }
             } else if (this.trackedPlayers.contains(entityplayer)) {
                 this.trackedPlayers.remove(entityplayer);
-                entityplayer.removeQueue.add(Integer.valueOf(this.tracker.id));
+                entityplayer.playerConnection.sendPacket(new Packet29DestroyEntity(this.tracker.id)); // SportBukkit
             }
         }
     }
@@ -522,7 +522,7 @@ public class EntityTrackerEntry {
         if (Thread.currentThread() != MinecraftServer.getServer().primaryThread) throw new IllegalStateException("Asynchronous player tracker clear!"); // Spigot
         if (this.trackedPlayers.contains(entityplayer)) {
             this.trackedPlayers.remove(entityplayer);
-            entityplayer.removeQueue.add(Integer.valueOf(this.tracker.id));
+            entityplayer.playerConnection.sendPacket(new Packet29DestroyEntity(this.tracker.id)); // SportBukkit
         }
     }
 }
-- 
1.8.3.4

