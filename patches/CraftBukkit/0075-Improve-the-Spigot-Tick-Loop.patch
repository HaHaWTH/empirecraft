From 3e5f379ae8ac5c35543f8de8594969d992d7d840 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Wed, 27 Aug 2014 23:05:37 -0400
Subject: [PATCH] Improve the Spigot Tick Loop

Adds a 1 ms padding to the sleep to prevent under sleeping (which happens a lot) and causes TPS loss.
Also increase the catchup TPS buffer
---
 src/main/java/net/minecraft/server/MinecraftServer.java | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index b7421d0..f1bfb52 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -110,6 +110,7 @@ public abstract class MinecraftServer implements ICommandListener, Runnable, IMo
     // Spigot start
     private static final int TPS = 20;
     private static final int TICK_TIME = 1000000000 / TPS;
+    private static final long MAX_CATCHUP_BUFFER = TICK_TIME * TPS * 60L;
     private static final int SAMPLE_INTERVAL = 100;
     public final double[] recentTps = new double[ 3 ];
     // Spigot end
@@ -465,16 +466,16 @@ public abstract class MinecraftServer implements ICommandListener, Runnable, IMo
 
                 // Spigot start
                 Arrays.fill( recentTps, 20 );
-                long lastTick = System.nanoTime(), catchupTime = 0, curTime, wait, tickSection = lastTick;
+                long lastTick = System.nanoTime() - TICK_TIME, catchupTime = 0, curTime, wait, tickSection = lastTick;
                 while (this.isRunning) {
                     curTime = System.nanoTime();
                     wait = TICK_TIME - (curTime - lastTick) - catchupTime;
                     if (wait > 0) {
-                        Thread.sleep(wait / 1000000);
+                        Thread.sleep(wait / 1000000, 999999);
                         catchupTime = 0;
                         continue;
                     } else {
-                        catchupTime = Math.min(1000000000, Math.abs(wait));
+                        catchupTime = Math.min(MAX_CATCHUP_BUFFER, Math.abs(wait));
                     }
 
                     if ( MinecraftServer.currentTick++ % SAMPLE_INTERVAL == 0 )
-- 
1.9.1

