From 5b362e3bdcfa06588e16d626f624c4c0a1ddd4d0 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sat, 26 Jan 2013 23:55:26 -0500
Subject: [PATCH] Store up to 1 second of catch up time to maximize TPS
 potential for heavier ticks.

---
 src/main/java/net/minecraft/server/MinecraftServer.java             | 6 +++++-
 .../java/org/bukkit/craftbukkit/command/TicksPerSecondCommand.java  | 2 +-
 2 files changed, 6 insertions(+), 2 deletions(-)

diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 248fd40..0c93a63 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -90,6 +90,7 @@ public abstract class MinecraftServer implements ICommandListener, Runnable, IMo
     private static final int TPS = 20;
     private static final int TICK_TIME = 1000000000 / TPS;
     public static double currentTPS = 0;
+    public static long catchupTime = 0;
     // Spigot end
 
     public MinecraftServer(OptionSet options) { // CraftBukkit - signature file -> OptionSet
@@ -407,10 +408,13 @@ public abstract class MinecraftServer implements ICommandListener, Runnable, IMo
                 // Spigot start
                 for (long lastTick = 0L; this.isRunning; this.Q = true) {
                     long curTime = System.nanoTime();
-                    long wait = TICK_TIME - (curTime - lastTick);
+                    long wait = TICK_TIME - (curTime - lastTick) - catchupTime;
                     if (wait > 0) {
                         Thread.sleep(wait / 1000000);
+                        catchupTime = 0;
                         continue;
+                    } else {
+                        catchupTime = Math.min(TICK_TIME * TPS, Math.abs(wait));
                     }
                     currentTPS = (currentTPS * 0.95) + (1E9 / (curTime - lastTick) * 0.05);
                     lastTick = curTime;
diff --git a/src/main/java/org/bukkit/craftbukkit/command/TicksPerSecondCommand.java b/src/main/java/org/bukkit/craftbukkit/command/TicksPerSecondCommand.java
index e30615f..67f972d 100644
--- a/src/main/java/org/bukkit/craftbukkit/command/TicksPerSecondCommand.java
+++ b/src/main/java/org/bukkit/craftbukkit/command/TicksPerSecondCommand.java
@@ -18,7 +18,7 @@ public class TicksPerSecondCommand extends Command {
     public boolean execute(CommandSender sender, String currentAlias, String[] args) {
         if (!testPermission(sender)) return true;
 
-        double tps = (double) Math.round(MinecraftServer.currentTPS * 10) / 10;
+        double tps = Math.min(20, (double) Math.round(MinecraftServer.currentTPS * 10) / 10);
         ChatColor color;
         if (tps > 19.2D) {
             color = ChatColor.GREEN;
-- 
1.8.0.3

