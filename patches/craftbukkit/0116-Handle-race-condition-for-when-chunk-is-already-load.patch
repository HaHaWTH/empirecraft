From 239d6323f96d64477329aaef2428e95a25bb8b26 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sat, 19 Sep 2015 00:56:28 -0400
Subject: [PATCH] Handle race condition for when chunk is already loaded after
 async load

CraftWorld.loadChunk can load the chunk while an async load is in progress.
When the async stage 2 calls, it was not checking to make sure the chunk
wasn't already loaded first, resulting in entities being duplicated.
---
 .../java/org/bukkit/craftbukkit/chunkio/ChunkIOProvider.java     | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/src/main/java/org/bukkit/craftbukkit/chunkio/ChunkIOProvider.java b/src/main/java/org/bukkit/craftbukkit/chunkio/ChunkIOProvider.java
index 1178ad7..90e67ff 100644
--- a/src/main/java/org/bukkit/craftbukkit/chunkio/ChunkIOProvider.java
+++ b/src/main/java/org/bukkit/craftbukkit/chunkio/ChunkIOProvider.java
@@ -42,10 +42,15 @@ class ChunkIOProvider implements AsynchronousExecutor.CallBackProvider<QueuedChu
             queuedChunk.provider.originalGetChunkAt(queuedChunk.x, queuedChunk.z);
             return;
         }
-
+        final long chunkKey = LongHash.toLong(queuedChunk.x, queuedChunk.z);
+        // Check if something else (CraftWorld.loadChunk?) beat us to it
+        if (queuedChunk.provider.chunks.containsKey(chunkKey)) {
+            return;
+        }
         queuedChunk.loader.loadEntities(chunk, queuedChunk.compound.getCompound("Level"), queuedChunk.world);
         chunk.setLastSaved(queuedChunk.provider.world.getTime());
-        queuedChunk.provider.chunks.put(LongHash.toLong(queuedChunk.x, queuedChunk.z), chunk);
+
+        queuedChunk.provider.chunks.put(chunkKey, chunk);
         chunk.addEntities();
 
         if (queuedChunk.provider.chunkProvider != null) {
-- 
1.9.1

