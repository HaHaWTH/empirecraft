From 0b59d131cb3289ccdc25d8d79d2e067beb9bd898 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Wed, 12 Mar 2014 21:29:01 -0400
Subject: [PATCH] Misc Utils

Adds Misc Util functions to be used by future commits
---
 .../com/empireminecraft/cbmisc/CBMiscUtils.java    | 73 ++++++++++++++++++++++
 1 file changed, 73 insertions(+)
 create mode 100644 src/main/java/com/empireminecraft/cbmisc/CBMiscUtils.java

diff --git a/src/main/java/com/empireminecraft/cbmisc/CBMiscUtils.java b/src/main/java/com/empireminecraft/cbmisc/CBMiscUtils.java
new file mode 100644
index 0000000..63d6fc5
--- /dev/null
+++ b/src/main/java/com/empireminecraft/cbmisc/CBMiscUtils.java
@@ -0,0 +1,73 @@
+package com.empireminecraft.cbmisc;
+
+import net.minecraft.server.DamageSource;
+import net.minecraft.server.Entity;
+import net.minecraft.server.EntityDamageSource;
+import net.minecraft.server.EntityDamageSourceIndirect;
+import org.apache.commons.lang.exception.ExceptionUtils;
+import org.bukkit.Bukkit;
+import org.bukkit.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.entity.Projectile;
+import org.bukkit.entity.ThrownPotion;
+import org.bukkit.event.entity.EntityDamageEvent;
+
+public class CBMiscUtils {
+    public static EntityDamageEvent.DamageCause getCause(DamageSource source) {
+        if (source.isExplosion()) {
+            return EntityDamageEvent.DamageCause.BLOCK_EXPLOSION;
+        } else if (source instanceof EntityDamageSource) {
+            Entity damager;
+            if (source instanceof EntityDamageSourceIndirect) {
+                damager = ((EntityDamageSourceIndirect) source).getProximateDamageSource();
+                if (damager.getBukkitEntity() instanceof ThrownPotion) {
+                    return EntityDamageEvent.DamageCause.MAGIC;
+                } else if (damager.getBukkitEntity() instanceof Projectile) {
+                    return EntityDamageEvent.DamageCause.PROJECTILE;
+                } else {
+                    return EntityDamageEvent.DamageCause.ENTITY_ATTACK;
+                }
+            } else if ("thorns".equals(source.translationIndex)) {
+                return EntityDamageEvent.DamageCause.THORNS;
+            } else {
+                return EntityDamageEvent.DamageCause.ENTITY_ATTACK;
+            }
+        } else {
+            if (source == DamageSource.OUT_OF_WORLD) {
+                return EntityDamageEvent.DamageCause.VOID;
+            } else if (source == DamageSource.FIRE) {
+                return EntityDamageEvent.DamageCause.FIRE;
+            } else if (source == DamageSource.STARVE) {
+                return EntityDamageEvent.DamageCause.STARVATION;
+            } else if (source == DamageSource.WITHER) {
+                return EntityDamageEvent.DamageCause.WITHER;
+            } else if (source == DamageSource.STUCK) {
+                return EntityDamageEvent.DamageCause.SUFFOCATION;
+            } else if (source == DamageSource.DROWN) {
+                return EntityDamageEvent.DamageCause.DROWNING;
+            } else if (source == DamageSource.BURN) {
+                return EntityDamageEvent.DamageCause.FIRE_TICK;
+            } else if (source == CraftEventFactory.MELTING) {
+                return EntityDamageEvent.DamageCause.MELTING;
+            } else if (source == CraftEventFactory.POISON) {
+                return EntityDamageEvent.DamageCause.POISON;
+            } else if (source == DamageSource.MAGIC) {
+                return EntityDamageEvent.DamageCause.MAGIC;
+            } else {
+                return EntityDamageEvent.DamageCause.CUSTOM;
+            }
+        }
+    }
+
+    public static void clearEntityMeta() {
+        for (World world : Bukkit.getWorlds()) {
+            for (org.bukkit.entity.Entity entity : world.getEntities()) {
+                entity.getTempMeta().clear();
+            }
+        }
+    }
+
+    public static String stack() {
+        return ExceptionUtils.getFullStackTrace(new Throwable());
+    }
+}
-- 
1.9.1

