From cd3b9ecd6d33d27ec3c4e0815d9d9d3dcbd4b187 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Wed, 14 Oct 2015 20:46:31 -0400
Subject: [PATCH] Timings v2 - Tile Entity Removal

---
 src/main/java/net/minecraft/server/World.java               | 5 ++++-
 src/main/java/org/spigotmc/timings/WorldTimingsHandler.java | 2 ++
 2 files changed, 6 insertions(+), 1 deletion(-)

diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index 0c401a7..09de6b7 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -1490,17 +1490,20 @@ public abstract class World implements IBlockAccess {
 
         timings.entityTick.stopTiming(); // Spigot
         this.methodProfiler.c("blockEntities");
-        timings.tileEntityTick.startTiming(); // Spigot
+
         this.M = true;
         // CraftBukkit start - From below, clean up tile entities before ticking them
         if (!this.c.isEmpty()) {
+            timings.tileEntityRemovalTick.startTiming(); // Spigot
             tileTickPosition = org.spigotmc.OptimizedRemoveAll.removeAll(this.tileEntityList, this.c, tileTickPosition); // Spigot
             // this.h.removeAll(this.c); // Spigot - Unused List
             this.c.clear();
+            timings.tileEntityRemovalTick.stopTiming(); // Spigot
         }
         // CraftBukkit end
 
         // Spigot start
+        timings.tileEntityTick.startTiming();
         int tilesThisCycle = 0;
         for (tileLimiter.initTick();
                 tilesThisCycle < tileEntityList.size() /*&& (tilesThisCycle % 10 == 0 || tileLimiter.shouldContinue())*/; // EMC
diff --git a/src/main/java/org/spigotmc/timings/WorldTimingsHandler.java b/src/main/java/org/spigotmc/timings/WorldTimingsHandler.java
index e1c7987..8fa2681 100644
--- a/src/main/java/org/spigotmc/timings/WorldTimingsHandler.java
+++ b/src/main/java/org/spigotmc/timings/WorldTimingsHandler.java
@@ -21,6 +21,7 @@ public class WorldTimingsHandler {
     public final Timing entityRemoval;
     public final Timing entityTick;
     public final Timing tileEntityTick;
+    public final Timing tileEntityRemovalTick;
     public final Timing tileEntityPending;
     public final Timing tracker;
     public final Timing doTick;
@@ -52,6 +53,7 @@ public class WorldTimingsHandler {
         entityTick = Timings.ofSafe(name + "entityTick");
         entityRemoval = Timings.ofSafe(name + "entityRemoval");
         tileEntityTick = Timings.ofSafe(name + "tileEntityTick");
+        tileEntityRemovalTick = Timings.ofSafe(name + "tileEntity - removeAll");
         tileEntityPending = Timings.ofSafe(name + "tileEntityPending");
 
         syncChunkLoadTimer = Timings.ofSafe(name + "syncChunkLoad");
-- 
2.6.1

