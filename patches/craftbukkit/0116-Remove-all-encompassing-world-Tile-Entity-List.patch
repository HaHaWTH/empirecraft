From 37f312ab4b7bb80a6c72e143dabc45ebaa4fb298 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Tue, 6 Oct 2015 23:50:48 -0400
Subject: [PATCH] Remove all-encompassing world Tile Entity List

This list is completely unused and kills performance with Tile Entity removals
---
 src/main/java/net/minecraft/server/World.java | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index 22d5387..ef40157 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -63,7 +63,7 @@ public abstract class World implements IBlockAccess {
     }; */ // EMC
     // Spigot end
     protected final List<Entity> g = Lists.newArrayList();
-    public final List<TileEntity> h = Lists.newArrayList();
+    // public final List<TileEntity> h = Lists.newArrayList(); // Spigot - Unused List
     public final List<TileEntity> tileEntityList = Lists.newArrayList();
     private final List<TileEntity> b = Lists.newArrayList();
     private final List<TileEntity> c = Lists.newArrayList();
@@ -1493,7 +1493,7 @@ public abstract class World implements IBlockAccess {
         // CraftBukkit start - From below, clean up tile entities before ticking them
         if (!this.c.isEmpty()) {
             this.tileEntityList.removeAll(this.c);
-            this.h.removeAll(this.c);
+            // this.h.removeAll(this.c); // Spigot - Unused List
             this.c.clear();
         }
         // CraftBukkit end
@@ -1546,7 +1546,7 @@ public abstract class World implements IBlockAccess {
             if (tileentity.x()) {
                 tilesThisCycle--;
                 this.tileEntityList.remove(tileTickPosition--);
-                this.h.remove(tileentity);
+                // this.h.remove(tileentity); // Spigot - unused list
                 if (this.isLoaded(tileentity.getPosition())) {
                     this.getChunkAtWorldCoords(tileentity.getPosition()).e(tileentity.getPosition());
                 }
@@ -1595,7 +1595,7 @@ public abstract class World implements IBlockAccess {
     }
 
     public boolean a(TileEntity tileentity) {
-        boolean flag = this.h.add(tileentity);
+        boolean flag = true; // Spigot - unused list
 
         if (flag && tileentity instanceof IUpdatePlayerListBox) {
             this.tileEntityList.add(tileentity);
@@ -1613,7 +1613,7 @@ public abstract class World implements IBlockAccess {
             while (iterator.hasNext()) {
                 TileEntity tileentity = (TileEntity) iterator.next();
 
-                this.h.add(tileentity);
+                // this.h.add(tileentity); // Spigot - unused list
                 if (tileentity instanceof IUpdatePlayerListBox) {
                     this.tileEntityList.add(tileentity);
                 }
@@ -2042,7 +2042,7 @@ public abstract class World implements IBlockAccess {
         } else {
             if (tileentity != null) {
                 this.b.remove(tileentity);
-                this.h.remove(tileentity);
+                // this.h.remove(tileentity); // Spigot - Unused list
                 this.tileEntityList.remove(tileentity);
             }
 
-- 
2.6.2

