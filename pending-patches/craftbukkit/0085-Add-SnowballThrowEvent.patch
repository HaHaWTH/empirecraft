From dc8780ab74da31b249652ac9a32222079ff89796 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Wed, 17 Dec 2014 01:14:31 -0500
Subject: [PATCH] Add SnowballThrowEvent

---
 .../customevents/SnowballThrowEvent.java           | 65 ++++++++++++++++++++++
 .../java/net/minecraft/server/ItemSnowball.java    | 17 +++++-
 2 files changed, 80 insertions(+), 2 deletions(-)
 create mode 100644 src/main/java/com/empireminecraft/customevents/SnowballThrowEvent.java

diff --git a/src/main/java/com/empireminecraft/customevents/SnowballThrowEvent.java b/src/main/java/com/empireminecraft/customevents/SnowballThrowEvent.java
new file mode 100644
index 0000000..ed8019e
--- /dev/null
+++ b/src/main/java/com/empireminecraft/customevents/SnowballThrowEvent.java
@@ -0,0 +1,65 @@
+package com.empireminecraft.customevents;
+
+import net.minecraft.server.EntityHuman;
+import net.minecraft.server.EntitySnowball;
+import net.minecraft.server.ItemStack;
+import org.bukkit.entity.Player;
+import org.bukkit.entity.Snowball;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.Event;
+import org.bukkit.event.HandlerList;
+
+public class SnowballThrowEvent extends Event implements Cancellable {
+    private final org.bukkit.inventory.ItemStack item;
+    private final Snowball entity;
+    private final Player player;
+    private boolean consumeOnThrow = true;
+    public SnowballThrowEvent(EntityHuman player, ItemStack item, EntitySnowball entity) {
+        this.player = (Player) player.getBukkitEntity();
+        this.entity = (Snowball) entity.getBukkitEntity();
+        this.item = item.getBukkitStack();
+        this.consumeOnThrow = !player.abilities.canInstantlyBuild;
+    }
+
+    public boolean shouldConsumeOnThrow() {
+        return consumeOnThrow;
+    }
+
+    public void setConsumeOnThrow(boolean consumeOnThrow) {
+        this.consumeOnThrow = consumeOnThrow;
+    }
+
+    public Player getPlayer() {
+        return player;
+    }
+
+    public Snowball getEntity() {
+        return entity;
+    }
+
+    public org.bukkit.inventory.ItemStack getItem() {
+        return item;
+    }
+
+    private static final HandlerList handlers = new HandlerList();
+
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+
+    private boolean cancelled = false;
+
+    @Override
+    public boolean isCancelled() {
+        return cancelled;
+    }
+
+    @Override
+    public void setCancelled(boolean cancel) {
+        cancelled = cancel;
+    }
+}
diff --git a/src/main/java/net/minecraft/server/ItemSnowball.java b/src/main/java/net/minecraft/server/ItemSnowball.java
index 9a527a5..f9dd38d 100644
--- a/src/main/java/net/minecraft/server/ItemSnowball.java
+++ b/src/main/java/net/minecraft/server/ItemSnowball.java
@@ -1,5 +1,7 @@
 package net.minecraft.server;
 
+import com.empireminecraft.customevents.SnowballThrowEvent; // EMC
+
 public class ItemSnowball extends Item {
 
     public ItemSnowball() {
@@ -8,13 +10,24 @@ public class ItemSnowball extends Item {
     }
 
     public ItemStack a(ItemStack itemstack, World world, EntityHuman entityhuman) {
-        if (!entityhuman.abilities.canInstantlyBuild) {
+        // EMC start
+        EntitySnowball entity = new EntitySnowball(world, entityhuman);
+        if (!world.addEntity(entity)) {
+            return itemstack;
+        }
+        SnowballThrowEvent event = new SnowballThrowEvent(entityhuman, itemstack, entity);
+        if (!event.callEvent()) {
+            entity.die();
+            return itemstack;
+        }
+        if (event.shouldConsumeOnThrow()) {
+        // EMC end
             --itemstack.count;
         }
 
         world.makeSound(entityhuman, "random.bow", 0.5F, 0.4F / (g.nextFloat() * 0.4F + 0.8F));
         if (!world.isStatic) {
-            world.addEntity(new EntitySnowball(world, entityhuman));
+            //world.addEntity(new EntitySnowball(world, entityhuman)); // EMC
         }
 
         return itemstack;
-- 
1.9.1

